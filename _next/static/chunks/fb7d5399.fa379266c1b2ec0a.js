"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3737],{2509:function(a,b,c){c.r(b),c.d(b,{ACESFilmicToneMapping:function(){return ac},AddEquation:function(){return z},AddOperation:function(){return Z},AdditiveAnimationBlendMode:function(){return bs},AdditiveBlending:function(){return v},AlphaFormat:function(){return aI},AlwaysDepth:function(){return Q},AlwaysStencilFunc:function(){return bU},AmbientLight:function(){return kg},AmbientLightProbe:function(){return kx},AnimationClip:function(){return jP},AnimationLoader:function(){return jX},AnimationMixer:function(){return k2},AnimationObjectGroup:function(){return k0},AnimationUtils:function(){return jC},ArcCurve:function(){return h5},ArrayCamera:function(){return gW},ArrowHelper:function(){return lJ},Audio:function(){return kJ},AudioAnalyser:function(){return kP},AudioContext:function(){return ku},AudioListener:function(){return kI},AudioLoader:function(){return kv},AxesHelper:function(){return lK},AxisHelper:function(){return mq},BackSide:function(){return p},BasicDepthPacking:function(){return by},BasicShadowMap:function(){return k},BinaryTextureLoader:function(){return mv},Bone:function(){return hy},BooleanKeyframeTrack:function(){return jI},BoundingBoxHelper:function(){return mr},Box2:function(){return lc},Box3:function(){return cT},Box3Helper:function(){return lE},BoxBufferGeometry:function(){return eA},BoxGeometry:function(){return eA},BoxHelper:function(){return lD},BufferAttribute:function(){return d$},BufferGeometry:function(){return eg},BufferGeometryLoader:function(){return kn},ByteType:function(){return ay},Cache:function(){return jR},Camera:function(){return eF},CameraHelper:function(){return lA},CanvasRenderer:function(){return mx},CanvasTexture:function(){return h2},CapsuleBufferGeometry:function(){return is},CapsuleGeometry:function(){return is},CatmullRomCurve3:function(){return ib},CineonToneMapping:function(){return ab},CircleBufferGeometry:function(){return it},CircleGeometry:function(){return it},ClampToEdgeWrapping:function(){return al},Clock:function(){return kC},Color:function(){return cB},ColorKeyframeTrack:function(){return jJ},ColorManagement:function(){return cu},CompressedTexture:function(){return h1},CompressedTextureLoader:function(){return jY},ConeBufferGeometry:function(){return iv},ConeGeometry:function(){return iv},CubeCamera:function(){return eH},CubeReflectionMapping:function(){return af},CubeRefractionMapping:function(){return ag},CubeTexture:function(){return eI},CubeTextureLoader:function(){return j$},CubeUVReflectionMapping:function(){return aj},CubicBezierCurve:function(){return ig},CubicBezierCurve3:function(){return ih},CubicInterpolant:function(){return jE},CullFaceBack:function(){return h},CullFaceFront:function(){return i},CullFaceFrontBack:function(){return j},CullFaceNone:function(){return g},Curve:function(){return h3},CurvePath:function(){return ip},CustomBlending:function(){return y},CustomToneMapping:function(){return ad},CylinderBufferGeometry:function(){return iu},CylinderGeometry:function(){return iu},Cylindrical:function(){return la},Data3DTexture:function(){return cM},DataArrayTexture:function(){return cK},DataTexture:function(){return hz},DataTexture2DArray:function(){return mH},DataTexture3D:function(){return mI},DataTextureLoader:function(){return j_},DataUtils:function(){return lM},DecrementStencilOp:function(){return bJ},DecrementWrapStencilOp:function(){return bL},DefaultLoadingManager:function(){return jT},DepthFormat:function(){return aN},DepthStencilFormat:function(){return aO},DepthTexture:function(){return g$},DirectionalLight:function(){return kf},DirectionalLightHelper:function(){return lx},DiscreteInterpolant:function(){return jG},DodecahedronBufferGeometry:function(){return ix},DodecahedronGeometry:function(){return ix},DoubleSide:function(){return q},DstAlphaFactor:function(){return K},DstColorFactor:function(){return M},DynamicBufferAttribute:function(){return mg},DynamicCopyUsage:function(){return b0},DynamicDrawUsage:function(){return bW},DynamicReadUsage:function(){return bZ},EdgesGeometry:function(){return iC},EdgesHelper:function(){return ms},EllipseCurve:function(){return h4},EqualDepth:function(){return T},EqualStencilFunc:function(){return bP},EquirectangularReflectionMapping:function(){return ah},EquirectangularRefractionMapping:function(){return ai},Euler:function(){return du},EventDispatcher:function(){return b5},ExtrudeBufferGeometry:function(){return jb},ExtrudeGeometry:function(){return jb},FaceColors:function(){return l5},FileLoader:function(){return jW},FlatShading:function(){return r},Float16BufferAttribute:function(){return d6},Float32Attribute:function(){return mo},Float32BufferAttribute:function(){return d7},Float64Attribute:function(){return mp},Float64BufferAttribute:function(){return d8},FloatType:function(){return aD},Fog:function(){return g4},FogExp2:function(){return g3},Font:function(){return mE},FontLoader:function(){return mD},FramebufferTexture:function(){return h0},FrontSide:function(){return o},Frustum:function(){return eQ},GLBufferAttribute:function(){return k5},GLSL1:function(){return b2},GLSL3:function(){return b3},GreaterDepth:function(){return V},GreaterEqualDepth:function(){return U},GreaterEqualStencilFunc:function(){return bT},GreaterStencilFunc:function(){return bR},GridHelper:function(){return ls},Group:function(){return gX},HalfFloatType:function(){return aE},HemisphereLight:function(){return j2},HemisphereLightHelper:function(){return lr},HemisphereLightProbe:function(){return kw},IcosahedronBufferGeometry:function(){return je},IcosahedronGeometry:function(){return je},ImageBitmapLoader:function(){return ks},ImageLoader:function(){return jZ},ImageUtils:function(){return cD},ImmediateRenderObject:function(){return mF},IncrementStencilOp:function(){return bI},IncrementWrapStencilOp:function(){return bK},InstancedBufferAttribute:function(){return hD},InstancedBufferGeometry:function(){return km},InstancedInterleavedBuffer:function(){return k4},InstancedMesh:function(){return hI},Int16Attribute:function(){return mk},Int16BufferAttribute:function(){return d2},Int32Attribute:function(){return mm},Int32BufferAttribute:function(){return d4},Int8Attribute:function(){return mh},Int8BufferAttribute:function(){return d_},IntType:function(){return aB},InterleavedBuffer:function(){return g6},InterleavedBufferAttribute:function(){return g8},Interpolant:function(){return jD},InterpolateDiscrete:function(){return bl},InterpolateLinear:function(){return bm},InterpolateSmooth:function(){return bn},InvertStencilOp:function(){return bM},JSONLoader:function(){return my},KeepStencilOp:function(){return bG},KeyframeTrack:function(){return jH},LOD:function(){return hr},LatheBufferGeometry:function(){return ir},LatheGeometry:function(){return ir},Layers:function(){return dv},LensFlare:function(){return mA},LessDepth:function(){return R},LessEqualDepth:function(){return S},LessEqualStencilFunc:function(){return bQ},LessStencilFunc:function(){return bO},Light:function(){return j1},LightProbe:function(){return kj},Line:function(){return hP},Line3:function(){return lf},LineBasicMaterial:function(){return hJ},LineCurve:function(){return ii},LineCurve3:function(){return ij},LineDashedMaterial:function(){return jA},LineLoop:function(){return hT},LinePieces:function(){return l3},LineSegments:function(){return hS},LineStrip:function(){return l2},LinearEncoding:function(){return bw},LinearFilter:function(){return as},LinearInterpolant:function(){return jF},LinearMipMapLinearFilter:function(){return aw},LinearMipMapNearestFilter:function(){return au},LinearMipmapLinearFilter:function(){return av},LinearMipmapNearestFilter:function(){return at},LinearSRGBColorSpace:function(){return bE},LinearToneMapping:function(){return _},Loader:function(){return jU},LoaderUtils:function(){return kl},LoadingManager:function(){return jS},LoopOnce:function(){return bi},LoopPingPong:function(){return bk},LoopRepeat:function(){return bj},LuminanceAlphaFormat:function(){return aM},LuminanceFormat:function(){return aL},MOUSE:function(){return e},Material:function(){return dW},MaterialLoader:function(){return kk},Math:function(){return ck},MathUtils:function(){return ck},Matrix3:function(){return cm},Matrix4:function(){return dj},MaxEquation:function(){return D},Mesh:function(){return ey},MeshBasicMaterial:function(){return dX},MeshDepthMaterial:function(){return gQ},MeshDistanceMaterial:function(){return gR},MeshFaceMaterial:function(){return l7},MeshLambertMaterial:function(){return jy},MeshMatcapMaterial:function(){return jz},MeshNormalMaterial:function(){return jx},MeshPhongMaterial:function(){return jv},MeshPhysicalMaterial:function(){return ju},MeshStandardMaterial:function(){return jt},MeshToonMaterial:function(){return jw},MinEquation:function(){return C},MirroredRepeatWrapping:function(){return am},MixOperation:function(){return Y},MultiMaterial:function(){return l8},MultiplyBlending:function(){return x},MultiplyOperation:function(){return X},NearestFilter:function(){return an},NearestMipMapLinearFilter:function(){return ar},NearestMipMapNearestFilter:function(){return ap},NearestMipmapLinearFilter:function(){return aq},NearestMipmapNearestFilter:function(){return ao},NeverDepth:function(){return P},NeverStencilFunc:function(){return bN},NoBlending:function(){return t},NoColorSpace:function(){return bC},NoColors:function(){return l4},NoToneMapping:function(){return $},NormalAnimationBlendMode:function(){return br},NormalBlending:function(){return u},NotEqualDepth:function(){return W},NotEqualStencilFunc:function(){return bS},NumberKeyframeTrack:function(){return jK},Object3D:function(){return dJ},ObjectLoader:function(){return ko},ObjectSpaceNormalMap:function(){return bB},OctahedronBufferGeometry:function(){return jf},OctahedronGeometry:function(){return jf},OneFactor:function(){return F},OneMinusDstAlphaFactor:function(){return L},OneMinusDstColorFactor:function(){return N},OneMinusSrcAlphaFactor:function(){return J},OneMinusSrcColorFactor:function(){return H},OrthographicCamera:function(){return e1},PCFShadowMap:function(){return l},PCFSoftShadowMap:function(){return m},PMREMGenerator:function(){return e9},ParametricGeometry:function(){return mB},Particle:function(){return ma},ParticleBasicMaterial:function(){return md},ParticleSystem:function(){return mb},ParticleSystemMaterial:function(){return me},Path:function(){return iq},PerspectiveCamera:function(){return eG},Plane:function(){return eN},PlaneBufferGeometry:function(){return eT},PlaneGeometry:function(){return eT},PlaneHelper:function(){return lF},PointCloud:function(){return l9},PointCloudMaterial:function(){return mc},PointLight:function(){return kd},PointLightHelper:function(){return ln},Points:function(){return hZ},PointsMaterial:function(){return hU},PolarGridHelper:function(){return lt},PolyhedronBufferGeometry:function(){return iw},PolyhedronGeometry:function(){return iw},PositionalAudio:function(){return kO},PropertyBinding:function(){return k_},PropertyMixer:function(){return kQ},QuadraticBezierCurve:function(){return ik},QuadraticBezierCurve3:function(){return il},Quaternion:function(){return cP},QuaternionKeyframeTrack:function(){return jM},QuaternionLinearInterpolant:function(){return jL},REVISION:function(){return d},RGBADepthPacking:function(){return bz},RGBAFormat:function(){return aK},RGBAIntegerFormat:function(){return aT},RGBA_ASTC_10x10_Format:function(){return be},RGBA_ASTC_10x5_Format:function(){return bb},RGBA_ASTC_10x6_Format:function(){return bc},RGBA_ASTC_10x8_Format:function(){return bd},RGBA_ASTC_12x10_Format:function(){return bf},RGBA_ASTC_12x12_Format:function(){return bg},RGBA_ASTC_4x4_Format:function(){return a3},RGBA_ASTC_5x4_Format:function(){return a4},RGBA_ASTC_5x5_Format:function(){return a5},RGBA_ASTC_6x5_Format:function(){return a6},RGBA_ASTC_6x6_Format:function(){return a7},RGBA_ASTC_8x5_Format:function(){return a8},RGBA_ASTC_8x6_Format:function(){return a9},RGBA_ASTC_8x8_Format:function(){return ba},RGBA_BPTC_Format:function(){return bh},RGBA_ETC2_EAC_Format:function(){return a2},RGBA_PVRTC_2BPPV1_Format:function(){return a_},RGBA_PVRTC_4BPPV1_Format:function(){return a$},RGBA_S3TC_DXT1_Format:function(){return aV},RGBA_S3TC_DXT3_Format:function(){return aW},RGBA_S3TC_DXT5_Format:function(){return aX},RGBFormat:function(){return aJ},RGB_ETC1_Format:function(){return a0},RGB_ETC2_Format:function(){return a1},RGB_PVRTC_2BPPV1_Format:function(){return aZ},RGB_PVRTC_4BPPV1_Format:function(){return aY},RGB_S3TC_DXT1_Format:function(){return aU},RGFormat:function(){return aR},RGIntegerFormat:function(){return aS},RawShaderMaterial:function(){return js},Ray:function(){return di},Raycaster:function(){return k6},RectAreaLight:function(){return kh},RedFormat:function(){return aP},RedIntegerFormat:function(){return aQ},ReinhardToneMapping:function(){return aa},RepeatWrapping:function(){return ak},ReplaceStencilOp:function(){return bH},ReverseSubtractEquation:function(){return B},RingBufferGeometry:function(){return jg},RingGeometry:function(){return jg},SRGBColorSpace:function(){return bD},Scene:function(){return g5},SceneUtils:function(){return mz},ShaderChunk:function(){return eU},ShaderLib:function(){return eW},ShaderMaterial:function(){return eE},ShadowMaterial:function(){return jr},Shape:function(){return iD},ShapeBufferGeometry:function(){return jh},ShapeGeometry:function(){return jh},ShapePath:function(){return lL},ShapeUtils:function(){return i8},ShortType:function(){return az},Skeleton:function(){return hC},SkeletonHelper:function(){return ll},SkinnedMesh:function(){return hx},SmoothShading:function(){return s},Source:function(){return cE},Sphere:function(){return da},SphereBufferGeometry:function(){return jj},SphereGeometry:function(){return jj},Spherical:function(){return k9},SphericalHarmonics3:function(){return ki},SplineCurve:function(){return im},SpotLight:function(){return j8},SpotLightHelper:function(){return lh},Sprite:function(){return hn},SpriteMaterial:function(){return g9},SrcAlphaFactor:function(){return I},SrcAlphaSaturateFactor:function(){return O},SrcColorFactor:function(){return G},StaticCopyUsage:function(){return b_},StaticDrawUsage:function(){return bV},StaticReadUsage:function(){return bY},StereoCamera:function(){return kB},StreamCopyUsage:function(){return b1},StreamDrawUsage:function(){return bX},StreamReadUsage:function(){return b$},StringKeyframeTrack:function(){return jN},SubtractEquation:function(){return A},SubtractiveBlending:function(){return w},TOUCH:function(){return f},TangentSpaceNormalMap:function(){return bA},TetrahedronBufferGeometry:function(){return jk},TetrahedronGeometry:function(){return jk},TextGeometry:function(){return mC},Texture:function(){return cH},TextureLoader:function(){return j0},TorusBufferGeometry:function(){return jl},TorusGeometry:function(){return jl},TorusKnotBufferGeometry:function(){return jm},TorusKnotGeometry:function(){return jm},Triangle:function(){return dU},TriangleFanDrawMode:function(){return bv},TriangleStripDrawMode:function(){return bu},TrianglesDrawMode:function(){return bt},TubeBufferGeometry:function(){return jn},TubeGeometry:function(){return jn},UVMapping:function(){return ae},Uint16Attribute:function(){return ml},Uint16BufferAttribute:function(){return d3},Uint32Attribute:function(){return mn},Uint32BufferAttribute:function(){return d5},Uint8Attribute:function(){return mi},Uint8BufferAttribute:function(){return d0},Uint8ClampedAttribute:function(){return mj},Uint8ClampedBufferAttribute:function(){return d1},Uniform:function(){return k3},UniformsLib:function(){return eV},UniformsUtils:function(){return eD},UnsignedByteType:function(){return ax},UnsignedInt248Type:function(){return aH},UnsignedIntType:function(){return aC},UnsignedShort4444Type:function(){return aF},UnsignedShort5551Type:function(){return aG},UnsignedShortType:function(){return aA},VSMShadowMap:function(){return n},Vector2:function(){return cl},Vector3:function(){return cQ},Vector4:function(){return cI},VectorKeyframeTrack:function(){return jO},Vertex:function(){return mf},VertexColors:function(){return l6},VideoTexture:function(){return h_},WebGL1Renderer:function(){return g2},WebGL3DRenderTarget:function(){return cN},WebGLArrayRenderTarget:function(){return cL},WebGLCubeRenderTarget:function(){return eJ},WebGLMultipleRenderTargets:function(){return cO},WebGLMultisampleRenderTarget:function(){return mG},WebGLRenderTarget:function(){return cJ},WebGLRenderTargetCube:function(){return mw},WebGLRenderer:function(){return g1},WebGLUtils:function(){return gV},WireframeGeometry:function(){return jo},WireframeHelper:function(){return mt},WrapAroundEnding:function(){return bq},XHRLoader:function(){return mu},ZeroCurvatureEnding:function(){return bo},ZeroFactor:function(){return E},ZeroSlopeEnding:function(){return bp},ZeroStencilOp:function(){return bF},"_SRGBAFormat":function(){return b4},sRGBEncoding:function(){return bx}});let d="139",e={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},f={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},g=0,h=1,i=2,j=3,k=0,l=1,m=2,n=3,o=0,p=1,q=2,r=1,s=2,t=0,u=1,v=2,w=3,x=4,y=5,z=100,A=101,B=102,C=103,D=104,E=200,F=201,G=202,H=203,I=204,J=205,K=206,L=207,M=208,N=209,O=210,P=0,Q=1,R=2,S=3,T=4,U=5,V=6,W=7,X=0,Y=1,Z=2,$=0,_=1,aa=2,ab=3,ac=4,ad=5,ae=300,af=301,ag=302,ah=303,ai=304,aj=306,ak=1e3,al=1001,am=1002,an=1003,ao=1004,ap=1004,aq=1005,ar=1005,as=1006,at=1007,au=1007,av=1008,aw=1008,ax=1009,ay=1010,az=1011,aA=1012,aB=1013,aC=1014,aD=1015,aE=1016,aF=1017,aG=1018,aH=1020,aI=1021,aJ=1022,aK=1023,aL=1024,aM=1025,aN=1026,aO=1027,aP=1028,aQ=1029,aR=1030,aS=1031,aT=1033,aU=33776,aV=33777,aW=33778,aX=33779,aY=35840,aZ=35841,a$=35842,a_=35843,a0=36196,a1=37492,a2=37496,a3=37808,a4=37809,a5=37810,a6=37811,a7=37812,a8=37813,a9=37814,ba=37815,bb=37816,bc=37817,bd=37818,be=37819,bf=37820,bg=37821,bh=36492,bi=2200,bj=2201,bk=2202,bl=2300,bm=2301,bn=2302,bo=2400,bp=2401,bq=2402,br=2500,bs=2501,bt=0,bu=1,bv=2,bw=3e3,bx=3001,by=3200,bz=3201,bA=0,bB=1,bC="",bD="srgb",bE="srgb-linear",bF=0,bG=7680,bH=7681,bI=7682,bJ=7683,bK=34055,bL=34056,bM=5386,bN=512,bO=513,bP=514,bQ=515,bR=516,bS=517,bT=518,bU=519,bV=35044,bW=35048,bX=35040,bY=35045,bZ=35049,b$=35041,b_=35046,b0=35050,b1=35042,b2="100",b3="300 es",b4=1035;class b5{addEventListener(a,b){void 0===this._listeners&&(this._listeners={});let c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)}hasEventListener(a,b){if(void 0===this._listeners)return!1;let c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)}removeEventListener(a,b){if(void 0===this._listeners)return;let c=this._listeners,d=c[a];if(void 0!==d){let e=d.indexOf(b);-1!==e&&d.splice(e,1)}}dispatchEvent(a){if(void 0===this._listeners)return;let b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;let d=c.slice(0);for(let e=0,f=d.length;e<f;e++)d[e].call(this,a);a.target=null}}}let b6=[];for(let b7=0;b7<256;b7++)b6[b7]=(b7<16?"0":"")+b7.toString(16);let b8=1234567,b9=Math.PI/180,ca=180/Math.PI;function cb(){let a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0,e=b6[255&a]+b6[a>>8&255]+b6[a>>16&255]+b6[a>>24&255]+"-"+b6[255&b]+b6[b>>8&255]+"-"+b6[b>>16&15|64]+b6[b>>24&255]+"-"+b6[63&c|128]+b6[c>>8&255]+"-"+b6[c>>16&255]+b6[c>>24&255]+b6[255&d]+b6[d>>8&255]+b6[d>>16&255]+b6[d>>24&255];return e.toLowerCase()}function cc(a,b,c){return Math.max(b,Math.min(c,a))}function cd(a,b){return(a%b+b)%b}function ce(a,b,c){return(1-c)*a+c*b}function cf(a){return a*b9}function cg(a){return a*ca}function ch(a){return(a&a-1)==0&&0!==a}function ci(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function cj(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}var ck=Object.freeze({__proto__:null,DEG2RAD:b9,RAD2DEG:ca,generateUUID:cb,clamp:cc,euclideanModulo:cd,mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},inverseLerp:function(a,b,c){return a!==b?(c-a)/(b-a):0},lerp:ce,damp:function(a,b,c,d){return ce(a,b,1-Math.exp(-c*d))},pingpong:function(a,b=1){return b-Math.abs(cd(a,2*b)-b)},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*(3-2*a)},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},seededRandom:function(a){void 0!==a&&(b8=a);let b=b8+=1831565813;return b=Math.imul(b^b>>>15,1|b),(((b^=b+Math.imul(b^b>>>7,61|b))^b>>>14)>>>0)/4294967296},degToRad:cf,radToDeg:cg,isPowerOfTwo:ch,ceilPowerOfTwo:ci,floorPowerOfTwo:cj,setQuaternionFromProperEuler:function(a,b,c,d,e){let f=Math.cos,g=Math.sin,h=f(c/2),i=g(c/2),j=f((b+d)/2),k=g((b+d)/2),l=f((b-d)/2),m=g((b-d)/2),n=f((d-b)/2),o=g((d-b)/2);switch(e){case"XYX":a.set(h*k,i*l,i*m,h*j);break;case"YZY":a.set(i*m,h*k,i*l,h*j);break;case"ZXZ":a.set(i*l,i*m,h*k,h*j);break;case"XZX":a.set(h*k,i*o,i*n,h*j);break;case"YXY":a.set(i*n,h*k,i*o,h*j);break;case"ZYZ":a.set(i*o,i*n,h*k,h*j);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+e)}},normalize:function(a,b){switch(b.constructor){case Float32Array:return a;case Uint16Array:return Math.round(65535*a);case Uint8Array:return Math.round(255*a);case Int16Array:return Math.round(32767*a);case Int8Array:return Math.round(127*a);default:throw Error("Invalid component type.")}},denormalize:function(a,b){switch(b.constructor){case Float32Array:return a;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw Error("Invalid component type.")}}});class cl{constructor(a=0,b=0){this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(a){let b=this.x,c=this.y,d=a.elements;return this.x=d[0]*b+d[3]*c+d[6],this.y=d[1]*b+d[4]*c+d[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let a=Math.atan2(-this.y,-this.x)+Math.PI;return a}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}cl.prototype.isVector2=!0;class cm{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i){let j=this.elements;return j[0]=a,j[1]=d,j[2]=g,j[3]=b,j[4]=e,j[5]=h,j[6]=c,j[7]=f,j[8]=i,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(a){let b=a.elements;return this.set(b[0],b[4],b[8],b[1],b[5],b[9],b[2],b[6],b[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[3],h=c[6],i=c[1],j=c[4],k=c[7],l=c[2],m=c[5],n=c[8],o=d[0],p=d[3],q=d[6],r=d[1],s=d[4],t=d[7],u=d[2],v=d[5],w=d[8];return e[0]=f*o+g*r+h*u,e[3]=f*p+g*s+h*v,e[6]=f*q+g*t+h*w,e[1]=i*o+j*r+k*u,e[4]=i*p+j*s+k*v,e[7]=i*q+j*t+k*w,e[2]=l*o+m*r+n*u,e[5]=l*p+m*s+n*v,e[8]=l*q+m*t+n*w,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=j*f-g*i,l=g*h-j*e,m=i*e-f*h,n=b*k+c*l+d*m;if(0===n)return this.set(0,0,0,0,0,0,0,0,0);let o=1/n;return a[0]=k*o,a[1]=(d*i-j*c)*o,a[2]=(g*c-d*f)*o,a[3]=l*o,a[4]=(j*b-d*h)*o,a[5]=(d*e-g*b)*o,a[6]=m*o,a[7]=(c*h-i*b)*o,a[8]=(f*b-c*e)*o,this}transpose(){let a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this}getNormalMatrix(a){return this.setFromMatrix4(a).invert().transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(a,b,c,d,e,f,g){let h=Math.cos(e),i=Math.sin(e);return this.set(c*h,c*i,-c*(h*f+i*g)+f+a,-d*i,d*h,-d*(-i*f+h*g)+g+b,0,0,1),this}scale(a,b){let c=this.elements;return c[0]*=a,c[3]*=a,c[6]*=a,c[1]*=b,c[4]*=b,c[7]*=b,this}rotate(a){let b=Math.cos(a),c=Math.sin(a),d=this.elements,e=d[0],f=d[3],g=d[6],h=d[1],i=d[4],j=d[7];return d[0]=b*e+c*h,d[3]=b*f+c*i,d[6]=b*g+c*j,d[1]=-c*e+b*h,d[4]=-c*f+b*i,d[7]=-c*g+b*j,this}translate(a,b){let c=this.elements;return c[0]+=a*c[2],c[3]+=a*c[5],c[6]+=a*c[8],c[1]+=b*c[2],c[4]+=b*c[5],c[7]+=b*c[8],this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<9;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<9;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}clone(){return new this.constructor().fromArray(this.elements)}}function cn(a){for(let b=a.length-1;b>=0;--b)if(a[b]>65535)return!0;return!1}cm.prototype.isMatrix3=!0;let co={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function cp(a,b){return new co[a](b)}function cq(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function cr(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function cs(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}let ct={[bD]:{[bE]:cr},[bE]:{[bD]:cs}},cu={legacyMode:!0,get workingColorSpace(){return bE},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,b,c){if(this.legacyMode||b===c||!b||!c)return a;if(ct[b]&&void 0!==ct[b][c]){let d=ct[b][c];return a.r=d(a.r),a.g=d(a.g),a.b=d(a.b),a}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(a,b){return this.convert(a,this.workingColorSpace,b)},toWorkingColorSpace:function(a,b){return this.convert(a,b,this.workingColorSpace)}},cv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},cw={r:0,g:0,b:0},cx={h:0,s:0,l:0},cy={h:0,s:0,l:0};function cz(a,b,c){return(c<0&&(c+=1),c>1&&(c-=1),c<1/6)?a+(b-a)*6*c:c<.5?b:c<2/3?a+(b-a)*6*(2/3-c):a}function cA(a,b){return b.r=a.r,b.g=a.g,b.b=a.b,b}class cB{constructor(a,b,c){if(void 0===b&&void 0===c)return this.set(a);return this.setRGB(a,b,c)}set(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a,b=bD){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,cu.toWorkingColorSpace(this,b),this}setRGB(a,b,c,d=bE){return this.r=a,this.g=b,this.b=c,cu.toWorkingColorSpace(this,d),this}setHSL(a,b,c,d=bE){if(a=cd(a,1),b=cc(b,0,1),c=cc(c,0,1),0===b)this.r=this.g=this.b=c;else{let e=c<=.5?c*(1+b):c+b-c*b,f=2*c-e;this.r=cz(f,e,a+1/3),this.g=cz(f,e,a),this.b=cz(f,e,a-1/3)}return cu.toWorkingColorSpace(this,d),this}setStyle(a,b=bD){function c(b){void 0!==b&&1>parseFloat(b)&&console.warn("THREE.Color: Alpha component of "+a+" will be ignored.")}let d;if(d=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(a)){let e,f=d[1],g=d[2];switch(f){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,cu.toWorkingColorSpace(this,b),c(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,cu.toWorkingColorSpace(this,b),c(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g)){let h=parseFloat(e[1])/360,i=parseInt(e[2],10)/100,j=parseInt(e[3],10)/100;return c(e[4]),this.setHSL(h,i,j,b)}}}else if(d=/^\#([A-Fa-f\d]+)$/.exec(a)){let k=d[1],l=k.length;if(3===l)return this.r=parseInt(k.charAt(0)+k.charAt(0),16)/255,this.g=parseInt(k.charAt(1)+k.charAt(1),16)/255,this.b=parseInt(k.charAt(2)+k.charAt(2),16)/255,cu.toWorkingColorSpace(this,b),this;if(6===l)return this.r=parseInt(k.charAt(0)+k.charAt(1),16)/255,this.g=parseInt(k.charAt(2)+k.charAt(3),16)/255,this.b=parseInt(k.charAt(4)+k.charAt(5),16)/255,cu.toWorkingColorSpace(this,b),this}return a&&a.length>0?this.setColorName(a,b):this}setColorName(a,b=bD){let c=cv[a.toLowerCase()];return void 0!==c?this.setHex(c,b):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copySRGBToLinear(a){return this.r=cr(a.r),this.g=cr(a.g),this.b=cr(a.b),this}copyLinearToSRGB(a){return this.r=cs(a.r),this.g=cs(a.g),this.b=cs(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(a=bD){return cu.fromWorkingColorSpace(cA(this,cw),a),cc(255*cw.r,0,255)<<16^cc(255*cw.g,0,255)<<8^cc(255*cw.b,0,255)<<0}getHexString(a=bD){return("000000"+this.getHex(a).toString(16)).slice(-6)}getHSL(a,b=bE){cu.fromWorkingColorSpace(cA(this,cw),b);let c=cw.r,d=cw.g,e=cw.b,f=Math.max(c,d,e),g=Math.min(c,d,e),h,i,j=(g+f)/2;if(g===f)h=0,i=0;else{let k=f-g;switch(i=j<=.5?k/(f+g):k/(2-f-g),f){case c:h=(d-e)/k+(d<e?6:0);break;case d:h=(e-c)/k+2;break;case e:h=(c-d)/k+4}h/=6}return a.h=h,a.s=i,a.l=j,a}getRGB(a,b=bE){return cu.fromWorkingColorSpace(cA(this,cw),b),a.r=cw.r,a.g=cw.g,a.b=cw.b,a}getStyle(a=bD){return(cu.fromWorkingColorSpace(cA(this,cw),a),a!==bD)?`color(${a} ${cw.r} ${cw.g} ${cw.b})`:`rgb(${255*cw.r|0},${255*cw.g|0},${255*cw.b|0})`}offsetHSL(a,b,c){return this.getHSL(cx),cx.h+=a,cx.s+=b,cx.l+=c,this.setHSL(cx.h,cx.s,cx.l),this}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpColors(a,b,c){return this.r=a.r+(b.r-a.r)*c,this.g=a.g+(b.g-a.g)*c,this.b=a.b+(b.b-a.b)*c,this}lerpHSL(a,b){this.getHSL(cx),a.getHSL(cy);let c=ce(cx.h,cy.h,b),d=ce(cx.s,cy.s,b),e=ce(cx.l,cy.l,b);return this.setHSL(c,d,e),this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b=0){return this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a=[],b=0){return a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}cB.NAMES=cv,cB.prototype.isColor=!0,cB.prototype.r=1,cB.prototype.g=1,cB.prototype.b=1;let cC;class cD{static getDataURL(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;let b;if(a instanceof HTMLCanvasElement)b=a;else{void 0===cC&&(cC=cq("canvas")),cC.width=a.width,cC.height=a.height;let c=cC.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),b=cC}return b.width>2048||b.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",a),b.toDataURL("image/jpeg",.6)):b.toDataURL("image/png")}static sRGBToLinear(a){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let b=cq("canvas");b.width=a.width,b.height=a.height;let c=b.getContext("2d");c.drawImage(a,0,0,a.width,a.height);let d=c.getImageData(0,0,a.width,a.height),e=d.data;for(let f=0;f<e.length;f++)e[f]=255*cr(e[f]/255);return c.putImageData(d,0,0),b}if(!a.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),a;{let g=a.data.slice(0);for(let h=0;h<g.length;h++)g instanceof Uint8Array||g instanceof Uint8ClampedArray?g[h]=Math.floor(255*cr(g[h]/255)):g[h]=cr(g[h]);return{data:g,width:a.width,height:a.height}}}}class cE{constructor(a=null){this.uuid=cb(),this.data=a,this.version=0}set needsUpdate(a){!0===a&&this.version++}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&&void 0!==a.images[this.uuid])return a.images[this.uuid];let c={uuid:this.uuid,url:""},d=this.data;if(null!==d){let e;if(Array.isArray(d)){e=[];for(let f=0,g=d.length;f<g;f++)d[f].isDataTexture?e.push(cF(d[f].image)):e.push(cF(d[f]))}else e=cF(d);c.url=e}return b||(a.images[this.uuid]=c),c}}function cF(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?cD.getDataURL(a):a.data?{data:Array.prototype.slice.call(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}cE.prototype.isSource=!0;let cG=0;class cH extends b5{constructor(a=cH.DEFAULT_IMAGE,b=cH.DEFAULT_MAPPING,c=al,d=al,e=as,f=av,g=aK,h=ax,i=1,j=bw){super(),Object.defineProperty(this,"id",{value:cG++}),this.uuid=cb(),this.name="",this.source=new cE(a),this.mipmaps=[],this.mapping=b,this.wrapS=c,this.wrapT=d,this.magFilter=e,this.minFilter=f,this.anisotropy=i,this.format=g,this.internalFormat=null,this.type=h,this.offset=new cl(0,0),this.repeat=new cl(1,1),this.center=new cl(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new cm,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=j,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(a){this.source.data=a}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(a){return this.name=a.name,this.source=a.source,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this.userData=JSON.parse(JSON.stringify(a.userData)),this.needsUpdate=!0,this}toJSON(a){let b=void 0===a||"string"==typeof a;if(!b&&void 0!==a.textures[this.uuid])return a.textures[this.uuid];let c={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(a).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b||(a.textures[this.uuid]=c),c}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(a){if(this.mapping!==ae)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case ak:a.x=a.x-Math.floor(a.x);break;case al:a.x=a.x<0?0:1;break;case am:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case ak:a.y=a.y-Math.floor(a.y);break;case al:a.y=a.y<0?0:1;break;case am:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}set needsUpdate(a){!0===a&&(this.version++,this.source.needsUpdate=!0)}}cH.DEFAULT_IMAGE=null,cH.DEFAULT_MAPPING=ae,cH.prototype.isTexture=!0;class cI{constructor(a=0,b=0,c=0,d=1){this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this.w*=a.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(a){let b,c,d,e,f=a.elements,g=f[0],h=f[4],i=f[8],j=f[1],k=f[5],l=f[9],m=f[2],n=f[6],o=f[10];if(.01>Math.abs(h-j)&&.01>Math.abs(i-m)&&.01>Math.abs(l-n)){if(.1>Math.abs(h+j)&&.1>Math.abs(i+m)&&.1>Math.abs(l+n)&&.1>Math.abs(g+k+o-3))return this.set(1,0,0,0),this;b=Math.PI;let p=(g+1)/2,q=(k+1)/2,r=(o+1)/2,s=(h+j)/4,t=(i+m)/4,u=(l+n)/4;return p>q&&p>r?p<.01?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(p),d=s/c,e=t/c):q>r?q<.01?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(q),c=s/d,e=u/d):r<.01?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(r),c=t/e,d=u/e),this.set(c,d,e,b),this}let v=Math.sqrt((n-l)*(n-l)+(i-m)*(i-m)+(j-h)*(j-h));return .001>Math.abs(v)&&(v=1),this.x=(n-l)/v,this.y=(i-m)/v,this.z=(j-h)/v,this.w=Math.acos((g+k+o-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}cI.prototype.isVector4=!0;class cJ extends b5{constructor(a,b,c={}){super(),this.width=a,this.height=b,this.depth=1,this.scissor=new cI(0,0,a,b),this.scissorTest=!1,this.viewport=new cI(0,0,a,b),this.texture=new cH({width:a,height:b,depth:1},c.mapping,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==c.generateMipmaps&&c.generateMipmaps,this.texture.internalFormat=void 0!==c.internalFormat?c.internalFormat:null,this.texture.minFilter=void 0!==c.minFilter?c.minFilter:as,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0!==c.stencilBuffer&&c.stencilBuffer,this.depthTexture=void 0!==c.depthTexture?c.depthTexture:null,this.samples=void 0!==c.samples?c.samples:0}setSize(a,b,c=1){(this.width!==a||this.height!==b||this.depth!==c)&&(this.width=a,this.height=b,this.depth=c,this.texture.image.width=a,this.texture.image.height=b,this.texture.image.depth=c,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},a.texture.image),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,null!==a.depthTexture&&(this.depthTexture=a.depthTexture.clone()),this.samples=a.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}cJ.prototype.isWebGLRenderTarget=!0;class cK extends cH{constructor(a=null,b=1,c=1,d=1){super(null),this.image={data:a,width:b,height:c,depth:d},this.magFilter=an,this.minFilter=an,this.wrapR=al,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}cK.prototype.isDataArrayTexture=!0;class cL extends cJ{constructor(a,b,c){super(a,b),this.depth=c,this.texture=new cK(null,a,b,c),this.texture.isRenderTargetTexture=!0}}cL.prototype.isWebGLArrayRenderTarget=!0;class cM extends cH{constructor(a=null,b=1,c=1,d=1){super(null),this.image={data:a,width:b,height:c,depth:d},this.magFilter=an,this.minFilter=an,this.wrapR=al,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}cM.prototype.isData3DTexture=!0;class cN extends cJ{constructor(a,b,c){super(a,b),this.depth=c,this.texture=new cM(null,a,b,c),this.texture.isRenderTargetTexture=!0}}cN.prototype.isWebGL3DRenderTarget=!0;class cO extends cJ{constructor(a,b,c,d={}){super(a,b,d);let e=this.texture;this.texture=[];for(let f=0;f<c;f++)this.texture[f]=e.clone(),this.texture[f].isRenderTargetTexture=!0}setSize(a,b,c=1){if(this.width!==a||this.height!==b||this.depth!==c){this.width=a,this.height=b,this.depth=c;for(let d=0,e=this.texture.length;d<e;d++)this.texture[d].image.width=a,this.texture[d].image.height=b,this.texture[d].image.depth=c;this.dispose()}return this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b),this}copy(a){this.dispose(),this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,this.depthTexture=a.depthTexture,this.texture.length=0;for(let b=0,c=a.texture.length;b<c;b++)this.texture[b]=a.texture[b].clone();return this}}cO.prototype.isWebGLMultipleRenderTargets=!0;class cP{constructor(a=0,b=0,c=0,d=1){this._x=a,this._y=b,this._z=c,this._w=d}static slerp(a,b,c,d){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),c.slerpQuaternions(a,b,d)}static slerpFlat(a,b,c,d,e,f,g){let h=c[d+0],i=c[d+1],j=c[d+2],k=c[d+3],l=e[f+0],m=e[f+1],n=e[f+2],o=e[f+3];if(0===g){a[b+0]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k;return}if(1===g){a[b+0]=l,a[b+1]=m,a[b+2]=n,a[b+3]=o;return}if(k!==o||h!==l||i!==m||j!==n){let p=1-g,q=h*l+i*m+j*n+k*o,r=q>=0?1:-1,s=1-q*q;if(s>Number.EPSILON){let t=Math.sqrt(s),u=Math.atan2(t,q*r);p=Math.sin(p*u)/t,g=Math.sin(g*u)/t}let v=g*r;if(h=h*p+l*v,i=i*p+m*v,j=j*p+n*v,k=k*p+o*v,p===1-g){let w=1/Math.sqrt(h*h+i*i+j*j+k*k);h*=w,i*=w,j*=w,k*=w}}a[b]=h,a[b+1]=i,a[b+2]=j,a[b+3]=k}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(a,b){if(!(a&&a.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let c=a._x,d=a._y,e=a._z,f=a._order,g=Math.cos,h=Math.sin,i=g(c/2),j=g(d/2),k=g(e/2),l=h(c/2),m=h(d/2),n=h(e/2);switch(f){case"XYZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"YXZ":this._x=l*j*k+i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"ZXY":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k-l*m*n;break;case"ZYX":this._x=l*j*k-i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k+l*m*n;break;case"YZX":this._x=l*j*k+i*m*n,this._y=i*m*k+l*j*n,this._z=i*j*n-l*m*k,this._w=i*j*k-l*m*n;break;case"XZY":this._x=l*j*k-i*m*n,this._y=i*m*k-l*j*n,this._z=i*j*n+l*m*k,this._w=i*j*k+l*m*n;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+f)}return!1!==b&&this._onChangeCallback(),this}setFromAxisAngle(a,b){let c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(a){let b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;if(l>0){let m=.5/Math.sqrt(l+1);this._w=.25/m,this._x=(j-h)*m,this._y=(e-i)*m,this._z=(f-d)*m}else if(c>g&&c>k){let n=2*Math.sqrt(1+c-g-k);this._w=(j-h)/n,this._x=.25*n,this._y=(d+f)/n,this._z=(e+i)/n}else if(g>k){let o=2*Math.sqrt(1+g-c-k);this._w=(e-i)/o,this._x=(d+f)/o,this._y=.25*o,this._z=(h+j)/o}else{let p=2*Math.sqrt(1+k-c-g);this._w=(f-d)/p,this._x=(e+i)/p,this._y=(h+j)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<Number.EPSILON?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x,this._w=c),this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(cc(this.dot(a),-1,1)))}rotateTowards(a,b){let c=this.angleTo(a);if(0===c)return this;let d=Math.min(1,b/c);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a,b){return void 0!==b?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(g<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;let h=1-g*g;if(h<=Number.EPSILON){let i=1-b;return this._w=i*f+b*this._w,this._x=i*c+b*this._x,this._y=i*d+b*this._y,this._z=i*e+b*this._z,this.normalize(),this._onChangeCallback(),this}let j=Math.sqrt(h),k=Math.atan2(j,g),l=Math.sin((1-b)*k)/j,m=Math.sin(b*k)/j;return this._w=f*l+this._w*m,this._x=c*l+this._x*m,this._y=d*l+this._y*m,this._z=e*l+this._z*m,this._onChangeCallback(),this}slerpQuaternions(a,b,c){return this.copy(a).slerp(b,c)}random(){let a=Math.random(),b=Math.sqrt(1-a),c=Math.sqrt(a),d=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(b*Math.cos(d),c*Math.sin(e),c*Math.cos(e),b*Math.sin(d))}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b=0){return this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}cP.prototype.isQuaternion=!0;class cQ{constructor(a=0,b=0,c=0){this.x=a,this.y=b,this.z=c}set(a,b,c){return void 0===c&&(c=this.z),this.x=a,this.y=b,this.z=c,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a,b){return void 0!==b?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a,b){return void 0!==b?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return a&&a.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cS.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(cS.setFromAxisAngle(a,b))}applyMatrix3(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(a){let b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this}applyQuaternion(a){let b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+-(l*e)+-(j*g)- -(k*f),this.y=j*h+-(l*f)+-(k*e)- -(i*g),this.z=k*h+-(l*g)+-(i*f)- -(j*e),this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(a){let b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(a,b){let c=this.length();return this.divideScalar(c||1).multiplyScalar(Math.max(a,Math.min(b,c)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a,b){return void 0!==b?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b)):this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return cR.copy(this).projectOnVector(a),this.sub(cR)}reflect(a){return this.sub(cR.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;let c=this.dot(a)/b;return Math.acos(cc(c,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(a){let b=a.elements;return this.x=b[12],this.y=b[13],this.z=b[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}setFromEuler(a){return this.x=a._x,this.y=a._y,this.z=a._z,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b,c){return void 0!==c&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let a=(Math.random()-.5)*2,b=Math.random()*Math.PI*2,c=Math.sqrt(1-a**2);return this.x=c*Math.cos(b),this.y=c*Math.sin(b),this.z=a,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}cQ.prototype.isVector3=!0;let cR=new cQ,cS=new cP;class cT{constructor(a=new cQ(Infinity,Infinity,Infinity),b=new cQ(-1/0,-1/0,-1/0)){this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.length;h<i;h+=3){let j=a[h],k=a[h+1],l=a[h+2];j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromBufferAttribute(a){let b=Infinity,c=Infinity,d=Infinity,e=-1/0,f=-1/0,g=-1/0;for(let h=0,i=a.count;h<i;h++){let j=a.getX(h),k=a.getY(h),l=a.getZ(h);j<b&&(b=j),k<c&&(c=k),l<d&&(d=l),j>e&&(e=j),k>f&&(f=k),l>g&&(g=l)}return this.min.set(b,c,d),this.max.set(e,f,g),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=cV.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}setFromObject(a,b=!1){return this.makeEmpty(),this.expandByObject(a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(a,b=!1){a.updateWorldMatrix(!1,!1);let c=a.geometry;if(void 0!==c){if(b&&void 0!=c.attributes&&void 0!==c.attributes.position){let d=c.attributes.position;for(let e=0,f=d.count;e<f;e++)cV.fromBufferAttribute(d,e).applyMatrix4(a.matrixWorld),this.expandByPoint(cV)}else null===c.boundingBox&&c.computeBoundingBox(),cW.copy(c.boundingBox),cW.applyMatrix4(a.matrixWorld),this.union(cW)}let g=a.children;for(let h=0,i=g.length;h<i;h++)this.expandByObject(g[h],b);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,cV),cV.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<=-a.constant&&c>=-a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(c1),c2.subVectors(this.max,c1),cX.subVectors(a.a,c1),cY.subVectors(a.b,c1),cZ.subVectors(a.c,c1),c$.subVectors(cY,cX),c_.subVectors(cZ,cY),c0.subVectors(cX,cZ);let b=[0,-c$.z,c$.y,0,-c_.z,c_.y,0,-c0.z,c0.y,c$.z,0,-c$.x,c_.z,0,-c_.x,c0.z,0,-c0.x,-c$.y,c$.x,0,-c_.y,c_.x,0,-c0.y,c0.x,0];return!!(c5(b,cX,cY,cZ,c2)&&c5(b=[1,0,0,0,1,0,0,0,1],cX,cY,cZ,c2))&&(c3.crossVectors(c$,c_),c5(b=[c3.x,c3.y,c3.z],cX,cY,cZ,c2))}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=cV.copy(a).clamp(this.min,this.max);return b.sub(a).length()}getBoundingSphere(a){return this.getCenter(a.center),a.radius=.5*this.getSize(cV).length(),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(cU[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),cU[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),cU[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),cU[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),cU[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),cU[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),cU[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),cU[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(cU)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}cT.prototype.isBox3=!0;let cU=[new cQ,new cQ,new cQ,new cQ,new cQ,new cQ,new cQ,new cQ],cV=new cQ,cW=new cT,cX=new cQ,cY=new cQ,cZ=new cQ,c$=new cQ,c_=new cQ,c0=new cQ,c1=new cQ,c2=new cQ,c3=new cQ,c4=new cQ;function c5(a,b,c,d,e){for(let f=0,g=a.length-3;f<=g;f+=3){c4.fromArray(a,f);let h=e.x*Math.abs(c4.x)+e.y*Math.abs(c4.y)+e.z*Math.abs(c4.z),i=b.dot(c4),j=c.dot(c4),k=d.dot(c4);if(Math.max(-Math.max(i,j,k),Math.min(i,j,k))>h)return!1}return!0}let c6=new cT,c7=new cQ,c8=new cQ,c9=new cQ;class da{constructor(a=new cQ,b=-1){this.center=a,this.radius=b}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,b){let c=this.center;void 0!==b?c.copy(b):c6.setFromPoints(a).getCenter(c);let d=0;for(let e=0,f=a.length;e<f;e++)d=Math.max(d,c.distanceToSquared(a[e]));return this.radius=Math.sqrt(d),this}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(a,b){let c=this.center.distanceToSquared(a);return b.copy(a),c>this.radius*this.radius&&(b.sub(this.center).normalize(),b.multiplyScalar(this.radius).add(this.center)),b}getBoundingBox(a){return this.isEmpty()?(a.makeEmpty(),a):(a.set(this.center,this.center),a.expandByScalar(this.radius),a)}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}expandByPoint(a){c9.subVectors(a,this.center);let b=c9.lengthSq();if(b>this.radius*this.radius){let c=Math.sqrt(b),d=(c-this.radius)*.5;this.center.add(c9.multiplyScalar(d/c)),this.radius+=d}return this}union(a){return!0===this.center.equals(a.center)?c8.set(0,0,1).multiplyScalar(a.radius):c8.subVectors(a.center,this.center).normalize().multiplyScalar(a.radius),this.expandByPoint(c7.copy(a.center).add(c8)),this.expandByPoint(c7.copy(a.center).sub(c8)),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}clone(){return new this.constructor().copy(this)}}let db=new cQ,dc=new cQ,dd=new cQ,de=new cQ,df=new cQ,dg=new cQ,dh=new cQ;class di{constructor(a=new cQ,b=new cQ(0,0,-1)){this.origin=a,this.direction=b}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,db)),this}closestPointToPoint(a,b){b.subVectors(a,this.origin);let c=b.dot(this.direction);return c<0?b.copy(this.origin):b.copy(this.direction).multiplyScalar(c).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=db.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(db.copy(this.direction).multiplyScalar(b).add(this.origin),db.distanceToSquared(a))}distanceSqToSegment(a,b,c,d){dc.copy(a).add(b).multiplyScalar(.5),dd.copy(b).sub(a).normalize(),de.copy(this.origin).sub(dc);let e=.5*a.distanceTo(b),f=-this.direction.dot(dd),g=de.dot(this.direction),h=-de.dot(dd),i=de.lengthSq(),j=Math.abs(1-f*f),k,l,m,n;if(j>0){if(k=f*h-g,l=f*g-h,n=e*j,k>=0){if(l>=-n){if(l<=n){let o=1/j;k*=o,l*=o,m=k*(k+f*l+2*g)+l*(f*k+l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=e)+g)))*k+l*(l+2*h)+i}else m=-(k=Math.max(0,-(f*(l=-e)+g)))*k+l*(l+2*h)+i}else l<=-n?(l=(k=Math.max(0,-(-f*e+g)))>0?-e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i):l<=n?(k=0,m=(l=Math.min(Math.max(-e,-h),e))*(l+2*h)+i):(l=(k=Math.max(0,-(f*e+g)))>0?e:Math.min(Math.max(-e,-h),e),m=-k*k+l*(l+2*h)+i)}else l=f>0?-e:e,k=Math.max(0,-(f*l+g)),m=-k*k+l*(l+2*h)+i;return c&&c.copy(this.direction).multiplyScalar(k).add(this.origin),d&&d.copy(dd).multiplyScalar(l).add(dc),m}intersectSphere(a,b){db.subVectors(a.center,this.origin);let c=db.dot(this.direction),d=db.dot(db)-c*c,e=a.radius*a.radius;if(d>e)return null;let f=Math.sqrt(e-d),g=c-f,h=c+f;return g<0&&h<0?null:g<0?this.at(h,b):this.at(g,b)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(a,b){let c=this.distanceToPlane(a);return null===c?null:this.at(c,b)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);if(0===b)return!0;let c=a.normal.dot(this.direction);return c*b<0}intersectBox(a,b){let c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return(i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d)?null:((e>c||c!=c)&&(c=e),(f<d||d!=d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d)?null:((g>c||c!=c)&&(c=g),(h<d||d!=d)&&(d=h),d<0)?null:this.at(c>=0?c:d,b)}intersectsBox(a){return null!==this.intersectBox(a,db)}intersectTriangle(a,b,c,d,e){df.subVectors(b,a),dg.subVectors(c,a),dh.crossVectors(df,dg);let f=this.direction.dot(dh),g;if(f>0){if(d)return null;g=1}else{if(!(f<0))return null;g=-1,f=-f}de.subVectors(this.origin,a);let h=g*this.direction.dot(dg.crossVectors(de,dg));if(h<0)return null;let i=g*this.direction.dot(df.cross(de));if(i<0||h+i>f)return null;let j=-g*de.dot(dh);return j<0?null:this.at(j/f,e)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class dj{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){let q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new dj().fromArray(this.elements)}copy(a){let b=this.elements,c=a.elements;return b[0]=c[0],b[1]=c[1],b[2]=c[2],b[3]=c[3],b[4]=c[4],b[5]=c[5],b[6]=c[6],b[7]=c[7],b[8]=c[8],b[9]=c[9],b[10]=c[10],b[11]=c[11],b[12]=c[12],b[13]=c[13],b[14]=c[14],b[15]=c[15],this}copyPosition(a){let b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this}setFromMatrix3(a){let b=a.elements;return this.set(b[0],b[3],b[6],0,b[1],b[4],b[7],0,b[2],b[5],b[8],0,0,0,0,1),this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(a){let b=this.elements,c=a.elements,d=1/dk.setFromMatrixColumn(a,0).length(),e=1/dk.setFromMatrixColumn(a,1).length(),f=1/dk.setFromMatrixColumn(a,2).length();return b[0]=c[0]*d,b[1]=c[1]*d,b[2]=c[2]*d,b[3]=0,b[4]=c[4]*e,b[5]=c[5]*e,b[6]=c[6]*e,b[7]=0,b[8]=c[8]*f,b[9]=c[9]*f,b[10]=c[10]*f,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromEuler(a){a&&a.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){let l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){let p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){let t=h*j,u=h*k,v=i*j,w=i*k;b[0]=t-w*g,b[4]=-f*k,b[8]=v+u*g,b[1]=u+v*g,b[5]=f*j,b[9]=w-t*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){let x=f*j,y=f*k,z=g*j,A=g*k;b[0]=h*j,b[4]=z*i-y,b[8]=x*i+A,b[1]=h*k,b[5]=A*i+x,b[9]=y*i-z,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){let B=f*h,C=f*i,D=g*h,E=g*i;b[0]=h*j,b[4]=E-B*k,b[8]=D*k+C,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=C*k+D,b[10]=B-E*k}else if("XZY"===a.order){let F=f*h,G=f*i,H=g*h,I=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=F*k+I,b[5]=f*j,b[9]=G*k-H,b[2]=H*k-G,b[6]=g*j,b[10]=I*k+F}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this}makeRotationFromQuaternion(a){return this.compose(dm,a,dn)}lookAt(a,b,c){let d=this.elements;return dr.subVectors(a,b),0===dr.lengthSq()&&(dr.z=1),dr.normalize(),dp.crossVectors(c,dr),0===dp.lengthSq()&&(1===Math.abs(c.z)?dr.x+=1e-4:dr.z+=1e-4,dr.normalize(),dp.crossVectors(c,dr)),dp.normalize(),dq.crossVectors(dr,dp),d[0]=dp.x,d[4]=dq.x,d[8]=dr.x,d[1]=dp.y,d[5]=dq.y,d[9]=dr.y,d[2]=dp.z,d[6]=dq.z,d[10]=dr.z,this}multiply(a,b){return void 0!==b?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(a,b){let c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this}setPosition(a,b,c){let d=this.elements;return a.isVector3?(d[12]=a.x,d[13]=a.y,d[14]=a.z):(d[12]=a,d[13]=b,d[14]=c),this}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],r=k*p*i-o*l*i+o*h*m-g*p*m-k*h*q+g*l*q,s=n*l*i-j*p*i-n*h*m+f*p*m+j*h*q-f*l*q,t=j*o*i-n*k*i+n*g*m-f*o*m-j*g*q+f*k*q,u=n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p,v=b*r+c*s+d*t+e*u;if(0===v)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/v;return a[0]=r*w,a[1]=(o*l*e-k*p*e-o*d*m+c*p*m+k*d*q-c*l*q)*w,a[2]=(g*p*e-o*h*e+o*d*i-c*p*i-g*d*q+c*h*q)*w,a[3]=(k*h*e-g*l*e-k*d*i+c*l*i+g*d*m-c*h*m)*w,a[4]=s*w,a[5]=(j*p*e-n*l*e+n*d*m-b*p*m-j*d*q+b*l*q)*w,a[6]=(n*h*e-f*p*e-n*d*i+b*p*i+f*d*q-b*h*q)*w,a[7]=(f*l*e-j*h*e+j*d*i-b*l*i-f*d*m+b*h*m)*w,a[8]=t*w,a[9]=(n*k*e-j*o*e-n*c*m+b*o*m+j*c*q-b*k*q)*w,a[10]=(f*o*e-n*g*e+n*c*i-b*o*i-f*c*q+b*g*q)*w,a[11]=(j*g*e-f*k*e-j*c*i+b*k*i+f*c*m-b*g*m)*w,a[12]=u*w,a[13]=(j*o*d-n*k*d+n*c*l-b*o*l-j*c*p+b*k*p)*w,a[14]=(n*g*d-f*o*d-n*c*h+b*o*h+f*c*p-b*g*p)*w,a[15]=(f*k*d-j*g*d+j*c*h-b*k*h-f*c*l+b*g*l)*w,this}scale(a){let b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d))}makeTranslation(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(a,b){let c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c,d,e,f){return this.set(1,c,e,0,a,1,f,0,b,d,1,0,0,0,0,1),this}compose(a,b,c){let d=this.elements,e=b._x,f=b._y,g=b._z,h=b._w,i=e+e,j=f+f,k=g+g,l=e*i,m=e*j,n=e*k,o=f*j,p=f*k,q=g*k,r=h*i,s=h*j,t=h*k,u=c.x,v=c.y,w=c.z;return d[0]=(1-(o+q))*u,d[1]=(m+t)*u,d[2]=(n-s)*u,d[3]=0,d[4]=(m-t)*v,d[5]=(1-(l+q))*v,d[6]=(p+r)*v,d[7]=0,d[8]=(n+s)*w,d[9]=(p-r)*w,d[10]=(1-(l+o))*w,d[11]=0,d[12]=a.x,d[13]=a.y,d[14]=a.z,d[15]=1,this}decompose(a,b,c){let d=this.elements,e=dk.set(d[0],d[1],d[2]).length(),f=dk.set(d[4],d[5],d[6]).length(),g=dk.set(d[8],d[9],d[10]).length(),h=this.determinant();h<0&&(e=-e),a.x=d[12],a.y=d[13],a.z=d[14],dl.copy(this);let i=1/e,j=1/f,k=1/g;return dl.elements[0]*=i,dl.elements[1]*=i,dl.elements[2]*=i,dl.elements[4]*=j,dl.elements[5]*=j,dl.elements[6]*=j,dl.elements[8]*=k,dl.elements[9]*=k,dl.elements[10]*=k,b.setFromRotationMatrix(dl),c.x=e,c.y=f,c.z=g,this}makePerspective(a,b,c,d,e,f){void 0===f&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let g=this.elements;return g[0]=2*e/(b-a),g[4]=0,g[8]=(b+a)/(b-a),g[12]=0,g[1]=0,g[5]=2*e/(c-d),g[9]=(c+d)/(c-d),g[13]=0,g[2]=0,g[6]=0,g[10]=-(f+e)/(f-e),g[14]=-2*f*e/(f-e),g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this}makeOrthographic(a,b,c,d,e,f){let g=this.elements,h=1/(b-a),i=1/(c-d),j=1/(f-e);return g[0]=2*h,g[4]=0,g[8]=0,g[12]=-((b+a)*h),g[1]=0,g[5]=2*i,g[9]=0,g[13]=-((c+d)*i),g[2]=0,g[6]=0,g[10]=-2*j,g[14]=-((f+e)*j),g[3]=0,g[7]=0,g[11]=0,g[15]=1,this}equals(a){let b=this.elements,c=a.elements;for(let d=0;d<16;d++)if(b[d]!==c[d])return!1;return!0}fromArray(a,b=0){for(let c=0;c<16;c++)this.elements[c]=a[c+b];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}dj.prototype.isMatrix4=!0;let dk=new cQ,dl=new dj,dm=new cQ(0,0,0),dn=new cQ(1,1,1),dp=new cQ,dq=new cQ,dr=new cQ,ds=new dj,dt=new cP;class du{constructor(a=0,b=0,c=0,d=du.DefaultOrder){this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d=this._order){return this._x=a,this._y=b,this._z=c,this._order=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(a,b=this._order,c=!0){let d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];switch(b){case"XYZ":this._y=Math.asin(cc(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(-j,m),this._z=Math.atan2(-f,e)):(this._x=Math.atan2(l,i),this._z=0);break;case"YXZ":this._x=Math.asin(-cc(j,-1,1)),.9999999>Math.abs(j)?(this._y=Math.atan2(g,m),this._z=Math.atan2(h,i)):(this._y=Math.atan2(-k,e),this._z=0);break;case"ZXY":this._x=Math.asin(cc(l,-1,1)),.9999999>Math.abs(l)?(this._y=Math.atan2(-k,m),this._z=Math.atan2(-f,i)):(this._y=0,this._z=Math.atan2(h,e));break;case"ZYX":this._y=Math.asin(-cc(k,-1,1)),.9999999>Math.abs(k)?(this._x=Math.atan2(l,m),this._z=Math.atan2(h,e)):(this._x=0,this._z=Math.atan2(-f,i));break;case"YZX":this._z=Math.asin(cc(h,-1,1)),.9999999>Math.abs(h)?(this._x=Math.atan2(-j,i),this._y=Math.atan2(-k,e)):(this._x=0,this._y=Math.atan2(g,m));break;case"XZY":this._z=Math.asin(-cc(f,-1,1)),.9999999>Math.abs(f)?(this._x=Math.atan2(l,i),this._y=Math.atan2(g,e)):(this._x=Math.atan2(-j,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+b)}return this._order=b,!0===c&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return ds.makeRotationFromQuaternion(a),this.setFromRotationMatrix(ds,b,c)}setFromVector3(a,b=this._order){return this.set(a.x,a.y,a.z,b)}reorder(a){return dt.setFromEuler(this),this.setFromQuaternion(dt,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}}du.prototype.isEuler=!0,du.DefaultOrder="XYZ",du.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class dv{constructor(){this.mask=1}set(a){this.mask=(1<<a|0)>>>0}enable(a){this.mask|=1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}isEnabled(a){return(this.mask&(1<<a|0))!=0}}let dw=0,dx=new cQ,dy=new cP,dz=new dj,dA=new cQ,dB=new cQ,dC=new cQ,dD=new cP,dE=new cQ(1,0,0),dF=new cQ(0,1,0),dG=new cQ(0,0,1),dH={type:"added"},dI={type:"removed"};class dJ extends b5{constructor(){super(),Object.defineProperty(this,"id",{value:dw++}),this.uuid=cb(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=dJ.DefaultUp.clone();let a=new cQ,b=new du,c=new cP,d=new cQ(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:a},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:d},modelViewMatrix:{value:new dj},normalMatrix:{value:new cm}}),this.matrix=new dj,this.matrixWorld=new dj,this.matrixAutoUpdate=dJ.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new dv,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(a){return this.quaternion.premultiply(a),this}setRotationFromAxisAngle(a,b){this.quaternion.setFromAxisAngle(a,b)}setRotationFromEuler(a){this.quaternion.setFromEuler(a,!0)}setRotationFromMatrix(a){this.quaternion.setFromRotationMatrix(a)}setRotationFromQuaternion(a){this.quaternion.copy(a)}rotateOnAxis(a,b){return dy.setFromAxisAngle(a,b),this.quaternion.multiply(dy),this}rotateOnWorldAxis(a,b){return dy.setFromAxisAngle(a,b),this.quaternion.premultiply(dy),this}rotateX(a){return this.rotateOnAxis(dE,a)}rotateY(a){return this.rotateOnAxis(dF,a)}rotateZ(a){return this.rotateOnAxis(dG,a)}translateOnAxis(a,b){return dx.copy(a).applyQuaternion(this.quaternion),this.position.add(dx.multiplyScalar(b)),this}translateX(a){return this.translateOnAxis(dE,a)}translateY(a){return this.translateOnAxis(dF,a)}translateZ(a){return this.translateOnAxis(dG,a)}localToWorld(a){return a.applyMatrix4(this.matrixWorld)}worldToLocal(a){return a.applyMatrix4(dz.copy(this.matrixWorld).invert())}lookAt(a,b,c){a.isVector3?dA.copy(a):dA.set(a,b,c);let d=this.parent;this.updateWorldMatrix(!0,!1),dB.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?dz.lookAt(dB,dA,this.up):dz.lookAt(dA,dB,this.up),this.quaternion.setFromRotationMatrix(dz),d&&(dz.extractRotation(d.matrixWorld),dy.setFromRotationMatrix(dz),this.quaternion.premultiply(dy.invert()))}add(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(dH)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)}remove(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.remove(arguments[b]);return this}let c=this.children.indexOf(a);return-1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(dI)),this}removeFromParent(){let a=this.parent;return null!==a&&a.remove(this),this}clear(){for(let a=0;a<this.children.length;a++){let b=this.children[a];b.parent=null,b.dispatchEvent(dI)}return this.children.length=0,this}attach(a){return this.updateWorldMatrix(!0,!1),dz.copy(this.matrixWorld).invert(),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),dz.multiply(a.parent.matrixWorld)),a.applyMatrix4(dz),this.add(a),a.updateWorldMatrix(!1,!0),this}getObjectById(a){return this.getObjectByProperty("id",a)}getObjectByName(a){return this.getObjectByProperty("name",a)}getObjectByProperty(a,b){if(this[a]===b)return this;for(let c=0,d=this.children.length;c<d;c++){let e=this.children[c],f=e.getObjectByProperty(a,b);if(void 0!==f)return f}}getWorldPosition(a){return this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dB,a,dC),a}getWorldScale(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(dB,dD,a),a}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(b[8],b[9],b[10]).normalize()}raycast(){}traverse(a){a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverse(a)}traverseVisible(a){if(!1===this.visible)return;a(this);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].traverseVisible(a)}traverseAncestors(a){let b=this.parent;null!==b&&(a(b),b.traverseAncestors(a))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let b=this.children;for(let c=0,d=b.length;c<d;c++)b[c].updateMatrixWorld(a)}updateWorldMatrix(a,b){let c=this.parent;if(!0===a&&null!==c&&c.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===b){let d=this.children;for(let e=0,f=d.length;e<f;e++)d[e].updateWorldMatrix(!1,!0)}}toJSON(a){let b=void 0===a||"string"==typeof a,c={};b&&(a={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let d={};function e(b,c){return void 0===b[c.uuid]&&(b[c.uuid]=c.toJSON(a)),c.uuid}if(d.uuid=this.uuid,d.type=this.type,""!==this.name&&(d.name=this.name),!0===this.castShadow&&(d.castShadow=!0),!0===this.receiveShadow&&(d.receiveShadow=!0),!1===this.visible&&(d.visible=!1),!1===this.frustumCulled&&(d.frustumCulled=!1),0!==this.renderOrder&&(d.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(d.userData=this.userData),d.layers=this.layers.mask,d.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(d.matrixAutoUpdate=!1),this.isInstancedMesh&&(d.type="InstancedMesh",d.count=this.count,d.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(d.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?d.background=this.background.toJSON():this.background.isTexture&&(d.background=this.background.toJSON(a).uuid)),this.environment&&this.environment.isTexture&&(d.environment=this.environment.toJSON(a).uuid);else if(this.isMesh||this.isLine||this.isPoints){d.geometry=e(a.geometries,this.geometry);let f=this.geometry.parameters;if(void 0!==f&&void 0!==f.shapes){let g=f.shapes;if(Array.isArray(g))for(let h=0,i=g.length;h<i;h++){let j=g[h];e(a.shapes,j)}else e(a.shapes,g)}}if(this.isSkinnedMesh&&(d.bindMode=this.bindMode,d.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(e(a.skeletons,this.skeleton),d.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let k=[];for(let l=0,m=this.material.length;l<m;l++)k.push(e(a.materials,this.material[l]));d.material=k}else d.material=e(a.materials,this.material)}if(this.children.length>0){d.children=[];for(let n=0;n<this.children.length;n++)d.children.push(this.children[n].toJSON(a).object)}if(this.animations.length>0){d.animations=[];for(let o=0;o<this.animations.length;o++){let p=this.animations[o];d.animations.push(e(a.animations,p))}}if(b){let q=y(a.geometries),r=y(a.materials),s=y(a.textures),t=y(a.images),u=y(a.shapes),v=y(a.skeletons),w=y(a.animations),x=y(a.nodes);q.length>0&&(c.geometries=q),r.length>0&&(c.materials=r),s.length>0&&(c.textures=s),t.length>0&&(c.images=t),u.length>0&&(c.shapes=u),v.length>0&&(c.skeletons=v),w.length>0&&(c.animations=w),x.length>0&&(c.nodes=x)}return c.object=d,c;function y(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}}clone(a){return new this.constructor().copy(this,a)}copy(a,b=!0){if(this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===b)for(let c=0;c<a.children.length;c++){let d=a.children[c];this.add(d.clone())}return this}}dJ.DefaultUp=new cQ(0,1,0),dJ.DefaultMatrixAutoUpdate=!0,dJ.prototype.isObject3D=!0;let dK=new cQ,dL=new cQ,dM=new cQ,dN=new cQ,dO=new cQ,dP=new cQ,dQ=new cQ,dR=new cQ,dS=new cQ,dT=new cQ;class dU{constructor(a=new cQ,b=new cQ,c=new cQ){this.a=a,this.b=b,this.c=c}static getNormal(a,b,c,d){d.subVectors(c,b),dK.subVectors(a,b),d.cross(dK);let e=d.lengthSq();return e>0?d.multiplyScalar(1/Math.sqrt(e)):d.set(0,0,0)}static getBarycoord(a,b,c,d,e){dK.subVectors(d,b),dL.subVectors(c,b),dM.subVectors(a,b);let f=dK.dot(dK),g=dK.dot(dL),h=dK.dot(dM),i=dL.dot(dL),j=dL.dot(dM),k=f*i-g*g;if(0===k)return e.set(-2,-1,-1);let l=1/k,m=(i*h-g*j)*l,n=(f*j-g*h)*l;return e.set(1-m-n,n,m)}static containsPoint(a,b,c,d){return this.getBarycoord(a,b,c,d,dN),dN.x>=0&&dN.y>=0&&dN.x+dN.y<=1}static getUV(a,b,c,d,e,f,g,h){return this.getBarycoord(a,b,c,d,dN),h.set(0,0),h.addScaledVector(e,dN.x),h.addScaledVector(f,dN.y),h.addScaledVector(g,dN.z),h}static isFrontFacing(a,b,c,d){return dK.subVectors(c,b),dL.subVectors(a,b),0>dK.cross(dL).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}setFromAttributeAndIndices(a,b,c,d){return this.a.fromBufferAttribute(a,b),this.b.fromBufferAttribute(a,c),this.c.fromBufferAttribute(a,d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return dK.subVectors(this.c,this.b),dL.subVectors(this.a,this.b),.5*dK.cross(dL).length()}getMidpoint(a){return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return dU.getNormal(this.a,this.b,this.c,a)}getPlane(a){return a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return dU.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return dU.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return dU.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return dU.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(a,b){let c=this.a,d=this.b,e=this.c,f,g;dO.subVectors(d,c),dP.subVectors(e,c),dR.subVectors(a,c);let h=dO.dot(dR),i=dP.dot(dR);if(h<=0&&i<=0)return b.copy(c);dS.subVectors(a,d);let j=dO.dot(dS),k=dP.dot(dS);if(j>=0&&k<=j)return b.copy(d);let l=h*k-j*i;if(l<=0&&h>=0&&j<=0)return f=h/(h-j),b.copy(c).addScaledVector(dO,f);dT.subVectors(a,e);let m=dO.dot(dT),n=dP.dot(dT);if(n>=0&&m<=n)return b.copy(e);let o=m*i-h*n;if(o<=0&&i>=0&&n<=0)return g=i/(i-n),b.copy(c).addScaledVector(dP,g);let p=j*n-m*k;if(p<=0&&k-j>=0&&m-n>=0)return dQ.subVectors(e,d),g=(k-j)/(k-j+(m-n)),b.copy(d).addScaledVector(dQ,g);let q=1/(p+o+l);return f=o*q,g=l*q,b.copy(c).addScaledVector(dO,f).addScaledVector(dP,g)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let dV=0;class dW extends b5{constructor(){super(),Object.defineProperty(this,"id",{value:dV++}),this.uuid=cb(),this.name="",this.type="Material",this.fog=!0,this.blending=u,this.side=o,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=I,this.blendDst=J,this.blendEquation=z,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=S,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=bU,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=bG,this.stencilZFail=bG,this.stencilZPass=bG,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(a){this._alphaTest>0!=a>0&&this.version++,this._alphaTest=a}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(a){if(void 0!==a)for(let b in a){let c=a[b];if(void 0===c){console.warn("THREE.Material: '"+b+"' parameter is undefined.");continue}if("shading"===b){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=c===r;continue}let d=this[b];if(void 0===d){console.warn("THREE."+this.type+": '"+b+"' is not a property of this material.");continue}d&&d.isColor?d.set(c):d&&d.isVector3&&c&&c.isVector3?d.copy(c):this[b]=c}}toJSON(a){let b=void 0===a||"string"==typeof a;b&&(a={textures:{},images:{}});let c={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let c in a){let d=a[c];delete d.metadata,b.push(d)}return b}if(c.uuid=this.uuid,c.type=this.type,""!==this.name&&(c.name=this.name),this.color&&this.color.isColor&&(c.color=this.color.getHex()),void 0!==this.roughness&&(c.roughness=this.roughness),void 0!==this.metalness&&(c.metalness=this.metalness),void 0!==this.sheen&&(c.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(c.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(c.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(c.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(c.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(c.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(c.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(c.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(c.shininess=this.shininess),void 0!==this.clearcoat&&(c.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(c.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(c.clearcoatMap=this.clearcoatMap.toJSON(a).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(c.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(a).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(c.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(a).uuid,c.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(c.map=this.map.toJSON(a).uuid),this.matcap&&this.matcap.isTexture&&(c.matcap=this.matcap.toJSON(a).uuid),this.alphaMap&&this.alphaMap.isTexture&&(c.alphaMap=this.alphaMap.toJSON(a).uuid),this.lightMap&&this.lightMap.isTexture&&(c.lightMap=this.lightMap.toJSON(a).uuid,c.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(c.aoMap=this.aoMap.toJSON(a).uuid,c.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(c.bumpMap=this.bumpMap.toJSON(a).uuid,c.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(c.normalMap=this.normalMap.toJSON(a).uuid,c.normalMapType=this.normalMapType,c.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(c.displacementMap=this.displacementMap.toJSON(a).uuid,c.displacementScale=this.displacementScale,c.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(c.roughnessMap=this.roughnessMap.toJSON(a).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(c.metalnessMap=this.metalnessMap.toJSON(a).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(c.emissiveMap=this.emissiveMap.toJSON(a).uuid),this.specularMap&&this.specularMap.isTexture&&(c.specularMap=this.specularMap.toJSON(a).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(c.specularIntensityMap=this.specularIntensityMap.toJSON(a).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(c.specularColorMap=this.specularColorMap.toJSON(a).uuid),this.envMap&&this.envMap.isTexture&&(c.envMap=this.envMap.toJSON(a).uuid,void 0!==this.combine&&(c.combine=this.combine)),void 0!==this.envMapIntensity&&(c.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(c.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(c.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(c.gradientMap=this.gradientMap.toJSON(a).uuid),void 0!==this.transmission&&(c.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(c.transmissionMap=this.transmissionMap.toJSON(a).uuid),void 0!==this.thickness&&(c.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(c.thicknessMap=this.thicknessMap.toJSON(a).uuid),void 0!==this.attenuationDistance&&(c.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(c.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(c.size=this.size),null!==this.shadowSide&&(c.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(c.sizeAttenuation=this.sizeAttenuation),this.blending!==u&&(c.blending=this.blending),this.side!==o&&(c.side=this.side),this.vertexColors&&(c.vertexColors=!0),this.opacity<1&&(c.opacity=this.opacity),!0===this.transparent&&(c.transparent=this.transparent),c.depthFunc=this.depthFunc,c.depthTest=this.depthTest,c.depthWrite=this.depthWrite,c.colorWrite=this.colorWrite,c.stencilWrite=this.stencilWrite,c.stencilWriteMask=this.stencilWriteMask,c.stencilFunc=this.stencilFunc,c.stencilRef=this.stencilRef,c.stencilFuncMask=this.stencilFuncMask,c.stencilFail=this.stencilFail,c.stencilZFail=this.stencilZFail,c.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(c.rotation=this.rotation),!0===this.polygonOffset&&(c.polygonOffset=!0),0!==this.polygonOffsetFactor&&(c.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(c.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(c.linewidth=this.linewidth),void 0!==this.dashSize&&(c.dashSize=this.dashSize),void 0!==this.gapSize&&(c.gapSize=this.gapSize),void 0!==this.scale&&(c.scale=this.scale),!0===this.dithering&&(c.dithering=!0),this.alphaTest>0&&(c.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(c.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(c.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(c.wireframe=this.wireframe),this.wireframeLinewidth>1&&(c.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(c.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(c.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(c.flatShading=this.flatShading),!1===this.visible&&(c.visible=!1),!1===this.toneMapped&&(c.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData),b){let e=d(a.textures),f=d(a.images);e.length>0&&(c.textures=e),f.length>0&&(c.images=f)}return c}clone(){return new this.constructor().copy(this)}copy(a){this.name=a.name,this.fog=a.fog,this.blending=a.blending,this.side=a.side,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let b=a.clippingPlanes,c=null;if(null!==b){let d=b.length;c=Array(d);for(let e=0;e!==d;++e)c[e]=b[e].clone()}return this.clippingPlanes=c,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.alphaToCoverage=a.alphaToCoverage,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(a){!0===a&&this.version++}}dW.prototype.isMaterial=!0,dW.fromType=function(){return null};class dX extends dW{constructor(a){super(),this.type="MeshBasicMaterial",this.color=new cB(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}dX.prototype.isMeshBasicMaterial=!0;let dY=new cQ,dZ=new cl;class d${constructor(a,b,c){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=!0===c,this.usage=bV,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this}copyAt(a,b,c){a*=this.itemSize,c*=b.itemSize;for(let d=0,e=this.itemSize;d<e;d++)this.array[a+d]=b.array[c+d];return this}copyArray(a){return this.array.set(a),this}copyColorsArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",d),f=new cB),b[c++]=f.r,b[c++]=f.g,b[c++]=f.b}return this}copyVector2sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",d),f=new cl),b[c++]=f.x,b[c++]=f.y}return this}copyVector3sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",d),f=new cQ),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z}return this}copyVector4sArray(a){let b=this.array,c=0;for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===f&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),f=new cI),b[c++]=f.x,b[c++]=f.y,b[c++]=f.z,b[c++]=f.w}return this}applyMatrix3(a){if(2===this.itemSize)for(let b=0,c=this.count;b<c;b++)dZ.fromBufferAttribute(this,b),dZ.applyMatrix3(a),this.setXY(b,dZ.x,dZ.y);else if(3===this.itemSize)for(let d=0,e=this.count;d<e;d++)dY.fromBufferAttribute(this,d),dY.applyMatrix3(a),this.setXYZ(d,dY.x,dY.y,dY.z);return this}applyMatrix4(a){for(let b=0,c=this.count;b<c;b++)dY.fromBufferAttribute(this,b),dY.applyMatrix4(a),this.setXYZ(b,dY.x,dY.y,dY.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)dY.fromBufferAttribute(this,b),dY.applyNormalMatrix(a),this.setXYZ(b,dY.x,dY.y,dY.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)dY.fromBufferAttribute(this,b),dY.transformDirection(a),this.setXYZ(b,dY.x,dY.y,dY.z);return this}set(a,b=0){return this.array.set(a,b),this}getX(a){return this.array[a*this.itemSize]}setX(a,b){return this.array[a*this.itemSize]=b,this}getY(a){return this.array[a*this.itemSize+1]}setY(a,b){return this.array[a*this.itemSize+1]=b,this}getZ(a){return this.array[a*this.itemSize+2]}setZ(a,b){return this.array[a*this.itemSize+2]=b,this}getW(a){return this.array[a*this.itemSize+3]}setW(a,b){return this.array[a*this.itemSize+3]=b,this}setXY(a,b,c){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this}setXYZ(a,b,c,d){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this}onUpload(a){return this.onUploadCallback=a,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let a={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(a.name=this.name),this.usage!==bV&&(a.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(a.updateRange=this.updateRange),a}}d$.prototype.isBufferAttribute=!0;class d_ extends d${constructor(a,b,c){super(new Int8Array(a),b,c)}}class d0 extends d${constructor(a,b,c){super(new Uint8Array(a),b,c)}}class d1 extends d${constructor(a,b,c){super(new Uint8ClampedArray(a),b,c)}}class d2 extends d${constructor(a,b,c){super(new Int16Array(a),b,c)}}class d3 extends d${constructor(a,b,c){super(new Uint16Array(a),b,c)}}class d4 extends d${constructor(a,b,c){super(new Int32Array(a),b,c)}}class d5 extends d${constructor(a,b,c){super(new Uint32Array(a),b,c)}}class d6 extends d${constructor(a,b,c){super(new Uint16Array(a),b,c)}}d6.prototype.isFloat16BufferAttribute=!0;class d7 extends d${constructor(a,b,c){super(new Float32Array(a),b,c)}}class d8 extends d${constructor(a,b,c){super(new Float64Array(a),b,c)}}let d9=0,ea=new dj,eb=new dJ,ec=new cQ,ed=new cT,ee=new cT,ef=new cQ;class eg extends b5{constructor(){super(),Object.defineProperty(this,"id",{value:d9++}),this.uuid=cb(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(a){return Array.isArray(a)?this.index=new(cn(a)?d5:d3)(a,1):this.index=a,this}getAttribute(a){return this.attributes[a]}setAttribute(a,b){return this.attributes[a]=b,this}deleteAttribute(a){return delete this.attributes[a],this}hasAttribute(a){return void 0!==this.attributes[a]}addGroup(a,b,c=0){this.groups.push({start:a,count:b,materialIndex:c})}clearGroups(){this.groups=[]}setDrawRange(a,b){this.drawRange.start=a,this.drawRange.count=b}applyMatrix4(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let d=new cm().getNormalMatrix(a);c.applyNormalMatrix(d),c.needsUpdate=!0}let e=this.attributes.tangent;return void 0!==e&&(e.transformDirection(a),e.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(a){return ea.makeRotationFromQuaternion(a),this.applyMatrix4(ea),this}rotateX(a){return ea.makeRotationX(a),this.applyMatrix4(ea),this}rotateY(a){return ea.makeRotationY(a),this.applyMatrix4(ea),this}rotateZ(a){return ea.makeRotationZ(a),this.applyMatrix4(ea),this}translate(a,b,c){return ea.makeTranslation(a,b,c),this.applyMatrix4(ea),this}scale(a,b,c){return ea.makeScale(a,b,c),this.applyMatrix4(ea),this}lookAt(a){return eb.lookAt(a),eb.updateMatrix(),this.applyMatrix4(eb.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ec).negate(),this.translate(ec.x,ec.y,ec.z),this}setFromPoints(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c];b.push(e.x,e.y,e.z||0)}return this.setAttribute("position",new d7(b,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new cT);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new cQ(-1/0,-1/0,-1/0),new cQ(Infinity,Infinity,Infinity));return}if(void 0!==a){if(this.boundingBox.setFromBufferAttribute(a),b)for(let c=0,d=b.length;c<d;c++){let e=b[c];ed.setFromBufferAttribute(e),this.morphTargetsRelative?(ef.addVectors(this.boundingBox.min,ed.min),this.boundingBox.expandByPoint(ef),ef.addVectors(this.boundingBox.max,ed.max),this.boundingBox.expandByPoint(ef)):(this.boundingBox.expandByPoint(ed.min),this.boundingBox.expandByPoint(ed.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new da);let a=this.attributes.position,b=this.morphAttributes.position;if(a&&a.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new cQ,1/0);return}if(a){let c=this.boundingSphere.center;if(ed.setFromBufferAttribute(a),b)for(let d=0,e=b.length;d<e;d++){let f=b[d];ee.setFromBufferAttribute(f),this.morphTargetsRelative?(ef.addVectors(ed.min,ee.min),ed.expandByPoint(ef),ef.addVectors(ed.max,ee.max),ed.expandByPoint(ef)):(ed.expandByPoint(ee.min),ed.expandByPoint(ee.max))}ed.getCenter(c);let g=0;for(let h=0,i=a.count;h<i;h++)ef.fromBufferAttribute(a,h),g=Math.max(g,c.distanceToSquared(ef));if(b)for(let j=0,k=b.length;j<k;j++){let l=b[j],m=this.morphTargetsRelative;for(let n=0,o=l.count;n<o;n++)ef.fromBufferAttribute(l,n),m&&(ec.fromBufferAttribute(a,n),ef.add(ec)),g=Math.max(g,c.distanceToSquared(ef))}this.boundingSphere.radius=Math.sqrt(g),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let a=this.index,b=this.attributes;if(null===a||void 0===b.position||void 0===b.normal||void 0===b.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let c=a.array,d=b.position.array,e=b.normal.array,f=b.uv.array,g=d.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new d$(new Float32Array(4*g),4));let h=this.getAttribute("tangent").array,i=[],j=[];for(let k=0;k<g;k++)i[k]=new cQ,j[k]=new cQ;let l=new cQ,m=new cQ,n=new cQ,o=new cl,p=new cl,q=new cl,r=new cQ,s=new cQ;function t(a,b,c){l.fromArray(d,3*a),m.fromArray(d,3*b),n.fromArray(d,3*c),o.fromArray(f,2*a),p.fromArray(f,2*b),q.fromArray(f,2*c),m.sub(l),n.sub(l),p.sub(o),q.sub(o);let e=1/(p.x*q.y-q.x*p.y);isFinite(e)&&(r.copy(m).multiplyScalar(q.y).addScaledVector(n,-p.y).multiplyScalar(e),s.copy(n).multiplyScalar(p.x).addScaledVector(m,-q.x).multiplyScalar(e),i[a].add(r),i[b].add(r),i[c].add(r),j[a].add(s),j[b].add(s),j[c].add(s))}let u=this.groups;0===u.length&&(u=[{start:0,count:c.length}]);for(let v=0,w=u.length;v<w;++v){let x=u[v],y=x.start,z=x.count;for(let A=y,B=y+z;A<B;A+=3)t(c[A+0],c[A+1],c[A+2])}let C=new cQ,D=new cQ,E=new cQ,F=new cQ;function G(a){E.fromArray(e,3*a),F.copy(E);let b=i[a];C.copy(b),C.sub(E.multiplyScalar(E.dot(b))).normalize(),D.crossVectors(F,b);let c=D.dot(j[a]);h[4*a]=C.x,h[4*a+1]=C.y,h[4*a+2]=C.z,h[4*a+3]=c<0?-1:1}for(let H=0,I=u.length;H<I;++H){let J=u[H],K=J.start,L=J.count;for(let M=K,N=K+L;M<N;M+=3)G(c[M+0]),G(c[M+1]),G(c[M+2])}}computeVertexNormals(){let a=this.index,b=this.getAttribute("position");if(void 0!==b){let c=this.getAttribute("normal");if(void 0===c)c=new d$(new Float32Array(3*b.count),3),this.setAttribute("normal",c);else for(let d=0,e=c.count;d<e;d++)c.setXYZ(d,0,0,0);let f=new cQ,g=new cQ,h=new cQ,i=new cQ,j=new cQ,k=new cQ,l=new cQ,m=new cQ;if(a)for(let n=0,o=a.count;n<o;n+=3){let p=a.getX(n+0),q=a.getX(n+1),r=a.getX(n+2);f.fromBufferAttribute(b,p),g.fromBufferAttribute(b,q),h.fromBufferAttribute(b,r),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),i.fromBufferAttribute(c,p),j.fromBufferAttribute(c,q),k.fromBufferAttribute(c,r),i.add(l),j.add(l),k.add(l),c.setXYZ(p,i.x,i.y,i.z),c.setXYZ(q,j.x,j.y,j.z),c.setXYZ(r,k.x,k.y,k.z)}else for(let s=0,t=b.count;s<t;s+=3)f.fromBufferAttribute(b,s+0),g.fromBufferAttribute(b,s+1),h.fromBufferAttribute(b,s+2),l.subVectors(h,g),m.subVectors(f,g),l.cross(m),c.setXYZ(s+0,l.x,l.y,l.z),c.setXYZ(s+1,l.x,l.y,l.z),c.setXYZ(s+2,l.x,l.y,l.z);this.normalizeNormals(),c.needsUpdate=!0}}merge(a,b){if(!(a&&a.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);return}void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let c=this.attributes;for(let d in c){if(void 0===a.attributes[d])continue;let e=c[d],f=e.array,g=a.attributes[d],h=g.array,i=g.itemSize*b,j=Math.min(h.length,f.length-i);for(let k=0,l=i;k<j;k++,l++)f[l]=h[k]}return this}normalizeNormals(){let a=this.attributes.normal;for(let b=0,c=a.count;b<c;b++)ef.fromBufferAttribute(a,b),ef.normalize(),a.setXYZ(b,ef.x,ef.y,ef.z)}toNonIndexed(){function a(a,b){let c=a.array,d=a.itemSize,e=a.normalized,f=new c.constructor(b.length*d),g=0,h=0;for(let i=0,j=b.length;i<j;i++){g=a.isInterleavedBufferAttribute?b[i]*a.data.stride+a.offset:b[i]*d;for(let k=0;k<d;k++)f[h++]=c[g++]}return new d$(f,d,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let b=new eg,c=this.index.array,d=this.attributes;for(let e in d){let f=d[e],g=a(f,c);b.setAttribute(e,g)}let h=this.morphAttributes;for(let i in h){let j=[],k=h[i];for(let l=0,m=k.length;l<m;l++){let n=k[l],o=a(n,c);j.push(o)}b.morphAttributes[i]=j}b.morphTargetsRelative=this.morphTargetsRelative;let p=this.groups;for(let q=0,r=p.length;q<r;q++){let s=p[q];b.addGroup(s.start,s.count,s.materialIndex)}return b}toJSON(){let a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let d=this.index;null!==d&&(a.data.index={type:d.array.constructor.name,array:Array.prototype.slice.call(d.array)});let e=this.attributes;for(let f in e){let g=e[f];a.data.attributes[f]=g.toJSON(a.data)}let h={},i=!1;for(let j in this.morphAttributes){let k=this.morphAttributes[j],l=[];for(let m=0,n=k.length;m<n;m++){let o=k[m];l.push(o.toJSON(a.data))}l.length>0&&(h[j]=l,i=!0)}i&&(a.data.morphAttributes=h,a.data.morphTargetsRelative=this.morphTargetsRelative);let p=this.groups;p.length>0&&(a.data.groups=JSON.parse(JSON.stringify(p)));let q=this.boundingSphere;return null!==q&&(a.data.boundingSphere={center:q.center.toArray(),radius:q.radius}),a}clone(){return new this.constructor().copy(this)}copy(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let c=a.index;null!==c&&this.setIndex(c.clone(b));let d=a.attributes;for(let e in d){let f=d[e];this.setAttribute(e,f.clone(b))}let g=a.morphAttributes;for(let h in g){let i=[],j=g[h];for(let k=0,l=j.length;k<l;k++)i.push(j[k].clone(b));this.morphAttributes[h]=i}this.morphTargetsRelative=a.morphTargetsRelative;let m=a.groups;for(let n=0,o=m.length;n<o;n++){let p=m[n];this.addGroup(p.start,p.count,p.materialIndex)}let q=a.boundingBox;null!==q&&(this.boundingBox=q.clone());let r=a.boundingSphere;return null!==r&&(this.boundingSphere=r.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,void 0!==a.parameters&&(this.parameters=Object.assign({},a.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}eg.prototype.isBufferGeometry=!0;let eh=new dj,ei=new di,ej=new da,ek=new cQ,el=new cQ,em=new cQ,en=new cQ,eo=new cQ,ep=new cQ,eq=new cQ,er=new cQ,es=new cQ,et=new cl,eu=new cl,ev=new cl,ew=new cQ,ex=new cQ;class ey extends dJ{constructor(a=new eg,b=new dX){super(),this.type="Mesh",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=a.material,this.geometry=a.geometry,this}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(a,b){let c=this.geometry,d=this.material,e=this.matrixWorld;if(void 0===d||(null===c.boundingSphere&&c.computeBoundingSphere(),ej.copy(c.boundingSphere),ej.applyMatrix4(e),!1===a.ray.intersectsSphere(ej))||(eh.copy(e).invert(),ei.copy(a.ray).applyMatrix4(eh),null!==c.boundingBox&&!1===ei.intersectsBox(c.boundingBox)))return;let f;if(c.isBufferGeometry){let g=c.index,h=c.attributes.position,i=c.morphAttributes.position,j=c.morphTargetsRelative,k=c.attributes.uv,l=c.attributes.uv2,m=c.groups,n=c.drawRange;if(null!==g){if(Array.isArray(d))for(let o=0,p=m.length;o<p;o++){let q=m[o],r=d[q.materialIndex],s=Math.max(q.start,n.start),t=Math.min(g.count,Math.min(q.start+q.count,n.start+n.count));for(let u=s,v=t;u<v;u+=3){let w=g.getX(u),x=g.getX(u+1),y=g.getX(u+2);(f=ez(this,r,a,ei,h,i,j,k,l,w,x,y))&&(f.faceIndex=Math.floor(u/3),f.face.materialIndex=q.materialIndex,b.push(f))}}else{let z=Math.max(0,n.start),A=Math.min(g.count,n.start+n.count);for(let B=z,C=A;B<C;B+=3){let D=g.getX(B),E=g.getX(B+1),F=g.getX(B+2);(f=ez(this,d,a,ei,h,i,j,k,l,D,E,F))&&(f.faceIndex=Math.floor(B/3),b.push(f))}}}else if(void 0!==h){if(Array.isArray(d))for(let G=0,H=m.length;G<H;G++){let I=m[G],J=d[I.materialIndex],K=Math.max(I.start,n.start),L=Math.min(h.count,Math.min(I.start+I.count,n.start+n.count));for(let M=K,N=L;M<N;M+=3){let O=M,P=M+1,Q=M+2;(f=ez(this,J,a,ei,h,i,j,k,l,O,P,Q))&&(f.faceIndex=Math.floor(M/3),f.face.materialIndex=I.materialIndex,b.push(f))}}else{let R=Math.max(0,n.start),S=Math.min(h.count,n.start+n.count);for(let T=R,U=S;T<U;T+=3){let V=T,W=T+1,X=T+2;(f=ez(this,d,a,ei,h,i,j,k,l,V,W,X))&&(f.faceIndex=Math.floor(T/3),b.push(f))}}}}else c.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function ez(a,b,c,d,e,f,g,h,i,j,k,l){ek.fromBufferAttribute(e,j),el.fromBufferAttribute(e,k),em.fromBufferAttribute(e,l);let m=a.morphTargetInfluences;if(f&&m){eq.set(0,0,0),er.set(0,0,0),es.set(0,0,0);for(let n=0,o=f.length;n<o;n++){let r=m[n],s=f[n];0!==r&&(en.fromBufferAttribute(s,j),eo.fromBufferAttribute(s,k),ep.fromBufferAttribute(s,l),g?(eq.addScaledVector(en,r),er.addScaledVector(eo,r),es.addScaledVector(ep,r)):(eq.addScaledVector(en.sub(ek),r),er.addScaledVector(eo.sub(el),r),es.addScaledVector(ep.sub(em),r)))}ek.add(eq),el.add(er),em.add(es)}a.isSkinnedMesh&&(a.boneTransform(j,ek),a.boneTransform(k,el),a.boneTransform(l,em));let t=function(a,b,c,d,e,f,g,h){let i;if(null===(b.side===p?d.intersectTriangle(g,f,e,!0,h):d.intersectTriangle(e,f,g,b.side!==q,h)))return null;ex.copy(h),ex.applyMatrix4(a.matrixWorld);let j=c.ray.origin.distanceTo(ex);return j<c.near||j>c.far?null:{distance:j,point:ex.clone(),object:a}}(a,b,c,d,ek,el,em,ew);if(t){h&&(et.fromBufferAttribute(h,j),eu.fromBufferAttribute(h,k),ev.fromBufferAttribute(h,l),t.uv=dU.getUV(ew,ek,el,em,et,eu,ev,new cl)),i&&(et.fromBufferAttribute(i,j),eu.fromBufferAttribute(i,k),ev.fromBufferAttribute(i,l),t.uv2=dU.getUV(ew,ek,el,em,et,eu,ev,new cl));let u={a:j,b:k,c:l,normal:new cQ,materialIndex:0};dU.getNormal(ek,el,em,u.normal),t.face=u}return t}ey.prototype.isMesh=!0;class eA extends eg{constructor(a=1,b=1,c=1,d=1,e=1,f=1){super(),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f};let g=this;d=Math.floor(d),e=Math.floor(e),f=Math.floor(f);let h=[],i=[],j=[],k=[],l=0,m=0;function n(a,b,c,d,e,f,n,o,p,q,r){let s=f/p,t=n/q,u=f/2,v=n/2,w=o/2,x=p+1,y=q+1,z=0,A=0,B=new cQ;for(let C=0;C<y;C++){let D=C*t-v;for(let E=0;E<x;E++){let F=E*s-u;B[a]=F*d,B[b]=D*e,B[c]=w,i.push(B.x,B.y,B.z),B[a]=0,B[b]=0,B[c]=o>0?1:-1,j.push(B.x,B.y,B.z),k.push(E/p),k.push(1-C/q),z+=1}}for(let G=0;G<q;G++)for(let H=0;H<p;H++){let I=l+H+x*G,J=l+H+x*(G+1),K=l+(H+1)+x*(G+1),L=l+(H+1)+x*G;h.push(I,J,L),h.push(J,K,L),A+=6}g.addGroup(m,A,r),m+=A,l+=z}n("z","y","x",-1,-1,c,b,a,f,e,0),n("z","y","x",1,-1,c,b,-a,f,e,1),n("x","z","y",1,1,a,c,b,d,f,2),n("x","z","y",1,-1,a,c,-b,d,f,3),n("x","y","z",1,-1,a,b,c,d,e,4),n("x","y","z",-1,-1,a,b,-c,d,e,5),this.setIndex(h),this.setAttribute("position",new d7(i,3)),this.setAttribute("normal",new d7(j,3)),this.setAttribute("uv",new d7(k,2))}static fromJSON(a){return new eA(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)}}function eB(a){let b={};for(let c in a)for(let d in b[c]={},a[c]){let e=a[c][d];e&&(e.isColor||e.isMatrix3||e.isMatrix4||e.isVector2||e.isVector3||e.isVector4||e.isTexture||e.isQuaternion)?b[c][d]=e.clone():Array.isArray(e)?b[c][d]=e.slice():b[c][d]=e}return b}function eC(a){let b={};for(let c=0;c<a.length;c++){let d=eB(a[c]);for(let e in d)b[e]=d[e]}return b}let eD={clone:eB,merge:eC};class eE extends dW{constructor(a){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}copy(a){return super.copy(a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=eB(a.uniforms),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.lights=a.lights,this.clipping=a.clipping,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this}toJSON(a){let b=super.toJSON(a);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let d=this.uniforms[c],e=d.value;e&&e.isTexture?b.uniforms[c]={type:"t",value:e.toJSON(a).uuid}:e&&e.isColor?b.uniforms[c]={type:"c",value:e.getHex()}:e&&e.isVector2?b.uniforms[c]={type:"v2",value:e.toArray()}:e&&e.isVector3?b.uniforms[c]={type:"v3",value:e.toArray()}:e&&e.isVector4?b.uniforms[c]={type:"v4",value:e.toArray()}:e&&e.isMatrix3?b.uniforms[c]={type:"m3",value:e.toArray()}:e&&e.isMatrix4?b.uniforms[c]={type:"m4",value:e.toArray()}:b.uniforms[c]={value:e}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader;let f={};for(let g in this.extensions)!0===this.extensions[g]&&(f[g]=!0);return Object.keys(f).length>0&&(b.extensions=f),b}}eE.prototype.isShaderMaterial=!0;class eF extends dJ{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new dj,this.projectionMatrix=new dj,this.projectionMatrixInverse=new dj}copy(a,b){return super.copy(a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this}getWorldDirection(a){this.updateWorldMatrix(!0,!1);let b=this.matrixWorld.elements;return a.set(-b[8],-b[9],-b[10]).normalize()}updateMatrixWorld(a){super.updateMatrixWorld(a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(a,b){super.updateWorldMatrix(a,b),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}eF.prototype.isCamera=!0;class eG extends eF{constructor(a=50,b=1,c=.1,d=2e3){super(),this.type="PerspectiveCamera",this.fov=a,this.zoom=1,this.near=c,this.far=d,this.focus=10,this.aspect=b,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this}setFocalLength(a){let b=.5*this.getFilmHeight()/a;this.fov=2*ca*Math.atan(b),this.updateProjectionMatrix()}getFocalLength(){let a=Math.tan(.5*b9*this.fov);return .5*this.getFilmHeight()/a}getEffectiveFOV(){return 2*ca*Math.atan(Math.tan(.5*b9*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=this.near,b=a*Math.tan(.5*b9*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-.5*d,f=this.view;if(null!==this.view&&this.view.enabled){let g=f.fullWidth,h=f.fullHeight;e+=f.offsetX*d/g,b-=f.offsetY*c/h,d*=f.width/g,c*=f.height/h}let i=this.filmOffset;0!==i&&(e+=a*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,a,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.fov=this.fov,b.object.zoom=this.zoom,b.object.near=this.near,b.object.far=this.far,b.object.focus=this.focus,b.object.aspect=this.aspect,null!==this.view&&(b.object.view=Object.assign({},this.view)),b.object.filmGauge=this.filmGauge,b.object.filmOffset=this.filmOffset,b}}eG.prototype.isPerspectiveCamera=!0;class eH extends dJ{constructor(a,b,c){if(super(),this.type="CubeCamera",!0!==c.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=c;let d=new eG(90,1,a,b);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new cQ(1,0,0)),this.add(d);let e=new eG(90,1,a,b);e.layers=this.layers,e.up.set(0,-1,0),e.lookAt(new cQ(-1,0,0)),this.add(e);let f=new eG(90,1,a,b);f.layers=this.layers,f.up.set(0,0,1),f.lookAt(new cQ(0,1,0)),this.add(f);let g=new eG(90,1,a,b);g.layers=this.layers,g.up.set(0,0,-1),g.lookAt(new cQ(0,-1,0)),this.add(g);let h=new eG(90,1,a,b);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new cQ(0,0,1)),this.add(h);let i=new eG(90,1,a,b);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new cQ(0,0,-1)),this.add(i)}update(a,b){null===this.parent&&this.updateMatrixWorld();let c=this.renderTarget,[d,e,f,g,h,i]=this.children,j=a.getRenderTarget(),k=a.outputEncoding,l=a.toneMapping,m=a.xr.enabled;a.outputEncoding=bw,a.toneMapping=$,a.xr.enabled=!1;let n=c.texture.generateMipmaps;c.texture.generateMipmaps=!1,a.setRenderTarget(c,0),a.render(b,d),a.setRenderTarget(c,1),a.render(b,e),a.setRenderTarget(c,2),a.render(b,f),a.setRenderTarget(c,3),a.render(b,g),a.setRenderTarget(c,4),a.render(b,h),c.texture.generateMipmaps=n,a.setRenderTarget(c,5),a.render(b,i),a.setRenderTarget(j),a.outputEncoding=k,a.toneMapping=l,a.xr.enabled=m,c.texture.needsPMREMUpdate=!0}}class eI extends cH{constructor(a,b,c,d,e,f,g,h,i,j){super(a=void 0!==a?a:[],b=void 0!==b?b:af,c,d,e,f,g,h,i,j),this.flipY=!1}get images(){return this.image}set images(a){this.image=a}}eI.prototype.isCubeTexture=!0;class eJ extends cJ{constructor(a,b={}){super(a,a,b);let c={width:a,height:a,depth:1};this.texture=new eI([c,c,c,c,c,c],b.mapping,b.wrapS,b.wrapT,b.magFilter,b.minFilter,b.format,b.type,b.anisotropy,b.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==b.generateMipmaps&&b.generateMipmaps,this.texture.minFilter=void 0!==b.minFilter?b.minFilter:as}fromEquirectangularTexture(a,b){this.texture.type=b.type,this.texture.encoding=b.encoding,this.texture.generateMipmaps=b.generateMipmaps,this.texture.minFilter=b.minFilter,this.texture.magFilter=b.magFilter;let c={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},d=new eA(5,5,5),e=new eE({name:"CubemapFromEquirect",uniforms:eB(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,side:p,blending:t});e.uniforms.tEquirect.value=b;let f=new ey(d,e),g=b.minFilter;b.minFilter===av&&(b.minFilter=as);let h=new eH(1,10,this);return h.update(a,f),b.minFilter=g,f.geometry.dispose(),f.material.dispose(),this}clear(a,b,c,d){let e=a.getRenderTarget();for(let f=0;f<6;f++)a.setRenderTarget(this,f),a.clear(b,c,d);a.setRenderTarget(e)}}eJ.prototype.isWebGLCubeRenderTarget=!0;let eK=new cQ,eL=new cQ,eM=new cm;class eN{constructor(a=new cQ(1,0,0),b=0){this.normal=a,this.constant=b}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=eK.subVectors(c,b).cross(eL.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,b){let c=a.delta(eK),d=this.normal.dot(c);if(0===d)return 0===this.distanceToPoint(a.start)?b.copy(a.start):null;let e=-(a.start.dot(this.normal)+this.constant)/d;return e<0||e>1?null:b.copy(c).multiplyScalar(e).add(a.start)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||eM.getNormalMatrix(a),d=this.coplanarPoint(eK).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}clone(){return new this.constructor().copy(this)}}eN.prototype.isPlane=!0;let eO=new da,eP=new cQ;class eQ{constructor(a=new eN,b=new eN,c=new eN,d=new eN,e=new eN,f=new eN){this.planes=[a,b,c,d,e,f]}set(a,b,c,d,e,f){let g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this}copy(a){let b=this.planes;for(let c=0;c<6;c++)b[c].copy(a.planes[c]);return this}setFromProjectionMatrix(a){let b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this}intersectsObject(a){let b=a.geometry;return null===b.boundingSphere&&b.computeBoundingSphere(),eO.copy(b.boundingSphere).applyMatrix4(a.matrixWorld),this.intersectsSphere(eO)}intersectsSprite(a){return eO.center.set(0,0,0),eO.radius=.7071067811865476,eO.applyMatrix4(a.matrixWorld),this.intersectsSphere(eO)}intersectsSphere(a){let b=this.planes,c=a.center,d=-a.radius;for(let e=0;e<6;e++){let f=b[e].distanceToPoint(c);if(f<d)return!1}return!0}intersectsBox(a){let b=this.planes;for(let c=0;c<6;c++){let d=b[c];if(eP.x=d.normal.x>0?a.max.x:a.min.x,eP.y=d.normal.y>0?a.max.y:a.min.y,eP.z=d.normal.z>0?a.max.z:a.min.z,0>d.distanceToPoint(eP))return!1}return!0}containsPoint(a){let b=this.planes;for(let c=0;c<6;c++)if(0>b[c].distanceToPoint(a))return!1;return!0}clone(){return new this.constructor().copy(this)}}function eR(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function eS(a,b){let c=b.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(b){b.isInterleavedBufferAttribute&&(b=b.data);let c=d.get(b);c&&(a.deleteBuffer(c.buffer),d.delete(b))},update:function(b,e){if(b.isGLBufferAttribute){let f=d.get(b);(!f||f.version<b.version)&&d.set(b,{buffer:b.buffer,type:b.type,bytesPerElement:b.elementSize,version:b.version});return}b.isInterleavedBufferAttribute&&(b=b.data);let g=d.get(b);void 0===g?d.set(b,function(b,d){let e=b.array,f=b.usage,g=a.createBuffer();a.bindBuffer(d,g),a.bufferData(d,e,f),b.onUploadCallback();let h;if(e instanceof Float32Array)h=5126;else if(e instanceof Uint16Array){if(b.isFloat16BufferAttribute){if(c)h=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else h=5123}else if(e instanceof Int16Array)h=5122;else if(e instanceof Uint32Array)h=5125;else if(e instanceof Int32Array)h=5124;else if(e instanceof Int8Array)h=5120;else if(e instanceof Uint8Array)h=5121;else if(e instanceof Uint8ClampedArray)h=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+e);return{buffer:g,type:h,bytesPerElement:e.BYTES_PER_ELEMENT,version:b.version}}(b,e)):g.version<b.version&&(!function(b,d,e){let f=d.array,g=d.updateRange;a.bindBuffer(e,b),-1===g.count?a.bufferSubData(e,0,f):(c?a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f,g.offset,g.count):a.bufferSubData(e,g.offset*f.BYTES_PER_ELEMENT,f.subarray(g.offset,g.offset+g.count)),g.count=-1)}(g.buffer,b,e),g.version=b.version)}}}class eT extends eg{constructor(a=1,b=1,c=1,d=1){super(),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};let e=a/2,f=b/2,g=Math.floor(c),h=Math.floor(d),i=g+1,j=h+1,k=a/g,l=b/h,m=[],n=[],o=[],p=[];for(let q=0;q<j;q++){let r=q*l-f;for(let s=0;s<i;s++){let t=s*k-e;n.push(t,-r,0),o.push(0,0,1),p.push(s/g),p.push(1-q/h)}}for(let u=0;u<h;u++)for(let v=0;v<g;v++){let w=v+i*u,x=v+i*(u+1),y=v+1+i*(u+1),z=v+1+i*u;m.push(w,x,z),m.push(x,y,z)}this.setIndex(m),this.setAttribute("position",new d7(n,3)),this.setAttribute("normal",new d7(o,3)),this.setAttribute("uv",new d7(p,2))}static fromJSON(a){return new eT(a.width,a.height,a.widthSegments,a.heightSegments)}}let eU={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},eV={common:{diffuse:{value:new cB(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new cm},uv2Transform:{value:new cm},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new cl(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new cB(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new cB(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new cm}},sprite:{diffuse:{value:new cB(16777215)},opacity:{value:1},center:{value:new cl(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new cm}}},eW={basic:{uniforms:eC([eV.common,eV.specularmap,eV.envmap,eV.aomap,eV.lightmap,eV.fog]),vertexShader:eU.meshbasic_vert,fragmentShader:eU.meshbasic_frag},lambert:{uniforms:eC([eV.common,eV.specularmap,eV.envmap,eV.aomap,eV.lightmap,eV.emissivemap,eV.fog,eV.lights,{emissive:{value:new cB(0)}}]),vertexShader:eU.meshlambert_vert,fragmentShader:eU.meshlambert_frag},phong:{uniforms:eC([eV.common,eV.specularmap,eV.envmap,eV.aomap,eV.lightmap,eV.emissivemap,eV.bumpmap,eV.normalmap,eV.displacementmap,eV.fog,eV.lights,{emissive:{value:new cB(0)},specular:{value:new cB(1118481)},shininess:{value:30}}]),vertexShader:eU.meshphong_vert,fragmentShader:eU.meshphong_frag},standard:{uniforms:eC([eV.common,eV.envmap,eV.aomap,eV.lightmap,eV.emissivemap,eV.bumpmap,eV.normalmap,eV.displacementmap,eV.roughnessmap,eV.metalnessmap,eV.fog,eV.lights,{emissive:{value:new cB(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:eU.meshphysical_vert,fragmentShader:eU.meshphysical_frag},toon:{uniforms:eC([eV.common,eV.aomap,eV.lightmap,eV.emissivemap,eV.bumpmap,eV.normalmap,eV.displacementmap,eV.gradientmap,eV.fog,eV.lights,{emissive:{value:new cB(0)}}]),vertexShader:eU.meshtoon_vert,fragmentShader:eU.meshtoon_frag},matcap:{uniforms:eC([eV.common,eV.bumpmap,eV.normalmap,eV.displacementmap,eV.fog,{matcap:{value:null}}]),vertexShader:eU.meshmatcap_vert,fragmentShader:eU.meshmatcap_frag},points:{uniforms:eC([eV.points,eV.fog]),vertexShader:eU.points_vert,fragmentShader:eU.points_frag},dashed:{uniforms:eC([eV.common,eV.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:eU.linedashed_vert,fragmentShader:eU.linedashed_frag},depth:{uniforms:eC([eV.common,eV.displacementmap]),vertexShader:eU.depth_vert,fragmentShader:eU.depth_frag},normal:{uniforms:eC([eV.common,eV.bumpmap,eV.normalmap,eV.displacementmap,{opacity:{value:1}}]),vertexShader:eU.meshnormal_vert,fragmentShader:eU.meshnormal_frag},sprite:{uniforms:eC([eV.sprite,eV.fog]),vertexShader:eU.sprite_vert,fragmentShader:eU.sprite_frag},background:{uniforms:{uvTransform:{value:new cm},t2D:{value:null}},vertexShader:eU.background_vert,fragmentShader:eU.background_frag},cube:{uniforms:eC([eV.envmap,{opacity:{value:1}}]),vertexShader:eU.cube_vert,fragmentShader:eU.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:eU.equirect_vert,fragmentShader:eU.equirect_frag},distanceRGBA:{uniforms:eC([eV.common,eV.displacementmap,{referencePosition:{value:new cQ},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:eU.distanceRGBA_vert,fragmentShader:eU.distanceRGBA_frag},shadow:{uniforms:eC([eV.lights,eV.fog,{color:{value:new cB(0)},opacity:{value:1}},]),vertexShader:eU.shadow_vert,fragmentShader:eU.shadow_frag}};function eX(a,b,c,d,e,f){let g=new cB(0),h=!0===e?0:1,i,j,k=null,l=0,m=null;function n(a,b){c.buffers.color.setClear(a.r,a.g,a.b,b,f)}return{getClearColor:function(){return g},setClearColor:function(a,b=1){g.set(a),n(g,h=b)},getClearAlpha:function(){return h},setClearAlpha:function(a){n(g,h=a)},render:function(c,e){let f=!1,q=!0===e.isScene?e.background:null;q&&q.isTexture&&(q=b.get(q));let r=a.xr,s=r.getSession&&r.getSession();s&&"additive"===s.environmentBlendMode&&(q=null),null===q?n(g,h):q&&q.isColor&&(n(q,1),f=!0),(a.autoClear||f)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),q&&(q.isCubeTexture||q.mapping===aj)?(void 0===j&&((j=new ey(new eA(1,1,1),new eE({name:"BackgroundCubeMaterial",uniforms:eB(eW.cube.uniforms),vertexShader:eW.cube.vertexShader,fragmentShader:eW.cube.fragmentShader,side:p,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),j.geometry.deleteAttribute("uv"),j.onBeforeRender=function(a,b,c){this.matrixWorld.copyPosition(c.matrixWorld)},Object.defineProperty(j.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),d.update(j)),j.material.uniforms.envMap.value=q,j.material.uniforms.flipEnvMap.value=q.isCubeTexture&&!1===q.isRenderTargetTexture?-1:1,(k!==q||l!==q.version||m!==a.toneMapping)&&(j.material.needsUpdate=!0,k=q,l=q.version,m=a.toneMapping),c.unshift(j,j.geometry,j.material,0,0,null)):q&&q.isTexture&&(void 0===i&&((i=new ey(new eT(2,2),new eE({name:"BackgroundMaterial",uniforms:eB(eW.background.uniforms),vertexShader:eW.background.vertexShader,fragmentShader:eW.background.fragmentShader,side:o,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(i.material,"map",{get:function(){return this.uniforms.t2D.value}}),d.update(i)),i.material.uniforms.t2D.value=q,!0===q.matrixAutoUpdate&&q.updateMatrix(),i.material.uniforms.uvTransform.value.copy(q.matrix),(k!==q||l!==q.version||m!==a.toneMapping)&&(i.material.needsUpdate=!0,k=q,l=q.version,m=a.toneMapping),c.unshift(i,i.geometry,i.material,0,0,null))}}}function eY(a,b,c,d){let e=a.getParameter(34921),f=d.isWebGL2?null:b.get("OES_vertex_array_object"),g=d.isWebGL2||null!==f,h={},i=n(null),j=i,k=!1;function l(b){return d.isWebGL2?a.bindVertexArray(b):f.bindVertexArrayOES(b)}function m(b){return d.isWebGL2?a.deleteVertexArray(b):f.deleteVertexArrayOES(b)}function n(a){let b=[],c=[],d=[];for(let f=0;f<e;f++)b[f]=0,c[f]=0,d[f]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:a,attributes:{},index:null}}function o(){let a=j.newAttributes;for(let b=0,c=a.length;b<c;b++)a[b]=0}function p(a){q(a,0)}function q(c,e){let f=j.newAttributes,g=j.enabledAttributes,h=j.attributeDivisors;if(f[c]=1,0===g[c]&&(a.enableVertexAttribArray(c),g[c]=1),h[c]!==e){let i=d.isWebGL2?a:b.get("ANGLE_instanced_arrays");i[d.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](c,e),h[c]=e}}function r(){let b=j.newAttributes,c=j.enabledAttributes;for(let d=0,e=c.length;d<e;d++)c[d]!==b[d]&&(a.disableVertexAttribArray(d),c[d]=0)}function s(b,c,e,f,g,h){!0===d.isWebGL2&&(5124===e||5125===e)?a.vertexAttribIPointer(b,c,e,g,h):a.vertexAttribPointer(b,c,e,f,g,h)}function t(){u(),k=!0,j!==i&&l((j=i).object)}function u(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:function(e,i,m,t,u){let v=!1;if(g){let w=function b(c,e,g){let i=!0===g.wireframe,j=h[c.id];void 0===j&&(j={},h[c.id]=j);let k=j[e.id];void 0===k&&(k={},j[e.id]=k);let l=k[i];return void 0===l&&(l=n(d.isWebGL2?a.createVertexArray():f.createVertexArrayOES()),k[i]=l),l}(t,m,i);j!==w&&l((j=w).object),(v=function a(b,c){let d=j.attributes,e=b.attributes,f=0;for(let g in e){let h=d[g],i=e[g];if(void 0===h||h.attribute!==i||h.data!==i.data)return!0;f++}return j.attributesNum!==f||j.index!==c}(t,u))&&function a(b,c){let d={},e=b.attributes,f=0;for(let g in e){let h=e[g],i={};i.attribute=h,h.data&&(i.data=h.data),d[g]=i,f++}j.attributes=d,j.attributesNum=f,j.index=c}(t,u)}else{let x=!0===i.wireframe;(j.geometry!==t.id||j.program!==m.id||j.wireframe!==x)&&(j.geometry=t.id,j.program=m.id,j.wireframe=x,v=!0)}!0===e.isInstancedMesh&&(v=!0),null!==u&&c.update(u,34963),(v||k)&&(k=!1,function e(f,g,h,i){if(!1===d.isWebGL2&&(f.isInstancedMesh||i.isInstancedBufferGeometry)&&null===b.get("ANGLE_instanced_arrays"))return;o();let j=i.attributes,k=h.getAttributes(),l=g.defaultAttributeValues;for(let m in k){let n=k[m];if(n.location>=0){let t=j[m];if(void 0===t&&("instanceMatrix"===m&&f.instanceMatrix&&(t=f.instanceMatrix),"instanceColor"===m&&f.instanceColor&&(t=f.instanceColor)),void 0!==t){let u=t.normalized,v=t.itemSize,w=c.get(t);if(void 0===w)continue;let x=w.buffer,y=w.type,z=w.bytesPerElement;if(t.isInterleavedBufferAttribute){let A=t.data,B=A.stride,C=t.offset;if(A.isInstancedInterleavedBuffer){for(let D=0;D<n.locationSize;D++)q(n.location+D,A.meshPerAttribute);!0!==f.isInstancedMesh&&void 0===i._maxInstanceCount&&(i._maxInstanceCount=A.meshPerAttribute*A.count)}else for(let E=0;E<n.locationSize;E++)p(n.location+E);a.bindBuffer(34962,x);for(let F=0;F<n.locationSize;F++)s(n.location+F,v/n.locationSize,y,u,B*z,(C+v/n.locationSize*F)*z)}else{if(t.isInstancedBufferAttribute){for(let G=0;G<n.locationSize;G++)q(n.location+G,t.meshPerAttribute);!0!==f.isInstancedMesh&&void 0===i._maxInstanceCount&&(i._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let H=0;H<n.locationSize;H++)p(n.location+H);a.bindBuffer(34962,x);for(let I=0;I<n.locationSize;I++)s(n.location+I,v/n.locationSize,y,u,v*z,v/n.locationSize*I*z)}}else if(void 0!==l){let J=l[m];if(void 0!==J)switch(J.length){case 2:a.vertexAttrib2fv(n.location,J);break;case 3:a.vertexAttrib3fv(n.location,J);break;case 4:a.vertexAttrib4fv(n.location,J);break;default:a.vertexAttrib1fv(n.location,J)}}}}r()}(e,i,m,t),null!==u&&a.bindBuffer(34963,c.get(u).buffer))},reset:t,resetDefaultState:u,dispose:function(){for(let a in t(),h){let b=h[a];for(let c in b){let d=b[c];for(let e in d)m(d[e].object),delete d[e];delete b[c]}delete h[a]}},releaseStatesOfGeometry:function(a){if(void 0===h[a.id])return;let b=h[a.id];for(let c in b){let d=b[c];for(let e in d)m(d[e].object),delete d[e];delete b[c]}delete h[a.id]},releaseStatesOfProgram:function(a){for(let b in h){let c=h[b];if(void 0===c[a.id])continue;let d=c[a.id];for(let e in d)m(d[e].object),delete d[e];delete c[a.id]}},initAttributes:o,enableAttribute:p,disableUnusedAttributes:r}}function eZ(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}this.setMode=g,this.render=function(b,d){a.drawArrays(f,b,d),c.update(d,f,1)},this.renderInstances=function(d,g,h){if(0===h)return;let i,j;if(e)i=a,j="drawArraysInstanced";else if(i=b.get("ANGLE_instanced_arrays"),j="drawArraysInstancedANGLE",null===i){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}i[j](f,d,g,h),c.update(g,f,h)}}function e$(a,b,c){let d;function e(b){if("highp"===b){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let f="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext,g=void 0!==c.precision?c.precision:"highp",h=e(g);h!==g&&(console.warn("THREE.WebGLRenderer:",g,"not supported, using",h,"instead."),g=h);let i=f||b.has("WEBGL_draw_buffers"),j=!0===c.logarithmicDepthBuffer,k=a.getParameter(34930),l=a.getParameter(35660),m=a.getParameter(3379),n=a.getParameter(34076),o=a.getParameter(34921),p=a.getParameter(36347),q=a.getParameter(36348),r=a.getParameter(36349),s=l>0,t=f||b.has("OES_texture_float"),u=f?a.getParameter(36183):0;return{isWebGL2:f,drawBuffers:i,getMaxAnisotropy:function(){if(void 0!==d)return d;if(!0===b.has("EXT_texture_filter_anisotropic")){let c=b.get("EXT_texture_filter_anisotropic");d=a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else d=0;return d},getMaxPrecision:e,precision:g,logarithmicDepthBuffer:j,maxTextures:k,maxVertexTextures:l,maxTextureSize:m,maxCubemapSize:n,maxAttributes:o,maxVertexUniforms:p,maxVaryings:q,maxFragmentUniforms:r,vertexTextures:s,floatFragmentTextures:t,floatVertexTextures:s&&t,maxSamples:u}}function e_(a){let b=this,c=null,d=0,e=!1,f=!1,g=new eN,h=new cm,i={value:null,needsUpdate:!1};function j(){i.value!==c&&(i.value=c,i.needsUpdate=d>0),b.numPlanes=d,b.numIntersection=0}function k(a,c,d,e){let f=null!==a?a.length:0,j=null;if(0!==f){if(j=i.value,!0!==e||null===j){let k=d+4*f,l=c.matrixWorldInverse;h.getNormalMatrix(l),(null===j||j.length<k)&&(j=new Float32Array(k));for(let m=0,n=d;m!==f;++m,n+=4)g.copy(a[m]).applyMatrix4(l,h),g.normal.toArray(j,n),j[n+3]=g.constant}i.value=j,i.needsUpdate=!0}return b.numPlanes=f,b.numIntersection=0,j}this.uniform=i,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b,f){let g=0!==a.length||b||0!==d||e;return e=b,c=k(a,f,0),d=a.length,g},this.beginShadows=function(){f=!0,k(null)},this.endShadows=function(){f=!1,j()},this.setState=function(b,g,h){let l=b.clippingPlanes,m=b.clipIntersection,n=b.clipShadows,o=a.get(b);if(e&&null!==l&&0!==l.length&&(!f||n)){let p=f?0:d,q=4*p,r=o.clippingState||null;i.value=r,r=k(l,g,q,h);for(let s=0;s!==q;++s)r[s]=c[s];o.clippingState=r,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=p}else f?k(null):j()}}function e0(a){let b=new WeakMap;function c(a,b){return b===ah?a.mapping=af:b===ai&&(a.mapping=ag),a}function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){let f=e.mapping;if(f===ah||f===ai){if(b.has(e)){let g=b.get(e).texture;return c(g,e.mapping)}{let h=e.image;if(!h||!(h.height>0))return null;{let i=new eJ(h.height/2);return i.fromEquirectangularTexture(a,e),b.set(e,i),e.addEventListener("dispose",d),c(i.texture,e.mapping)}}}}return e},dispose:function(){b=new WeakMap}}}eW.physical={uniforms:eC([eW.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new cl(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new cB(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new cl},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new cB(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new cB(1,1,1)},specularColorMap:{value:null}}]),vertexShader:eU.meshphysical_vert,fragmentShader:eU.meshphysical_frag};class e1 extends eF{constructor(a=-1,b=1,c=1,d=-1,e=.1,f=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e,this.far=f,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this}setViewOffset(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2,e=c-a,f=c+a,g=d+b,h=d-b;if(null!==this.view&&this.view.enabled){let i=(this.right-this.left)/this.view.fullWidth/this.zoom,j=(this.top-this.bottom)/this.view.fullHeight/this.zoom;e+=i*this.view.offsetX,f=e+i*this.view.width,g-=j*this.view.offsetY,h=g-j*this.view.height}this.projectionMatrix.makeOrthographic(e,f,g,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(a){let b=super.toJSON(a);return b.object.zoom=this.zoom,b.object.left=this.left,b.object.right=this.right,b.object.top=this.top,b.object.bottom=this.bottom,b.object.near=this.near,b.object.far=this.far,null!==this.view&&(b.object.view=Object.assign({},this.view)),b}}e1.prototype.isOrthographicCamera=!0;let e2=[.125,.215,.35,.446,.526,.582],e3=new e1,e4=new cB,e5=null,e6=(1+Math.sqrt(5))/2,e7=1/e6,e8=[new cQ(1,1,1),new cQ(-1,1,1),new cQ(1,1,-1),new cQ(-1,1,-1),new cQ(0,e6,e7),new cQ(0,e6,-e7),new cQ(e7,0,e6),new cQ(-e7,0,e6),new cQ(e6,e7,0),new cQ(-e6,e7,0)];class e9{constructor(a){this._renderer=a,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(a,b=0,c=.1,d=100){e5=this._renderer.getRenderTarget(),this._setSize(256);let e=this._allocateTargets();return e.depthBuffer=!0,this._sceneToCubeUV(a,c,d,e),b>0&&this._blur(e,0,0,b),this._applyPMREM(e),this._cleanup(e),e}fromEquirectangular(a,b=null){return this._fromTexture(a,b)}fromCubemap(a,b=null){return this._fromTexture(a,b)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=ff(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=fe(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(a){this._lodMax=Math.floor(Math.log2(a)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let a=0;a<this._lodPlanes.length;a++)this._lodPlanes[a].dispose()}_cleanup(a){this._renderer.setRenderTarget(e5),a.scissorTest=!1,fc(a,0,0,a.width,a.height)}_fromTexture(a,b){a.mapping===af||a.mapping===ag?this._setSize(0===a.image.length?16:a.image[0].width||a.image[0].image.width):this._setSize(a.image.width/4),e5=this._renderer.getRenderTarget();let c=b||this._allocateTargets();return this._textureToCubeUV(a,c),this._applyPMREM(c),this._cleanup(c),c}_allocateTargets(){let a=3*Math.max(this._cubeSize,112),b=4*this._cubeSize-32,c={magFilter:as,minFilter:as,generateMipmaps:!1,type:aE,format:aK,encoding:bw,depthBuffer:!1},d=fb(a,b,c);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==a){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=fb(a,b,c);let{_lodMax:e}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=fa(e)),this._blurMaterial=fd(e,a,b)}return d}_compileMaterial(a){let b=new ey(this._lodPlanes[0],a);this._renderer.compile(b,e3)}_sceneToCubeUV(a,b,c,d){let e=new eG(90,1,b,c),f=[1,-1,1,1,1,1],g=[1,1,1,-1,-1,-1],h=this._renderer,i=h.autoClear,j=h.toneMapping;h.getClearColor(e4),h.toneMapping=$,h.autoClear=!1;let k=new dX({name:"PMREM.Background",side:p,depthWrite:!1,depthTest:!1}),l=new ey(new eA,k),m=!1,n=a.background;n?n.isColor&&(k.color.copy(n),a.background=null,m=!0):(k.color.copy(e4),m=!0);for(let o=0;o<6;o++){let q=o%3;0===q?(e.up.set(0,f[o],0),e.lookAt(g[o],0,0)):1===q?(e.up.set(0,0,f[o]),e.lookAt(0,g[o],0)):(e.up.set(0,f[o],0),e.lookAt(0,0,g[o]));let r=this._cubeSize;fc(d,q*r,o>2?r:0,r,r),h.setRenderTarget(d),m&&h.render(l,e),h.render(a,e)}l.geometry.dispose(),l.material.dispose(),h.toneMapping=j,h.autoClear=i,a.background=n}_textureToCubeUV(a,b){let c=this._renderer,d=a.mapping===af||a.mapping===ag;d?(null===this._cubemapMaterial&&(this._cubemapMaterial=ff()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===a.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=fe());let e=d?this._cubemapMaterial:this._equirectMaterial,f=new ey(this._lodPlanes[0],e),g=e.uniforms;g.envMap.value=a;let h=this._cubeSize;fc(b,0,0,3*h,2*h),c.setRenderTarget(b),c.render(f,e3)}_applyPMREM(a){let b=this._renderer,c=b.autoClear;b.autoClear=!1;for(let d=1;d<this._lodPlanes.length;d++){let e=Math.sqrt(this._sigmas[d]*this._sigmas[d]-this._sigmas[d-1]*this._sigmas[d-1]),f=e8[(d-1)%e8.length];this._blur(a,d-1,d,e,f)}b.autoClear=c}_blur(a,b,c,d,e){let f=this._pingPongRenderTarget;this._halfBlur(a,f,b,c,d,"latitudinal",e),this._halfBlur(f,a,c,c,d,"longitudinal",e)}_halfBlur(a,b,c,d,e,f,g){let h=this._renderer,i=this._blurMaterial;"latitudinal"!==f&&"longitudinal"!==f&&console.error("blur direction must be either latitudinal or longitudinal!");let j=new ey(this._lodPlanes[d],i),k=i.uniforms,l=this._sizeLods[c]-1,m=isFinite(e)?Math.PI/(2*l):2*Math.PI/39,n=e/m,o=isFinite(e)?1+Math.floor(3*n):20;o>20&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${o} samples when the maximum is set to 20`);let p=[],q=0;for(let r=0;r<20;++r){let s=r/n,t=Math.exp(-s*s/2);p.push(t),0===r?q+=t:r<o&&(q+=2*t)}for(let u=0;u<p.length;u++)p[u]=p[u]/q;k.envMap.value=a.texture,k.samples.value=o,k.weights.value=p,k.latitudinal.value="latitudinal"===f,g&&(k.poleAxis.value=g);let{_lodMax:v}=this;k.dTheta.value=m,k.mipInt.value=v-c;let w=this._sizeLods[d],x=4*(this._cubeSize-w);fc(b,3*w*(d>v-4?d-v+4:0),x,3*w,2*w),h.setRenderTarget(b),h.render(j,e3)}}function fa(a){let b=[],c=[],d=[],e=a,f=a-4+1+e2.length;for(let g=0;g<f;g++){let h=Math.pow(2,e);c.push(h);let i=1/h;g>a-4?i=e2[g-a+4-1]:0===g&&(i=0),d.push(i);let j=1/(h-1),k=-j/2,l=1+j/2,m=[k,k,l,k,l,l,k,k,l,l,k,l],n=6,o=6,p=3,q=2,r=1,s=new Float32Array(p*o*n),t=new Float32Array(q*o*n),u=new Float32Array(r*o*n);for(let v=0;v<n;v++){let w=v%3*2/3-1,x=v>2?0:-1,y=[w,x,0,w+2/3,x,0,w+2/3,x+1,0,w,x,0,w+2/3,x+1,0,w,x+1,0];s.set(y,p*o*v),t.set(m,q*o*v);let z=[v,v,v,v,v,v];u.set(z,r*o*v)}let A=new eg;A.setAttribute("position",new d$(s,p)),A.setAttribute("uv",new d$(t,q)),A.setAttribute("faceIndex",new d$(u,r)),b.push(A),e>4&&e--}return{lodPlanes:b,sizeLods:c,sigmas:d}}function fb(a,b,c){let d=new cJ(a,b,c);return d.texture.mapping=aj,d.texture.name="PMREM.cubeUv",d.scissorTest=!0,d}function fc(a,b,c,d,e){a.viewport.set(b,c,d,e),a.scissor.set(b,c,d,e)}function fd(a,b,c){let d=new Float32Array(20),e=new cQ(0,1,0),f=new eE({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/b,CUBEUV_TEXEL_HEIGHT:1/c,CUBEUV_MAX_MIP:`${a}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:d},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e}},vertexShader:fg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:t,depthTest:!1,depthWrite:!1});return f}function fe(){return new eE({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:fg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:t,depthTest:!1,depthWrite:!1})}function ff(){return new eE({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:fg(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:t,depthTest:!1,depthWrite:!1})}function fg(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function fh(a){let b=new WeakMap,c=null;function d(a){let c=a.target;c.removeEventListener("dispose",d);let e=b.get(c);void 0!==e&&(b.delete(c),e.dispose())}return{get:function(e){if(e&&e.isTexture){let f=e.mapping,g=f===ah||f===ai,h=f===af||f===ag;if(g||h){if(e.isRenderTargetTexture&&!0===e.needsPMREMUpdate){e.needsPMREMUpdate=!1;let i=b.get(e);return null===c&&(c=new e9(a)),i=g?c.fromEquirectangular(e,i):c.fromCubemap(e,i),b.set(e,i),i.texture}if(b.has(e))return b.get(e).texture;{let j=e.image;if(!(g&&j&&j.height>0||h&&j&&function a(b){let c=0;for(let d=0;d<6;d++)void 0!==b[d]&&c++;return 6===c}(j)))return null;{null===c&&(c=new e9(a));let k=g?c.fromEquirectangular(e):c.fromCubemap(e);return b.set(e,k),e.addEventListener("dispose",d),k.texture}}}}return e},dispose:function(){b=new WeakMap,null!==c&&(c.dispose(),c=null)}}}function fi(a){let b={};function c(c){if(void 0!==b[c])return b[c];let d;switch(c){case"WEBGL_depth_texture":d=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return b[c]=d,d}return{has:function(a){return null!==c(a)},init:function(a){a.isWebGL2?c("EXT_color_buffer_float"):(c("WEBGL_depth_texture"),c("OES_texture_float"),c("OES_texture_half_float"),c("OES_texture_half_float_linear"),c("OES_standard_derivatives"),c("OES_element_index_uint"),c("OES_vertex_array_object"),c("ANGLE_instanced_arrays")),c("OES_texture_float_linear"),c("EXT_color_buffer_half_float"),c("WEBGL_multisampled_render_to_texture")},get:function(a){let b=c(a);return null===b&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b}}}function fj(a,b,c,d){let e={},f=new WeakMap;function g(a){let h=a.target;for(let i in null!==h.index&&b.remove(h.index),h.attributes)b.remove(h.attributes[i]);h.removeEventListener("dispose",g),delete e[h.id];let j=f.get(h);j&&(b.remove(j),f.delete(h)),d.releaseStatesOfGeometry(h),!0===h.isInstancedBufferGeometry&&delete h._maxInstanceCount,c.memory.geometries--}function h(a){let c=[],d=a.index,e=a.attributes.position,g=0;if(null!==d){let h=d.array;g=d.version;for(let i=0,j=h.length;i<j;i+=3){let k=h[i+0],l=h[i+1],m=h[i+2];c.push(k,l,l,m,m,k)}}else{let n=e.array;g=e.version;for(let o=0,p=n.length/3-1;o<p;o+=3){let q=o+0,r=o+1,s=o+2;c.push(q,r,r,s,s,q)}}let t=new(cn(c)?d5:d3)(c,1);t.version=g;let u=f.get(a);u&&b.remove(u),f.set(a,t)}return{get:function(a,b){return!0===e[b.id]||(b.addEventListener("dispose",g),e[b.id]=!0,c.memory.geometries++),b},update:function(a){let c=a.attributes;for(let d in c)b.update(c[d],34962);let e=a.morphAttributes;for(let f in e){let g=e[f];for(let h=0,i=g.length;h<i;h++)b.update(g[h],34962)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function fk(a,b,c,d){let e=d.isWebGL2,f;function g(a){f=a}let h,i;this.setMode=g,this.setIndex=function(a){h=a.type,i=a.bytesPerElement},this.render=function(b,d){a.drawElements(f,d,h,b*i),c.update(d,f,1)},this.renderInstances=function(d,g,j){if(0===j)return;let k,l;if(e)k=a,l="drawElementsInstanced";else if(k=b.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",null===k){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}k[l](f,g,h,d*i,j),c.update(g,f,j)}}function fl(a){let b={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:b,programs:null,autoReset:!0,reset:function(){b.frame++,b.calls=0,b.triangles=0,b.points=0,b.lines=0},update:function(a,c,d){switch(b.calls++,c){case 4:b.triangles+=d*(a/3);break;case 1:b.lines+=d*(a/2);break;case 3:b.lines+=d*(a-1);break;case 2:b.lines+=d*a;break;case 0:b.points+=d*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",c)}}}}function fm(a,b){return a[0]-b[0]}function fn(a,b){return Math.abs(b[1])-Math.abs(a[1])}function fo(a,b){let c=1,d=b.isInterleavedBufferAttribute?b.data.array:b.array;d instanceof Int8Array?c=127:d instanceof Int16Array?c=32767:d instanceof Int32Array?c=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",d),a.divideScalar(c)}function fp(a,b,c){let d={},e=new Float32Array(8),f=new WeakMap,g=new cI,h=[];for(let i=0;i<8;i++)h[i]=[i,0];return{update:function(i,j,k,l){let m=i.morphTargetInfluences;if(!0===b.isWebGL2){let n=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,o=void 0!==n?n.length:0,p=f.get(j);if(void 0===p||p.count!==o){void 0!==p&&p.texture.dispose();let q=void 0!==j.morphAttributes.position,r=void 0!==j.morphAttributes.normal,s=void 0!==j.morphAttributes.color,t=j.morphAttributes.position||[],u=j.morphAttributes.normal||[],v=j.morphAttributes.color||[],w=0;!0===q&&(w=1),!0===r&&(w=2),!0===s&&(w=3);let x=j.attributes.position.count*w,y=1;x>b.maxTextureSize&&(y=Math.ceil(x/b.maxTextureSize),x=b.maxTextureSize);let z=new Float32Array(x*y*4*o),A=new cK(z,x,y,o);A.type=aD,A.needsUpdate=!0;let B=4*w;for(let C=0;C<o;C++){let D=t[C],E=u[C],F=v[C],G=x*y*4*C;for(let H=0;H<D.count;H++){let I=H*B;!0===q&&(g.fromBufferAttribute(D,H),!0===D.normalized&&fo(g,D),z[G+I+0]=g.x,z[G+I+1]=g.y,z[G+I+2]=g.z,z[G+I+3]=0),!0===r&&(g.fromBufferAttribute(E,H),!0===E.normalized&&fo(g,E),z[G+I+4]=g.x,z[G+I+5]=g.y,z[G+I+6]=g.z,z[G+I+7]=0),!0===s&&(g.fromBufferAttribute(F,H),!0===F.normalized&&fo(g,F),z[G+I+8]=g.x,z[G+I+9]=g.y,z[G+I+10]=g.z,z[G+I+11]=4===F.itemSize?g.w:1)}}function J(){A.dispose(),f.delete(j),j.removeEventListener("dispose",J)}p={count:o,texture:A,size:new cl(x,y)},f.set(j,p),j.addEventListener("dispose",J)}let K=0;for(let L=0;L<m.length;L++)K+=m[L];let M=j.morphTargetsRelative?1:1-K;l.getUniforms().setValue(a,"morphTargetBaseInfluence",M),l.getUniforms().setValue(a,"morphTargetInfluences",m),l.getUniforms().setValue(a,"morphTargetsTexture",p.texture,c),l.getUniforms().setValue(a,"morphTargetsTextureSize",p.size)}else{let N=void 0===m?0:m.length,O=d[j.id];if(void 0===O||O.length!==N){O=[];for(let P=0;P<N;P++)O[P]=[P,0];d[j.id]=O}for(let Q=0;Q<N;Q++){let R=O[Q];R[0]=Q,R[1]=m[Q]}O.sort(fn);for(let S=0;S<8;S++)S<N&&O[S][1]?(h[S][0]=O[S][0],h[S][1]=O[S][1]):(h[S][0]=Number.MAX_SAFE_INTEGER,h[S][1]=0);h.sort(fm);let T=j.morphAttributes.position,U=j.morphAttributes.normal,V=0;for(let W=0;W<8;W++){let X=h[W],Y=X[0],Z=X[1];Y!==Number.MAX_SAFE_INTEGER&&Z?(T&&j.getAttribute("morphTarget"+W)!==T[Y]&&j.setAttribute("morphTarget"+W,T[Y]),U&&j.getAttribute("morphNormal"+W)!==U[Y]&&j.setAttribute("morphNormal"+W,U[Y]),e[W]=Z,V+=Z):(T&&!0===j.hasAttribute("morphTarget"+W)&&j.deleteAttribute("morphTarget"+W),U&&!0===j.hasAttribute("morphNormal"+W)&&j.deleteAttribute("morphNormal"+W),e[W]=0)}let $=j.morphTargetsRelative?1:1-V;l.getUniforms().setValue(a,"morphTargetBaseInfluence",$),l.getUniforms().setValue(a,"morphTargetInfluences",e)}}}}function fq(a,b,c,d){let e=new WeakMap;function f(a){let b=a.target;b.removeEventListener("dispose",f),c.remove(b.instanceMatrix),null!==b.instanceColor&&c.remove(b.instanceColor)}return{update:function(a){let g=d.render.frame,h=a.geometry,i=b.get(a,h);return e.get(i)!==g&&(b.update(i),e.set(i,g)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",f)&&a.addEventListener("dispose",f),c.update(a.instanceMatrix,34962),null!==a.instanceColor&&c.update(a.instanceColor,34962)),i},dispose:function(){e=new WeakMap}}}let fr=new cH,fs=new cK,ft=new cM,fu=new eI,fv=[],fw=[],fx=new Float32Array(16),fy=new Float32Array(9),fz=new Float32Array(4);function fA(a,b,c){let d=a[0];if(d<=0||d>0)return a;let e=b*c,f=fv[e];if(void 0===f&&(f=new Float32Array(e),fv[e]=f),0!==b){d.toArray(f,0);for(let g=1,h=0;g!==b;++g)h+=c,a[g].toArray(f,h)}return f}function fB(a,b){if(a.length!==b.length)return!1;for(let c=0,d=a.length;c<d;c++)if(a[c]!==b[c])return!1;return!0}function fC(a,b){for(let c=0,d=b.length;c<d;c++)a[c]=b[c]}function fD(a,b){let c=fw[b];void 0===c&&(c=new Int32Array(b),fw[b]=c);for(let d=0;d!==b;++d)c[d]=a.allocateTextureUnit();return c}function fE(a,b){let c=this.cache;c[0]!==b&&(a.uniform1f(this.addr,b),c[0]=b)}function fF(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y)&&(a.uniform2f(this.addr,b.x,b.y),c[0]=b.x,c[1]=b.y);else{if(fB(c,b))return;a.uniform2fv(this.addr,b),fC(c,b)}}function fG(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z)&&(a.uniform3f(this.addr,b.x,b.y,b.z),c[0]=b.x,c[1]=b.y,c[2]=b.z);else if(void 0!==b.r)(c[0]!==b.r||c[1]!==b.g||c[2]!==b.b)&&(a.uniform3f(this.addr,b.r,b.g,b.b),c[0]=b.r,c[1]=b.g,c[2]=b.b);else{if(fB(c,b))return;a.uniform3fv(this.addr,b),fC(c,b)}}function fH(a,b){let c=this.cache;if(void 0!==b.x)(c[0]!==b.x||c[1]!==b.y||c[2]!==b.z||c[3]!==b.w)&&(a.uniform4f(this.addr,b.x,b.y,b.z,b.w),c[0]=b.x,c[1]=b.y,c[2]=b.z,c[3]=b.w);else{if(fB(c,b))return;a.uniform4fv(this.addr,b),fC(c,b)}}function fI(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(fB(c,b))return;a.uniformMatrix2fv(this.addr,!1,b),fC(c,b)}else{if(fB(c,d))return;fz.set(d),a.uniformMatrix2fv(this.addr,!1,fz),fC(c,d)}}function fJ(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(fB(c,b))return;a.uniformMatrix3fv(this.addr,!1,b),fC(c,b)}else{if(fB(c,d))return;fy.set(d),a.uniformMatrix3fv(this.addr,!1,fy),fC(c,d)}}function fK(a,b){let c=this.cache,d=b.elements;if(void 0===d){if(fB(c,b))return;a.uniformMatrix4fv(this.addr,!1,b),fC(c,b)}else{if(fB(c,d))return;fx.set(d),a.uniformMatrix4fv(this.addr,!1,fx),fC(c,d)}}function fL(a,b){let c=this.cache;c[0]!==b&&(a.uniform1i(this.addr,b),c[0]=b)}function fM(a,b){let c=this.cache;fB(c,b)||(a.uniform2iv(this.addr,b),fC(c,b))}function fN(a,b){let c=this.cache;fB(c,b)||(a.uniform3iv(this.addr,b),fC(c,b))}function fO(a,b){let c=this.cache;fB(c,b)||(a.uniform4iv(this.addr,b),fC(c,b))}function fP(a,b){let c=this.cache;c[0]!==b&&(a.uniform1ui(this.addr,b),c[0]=b)}function fQ(a,b){let c=this.cache;fB(c,b)||(a.uniform2uiv(this.addr,b),fC(c,b))}function fR(a,b){let c=this.cache;fB(c,b)||(a.uniform3uiv(this.addr,b),fC(c,b))}function fS(a,b){let c=this.cache;fB(c,b)||(a.uniform4uiv(this.addr,b),fC(c,b))}function fT(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2D(b||fr,e)}function fU(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture3D(b||ft,e)}function fV(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTextureCube(b||fu,e)}function fW(a,b,c){let d=this.cache,e=c.allocateTextureUnit();d[0]!==e&&(a.uniform1i(this.addr,e),d[0]=e),c.setTexture2DArray(b||fs,e)}function fX(a,b){a.uniform1fv(this.addr,b)}function fY(a,b){let c=fA(b,this.size,2);a.uniform2fv(this.addr,c)}function fZ(a,b){let c=fA(b,this.size,3);a.uniform3fv(this.addr,c)}function f$(a,b){let c=fA(b,this.size,4);a.uniform4fv(this.addr,c)}function f_(a,b){let c=fA(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function f0(a,b){let c=fA(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function f1(a,b){let c=fA(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function f2(a,b){a.uniform1iv(this.addr,b)}function f3(a,b){a.uniform2iv(this.addr,b)}function f4(a,b){a.uniform3iv(this.addr,b)}function f5(a,b){a.uniform4iv(this.addr,b)}function f6(a,b){a.uniform1uiv(this.addr,b)}function f7(a,b){a.uniform2uiv(this.addr,b)}function f8(a,b){a.uniform3uiv(this.addr,b)}function f9(a,b){a.uniform4uiv(this.addr,b)}function ga(a,b,c){let d=b.length,e=fD(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture2D(b[f]||fr,e[f])}function gb(a,b,c){let d=b.length,e=fD(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture3D(b[f]||ft,e[f])}function gc(a,b,c){let d=b.length,e=fD(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTextureCube(b[f]||fu,e[f])}function gd(a,b,c){let d=b.length,e=fD(c,d);a.uniform1iv(this.addr,e);for(let f=0;f!==d;++f)c.setTexture2DArray(b[f]||fs,e[f])}function ge(a,b,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return fE;case 35664:return fF;case 35665:return fG;case 35666:return fH;case 35674:return fI;case 35675:return fJ;case 35676:return fK;case 5124:case 35670:return fL;case 35667:case 35671:return fM;case 35668:case 35672:return fN;case 35669:case 35673:return fO;case 5125:return fP;case 36294:return fQ;case 36295:return fR;case 36296:return fS;case 35678:case 36198:case 36298:case 36306:case 35682:return fT;case 35679:case 36299:case 36307:return fU;case 35680:case 36300:case 36308:case 36293:return fV;case 36289:case 36303:case 36311:case 36292:return fW}}(b.type)}function gf(a,b,c){this.id=a,this.addr=c,this.cache=[],this.size=b.size,this.setValue=function(a){switch(a){case 5126:return fX;case 35664:return fY;case 35665:return fZ;case 35666:return f$;case 35674:return f_;case 35675:return f0;case 35676:return f1;case 5124:case 35670:return f2;case 35667:case 35671:return f3;case 35668:case 35672:return f4;case 35669:case 35673:return f5;case 5125:return f6;case 36294:return f7;case 36295:return f8;case 36296:return f9;case 35678:case 36198:case 36298:case 36306:case 35682:return ga;case 35679:case 36299:case 36307:return gb;case 35680:case 36300:case 36308:case 36293:return gc;case 36289:case 36303:case 36311:case 36292:return gd}}(b.type)}function gg(a){this.id=a,this.seq=[],this.map={}}gf.prototype.updateCache=function(a){let b=this.cache;a instanceof Float32Array&&b.length!==a.length&&(this.cache=new Float32Array(a.length)),fC(b,a)},gg.prototype.setValue=function(a,b,c){let d=this.seq;for(let e=0,f=d.length;e!==f;++e){let g=d[e];g.setValue(a,b[g.id],c)}};let gh=/(\w+)(\])?(\[|\.)?/g;function gi(a,b){a.seq.push(b),a.map[b.id]=b}function gj(a,b,c){let d=a.name,e=d.length;for(gh.lastIndex=0;;){let f=gh.exec(d),g=gh.lastIndex,h=f[1],i="]"===f[2],j=f[3];if(i&&(h|=0),void 0===j||"["===j&&g+2===e){gi(c,void 0===j?new ge(h,a,b):new gf(h,a,b));break}{let k=c.map,l=k[h];void 0===l&&(l=new gg(h),gi(c,l)),c=l}}}function gk(a,b){this.seq=[],this.map={};let c=a.getProgramParameter(b,35718);for(let d=0;d<c;++d){let e=a.getActiveUniform(b,d),f=a.getUniformLocation(b,e.name);gj(e,f,this)}}function gl(a,b,c){let d=a.createShader(b);return a.shaderSource(d,c),a.compileShader(d),d}gk.prototype.setValue=function(a,b,c,d){let e=this.map[b];void 0!==e&&e.setValue(a,c,d)},gk.prototype.setOptional=function(a,b,c){let d=b[c];void 0!==d&&this.setValue(a,c,d)},gk.upload=function(a,b,c,d){for(let e=0,f=b.length;e!==f;++e){let g=b[e],h=c[g.id];!1!==h.needsUpdate&&g.setValue(a,h.value,d)}},gk.seqWithValue=function(a,b){let c=[];for(let d=0,e=a.length;d!==e;++d){let f=a[d];f.id in b&&c.push(f)}return c};let gm=0;function gn(a,b,c){let d=a.getShaderParameter(b,35713),e=a.getShaderInfoLog(b).trim();if(d&&""===e)return"";let f=parseInt(/ERROR: 0:(\d+)/.exec(e)[1]);return c.toUpperCase()+"\n\n"+e+"\n\n"+function(a,b){let c=a.split("\n"),d=[],e=Math.max(b-6,0),f=Math.min(b+6,c.length);for(let g=e;g<f;g++)d.push(g+1+": "+c[g]);return d.join("\n")}(a.getShaderSource(b),f)}function go(a){return""!==a}function gp(a,b){return a.replace(/NUM_DIR_LIGHTS/g,b.numDirLights).replace(/NUM_SPOT_LIGHTS/g,b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,b.numPointLights).replace(/NUM_HEMI_LIGHTS/g,b.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,b.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,b.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,b.numPointLightShadows)}function gq(a,b){return a.replace(/NUM_CLIPPING_PLANES/g,b.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,b.numClippingPlanes-b.numClipIntersection)}let gr=/^[ \t]*#include +<([\w\d./]+)>/gm;function gs(a){return a.replace(gr,gt)}function gt(a,b){let c=eU[b];if(void 0===c)throw Error("Can not resolve #include <"+b+">");return gs(c)}let gu=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,gv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function gw(a){return a.replace(gv,gy).replace(gu,gx)}function gx(a,b,c,d){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),gy(a,b,c,d)}function gy(a,b,c,d){let e="";for(let f=parseInt(b);f<parseInt(c);f++)e+=d.replace(/\[\s*i\s*\]/g,"[ "+f+" ]").replace(/UNROLLED_LOOP_INDEX/g,f);return e}function gz(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function gA(a,b,c,d){var e,f;let g=a.getContext(),h=c.defines,i=c.vertexShader,j=c.fragmentShader,k,o=(k="SHADOWMAP_TYPE_BASIC",(e=c).shadowMapType===l?k="SHADOWMAP_TYPE_PCF":e.shadowMapType===m?k="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===n&&(k="SHADOWMAP_TYPE_VSM"),k),p=function(a){let b="ENVMAP_TYPE_CUBE";if(a.envMap)switch(a.envMapMode){case af:case ag:b="ENVMAP_TYPE_CUBE";break;case aj:b="ENVMAP_TYPE_CUBE_UV"}return b}(c),q,r=(q="ENVMAP_MODE_REFLECTION",(f=c).envMap&&f.envMapMode===ag&&(q="ENVMAP_MODE_REFRACTION"),q),s=function(a){let b="ENVMAP_BLENDING_NONE";if(a.envMap)switch(a.combine){case X:b="ENVMAP_BLENDING_MULTIPLY";break;case Y:b="ENVMAP_BLENDING_MIX";break;case Z:b="ENVMAP_BLENDING_ADD"}return b}(c),t=function(a){let b=a.envMapCubeUVHeight;if(null===b)return null;let c=Math.log2(b/32+1)+3,d=1/b,e=1/(3*Math.max(Math.pow(2,c),112));return{texelWidth:e,texelHeight:d,maxMip:c}}(c),u=c.isWebGL2?"":function(a){let b=[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return b.filter(go).join("\n")}(c),v=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(h),w=g.createProgram(),x,y,z=c.glslVersion?"#version "+c.glslVersion+"\n":"";c.isRawShaderMaterial?((x=[v].filter(go).join("\n")).length>0&&(x+="\n"),(y=[u,v].filter(go).join("\n")).length>0&&(y+="\n")):(x=[gz(c),"#define SHADER_NAME "+c.shaderName,v,c.instancing?"#define USE_INSTANCING":"",c.instancingColor?"#define USE_INSTANCING_COLOR":"",c.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+c.maxBones,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+r:"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.displacementMap&&c.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularColorMap?"#define USE_SPECULARCOLORMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.sheenColorMap?"#define USE_SHEENCOLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.flatShading?"#define FLAT_SHADED":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals&&!1===c.flatShading?"#define USE_MORPHNORMALS":"",c.morphColors&&c.isWebGL2?"#define USE_MORPHCOLORS":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+c.morphTextureStride:"",c.morphTargetsCount>0&&c.isWebGL2?"#define MORPHTARGETS_COUNT "+c.morphTargetsCount:"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+o:"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(go).join("\n"),y=[u,gz(c),"#define SHADER_NAME "+c.shaderName,v,c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.matcap?"#define USE_MATCAP":"",c.envMap?"#define USE_ENVMAP":"",c.envMap?"#define "+p:"",c.envMap?"#define "+r:"",c.envMap?"#define "+s:"",t?"#define CUBEUV_TEXEL_WIDTH "+t.texelWidth:"",t?"#define CUBEUV_TEXEL_HEIGHT "+t.texelHeight:"",t?"#define CUBEUV_MAX_MIP "+t.maxMip+".0":"",c.lightMap?"#define USE_LIGHTMAP":"",c.aoMap?"#define USE_AOMAP":"",c.emissiveMap?"#define USE_EMISSIVEMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.normalMap&&c.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",c.normalMap&&c.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",c.clearcoat?"#define USE_CLEARCOAT":"",c.clearcoatMap?"#define USE_CLEARCOATMAP":"",c.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",c.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",c.specularColorMap?"#define USE_SPECULARCOLORMAP":"",c.roughnessMap?"#define USE_ROUGHNESSMAP":"",c.metalnessMap?"#define USE_METALNESSMAP":"",c.alphaMap?"#define USE_ALPHAMAP":"",c.alphaTest?"#define USE_ALPHATEST":"",c.sheen?"#define USE_SHEEN":"",c.sheenColorMap?"#define USE_SHEENCOLORMAP":"",c.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",c.transmission?"#define USE_TRANSMISSION":"",c.transmissionMap?"#define USE_TRANSMISSIONMAP":"",c.thicknessMap?"#define USE_THICKNESSMAP":"",c.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",c.vertexTangents?"#define USE_TANGENT":"",c.vertexColors||c.instancingColor?"#define USE_COLOR":"",c.vertexAlphas?"#define USE_COLOR_ALPHA":"",c.vertexUvs?"#define USE_UV":"",c.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",c.gradientMap?"#define USE_GRADIENTMAP":"",c.flatShading?"#define FLAT_SHADED":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+o:"",c.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",c.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",c.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",c.logarithmicDepthBuffer&&c.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",c.toneMapping!==$?"#define TONE_MAPPING":"",c.toneMapping!==$?eU.tonemapping_pars_fragment:"",c.toneMapping!==$?function(a,b){let c;switch(b){case _:c="Linear";break;case aa:c="Reinhard";break;case ab:c="OptimizedCineon";break;case ac:c="ACESFilmic";break;case ad:c="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),c="Linear"}return"vec3 "+a+"( vec3 color ) { return "+c+"ToneMapping( color ); }"}("toneMapping",c.toneMapping):"",c.dithering?"#define DITHERING":"",c.opaque?"#define OPAQUE":"",eU.encodings_pars_fragment,function(a,b){let c=function(a){switch(a){case bw:return["Linear","( value )"];case bx:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}(b);return"vec4 "+a+"( vec4 value ) { return LinearTo"+c[0]+c[1]+"; }"}("linearToOutputTexel",c.outputEncoding),c.depthPacking?"#define DEPTH_PACKING "+c.depthPacking:"","\n"].filter(go).join("\n")),i=gs(i),i=gp(i,c),i=gq(i,c),j=gs(j),j=gp(j,c),j=gq(j,c),i=gw(i),j=gw(j),c.isWebGL2&&!0!==c.isRawShaderMaterial&&(z="#version 300 es\n",x="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+x,y=["#define varying in",c.glslVersion===b3?"":"layout(location = 0) out highp vec4 pc_fragColor;",c.glslVersion===b3?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);let A=z+x+i,B=z+y+j,C=gl(g,35633,A),D=gl(g,35632,B);if(g.attachShader(w,C),g.attachShader(w,D),void 0!==c.index0AttributeName?g.bindAttribLocation(w,0,c.index0AttributeName):!0===c.morphTargets&&g.bindAttribLocation(w,0,"position"),g.linkProgram(w),a.debug.checkShaderErrors){let E=g.getProgramInfoLog(w).trim(),F=g.getShaderInfoLog(C).trim(),G=g.getShaderInfoLog(D).trim(),H=!0,I=!0;if(!1===g.getProgramParameter(w,35714)){H=!1;let J=gn(g,C,"vertex"),K=gn(g,D,"fragment");console.error("THREE.WebGLProgram: Shader Error "+g.getError()+" - VALIDATE_STATUS "+g.getProgramParameter(w,35715)+"\n\nProgram Info Log: "+E+"\n"+J+"\n"+K)}else""!==E?console.warn("THREE.WebGLProgram: Program Info Log:",E):(""===F||""===G)&&(I=!1);I&&(this.diagnostics={runnable:H,programLog:E,vertexShader:{log:F,prefix:x},fragmentShader:{log:G,prefix:y}})}g.deleteShader(C),g.deleteShader(D);let L;this.getUniforms=function(){return void 0===L&&(L=new gk(g,w)),L};let M;return this.getAttributes=function(){return void 0===M&&(M=function(a,b){let c={},d=a.getProgramParameter(b,35721);for(let e=0;e<d;e++){let f=a.getActiveAttrib(b,e),g=f.name,h=1;35674===f.type&&(h=2),35675===f.type&&(h=3),35676===f.type&&(h=4),c[g]={type:f.type,location:a.getAttribLocation(b,g),locationSize:h}}return c}(g,w)),M},this.destroy=function(){d.releaseStatesOfProgram(this),g.deleteProgram(w),this.program=void 0},this.name=c.shaderName,this.id=gm++,this.cacheKey=b,this.usedTimes=1,this.program=w,this.vertexShader=C,this.fragmentShader=D,this}let gB=0;class gC{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(a){let b=a.vertexShader,c=a.fragmentShader,d=this._getShaderStage(b),e=this._getShaderStage(c),f=this._getShaderCacheForMaterial(a);return!1===f.has(d)&&(f.add(d),d.usedTimes++),!1===f.has(e)&&(f.add(e),e.usedTimes++),this}remove(a){let b=this.materialCache.get(a);for(let c of b)c.usedTimes--,0===c.usedTimes&&this.shaderCache.delete(c.code);return this.materialCache.delete(a),this}getVertexShaderID(a){return this._getShaderStage(a.vertexShader).id}getFragmentShaderID(a){return this._getShaderStage(a.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(a){let b=this.materialCache;return!1===b.has(a)&&b.set(a,new Set),b.get(a)}_getShaderStage(a){let b=this.shaderCache;if(!1===b.has(a)){let c=new gD(a);b.set(a,c)}return b.get(a)}}class gD{constructor(a){this.id=gB++,this.code=a,this.usedTimes=0}}function gE(a,b,c,d,e,f,g){let h=new dv,i=new gC,j=[],k=e.isWebGL2,l=e.logarithmicDepthBuffer,m=e.floatVertexTextures,n=e.maxVertexUniforms,o=e.vertexTextures,r=e.precision,s={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(f,h,j,t,v){let w=t.fog,x=v.geometry,y=f.isMeshStandardMaterial?t.environment:null,z=(f.isMeshStandardMaterial?c:b).get(f.envMap||y),A=z&&z.mapping===aj?z.image.height:null,B=s[f.type],C=v.isSkinnedMesh?function(a){let b=a.skeleton,c=b.bones;if(m)return 1024;{let d=n,e=Math.floor((d-20)/4),f=Math.min(e,c.length);return f<c.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+c.length+" bones. This GPU supports "+f+"."),0):f}}(v):0;null!==f.precision&&(r=e.getMaxPrecision(f.precision))!==f.precision&&console.warn("THREE.WebGLProgram.getParameters:",f.precision,"not supported, using",r,"instead.");let D=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,E=void 0!==D?D.length:0,F=0;void 0!==x.morphAttributes.position&&(F=1),void 0!==x.morphAttributes.normal&&(F=2),void 0!==x.morphAttributes.color&&(F=3);let G,H,I,J;if(B){let K=eW[B];G=K.vertexShader,H=K.fragmentShader}else G=f.vertexShader,H=f.fragmentShader,i.update(f),I=i.getVertexShaderID(f),J=i.getFragmentShaderID(f);let L=a.getRenderTarget(),M=f.alphaTest>0,N=f.clearcoat>0,O={isWebGL2:k,shaderID:B,shaderName:f.type,vertexShader:G,fragmentShader:H,defines:f.defines,customVertexShaderID:I,customFragmentShaderID:J,isRawShaderMaterial:!0===f.isRawShaderMaterial,glslVersion:f.glslVersion,precision:r,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:o,outputEncoding:null===L?a.outputEncoding:!0===L.isXRRenderTarget?L.texture.encoding:bw,map:!!f.map,matcap:!!f.matcap,envMap:!!z,envMapMode:z&&z.mapping,envMapCubeUVHeight:A,lightMap:!!f.lightMap,aoMap:!!f.aoMap,emissiveMap:!!f.emissiveMap,bumpMap:!!f.bumpMap,normalMap:!!f.normalMap,objectSpaceNormalMap:f.normalMapType===bB,tangentSpaceNormalMap:f.normalMapType===bA,decodeVideoTexture:!!f.map&&!0===f.map.isVideoTexture&&f.map.encoding===bx,clearcoat:N,clearcoatMap:N&&!!f.clearcoatMap,clearcoatRoughnessMap:N&&!!f.clearcoatRoughnessMap,clearcoatNormalMap:N&&!!f.clearcoatNormalMap,displacementMap:!!f.displacementMap,roughnessMap:!!f.roughnessMap,metalnessMap:!!f.metalnessMap,specularMap:!!f.specularMap,specularIntensityMap:!!f.specularIntensityMap,specularColorMap:!!f.specularColorMap,opaque:!1===f.transparent&&f.blending===u,alphaMap:!!f.alphaMap,alphaTest:M,gradientMap:!!f.gradientMap,sheen:f.sheen>0,sheenColorMap:!!f.sheenColorMap,sheenRoughnessMap:!!f.sheenRoughnessMap,transmission:f.transmission>0,transmissionMap:!!f.transmissionMap,thicknessMap:!!f.thicknessMap,combine:f.combine,vertexTangents:!!f.normalMap&&!!x.attributes.tangent,vertexColors:f.vertexColors,vertexAlphas:!0===f.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,vertexUvs:!!f.map||!!f.bumpMap||!!f.normalMap||!!f.specularMap||!!f.alphaMap||!!f.emissiveMap||!!f.roughnessMap||!!f.metalnessMap||!!f.clearcoatMap||!!f.clearcoatRoughnessMap||!!f.clearcoatNormalMap||!!f.displacementMap||!!f.transmissionMap||!!f.thicknessMap||!!f.specularIntensityMap||!!f.specularColorMap||!!f.sheenColorMap||!!f.sheenRoughnessMap,uvsVertexOnly:!(f.map||f.bumpMap||f.normalMap||f.specularMap||f.alphaMap||f.emissiveMap||f.roughnessMap||f.metalnessMap||f.clearcoatNormalMap||f.transmission>0||f.transmissionMap||f.thicknessMap||f.specularIntensityMap||f.specularColorMap||f.sheen>0||f.sheenColorMap||f.sheenRoughnessMap)&&!!f.displacementMap,fog:!!w,useFog:f.fog,fogExp2:w&&w.isFogExp2,flatShading:!!f.flatShading,sizeAttenuation:f.sizeAttenuation,logarithmicDepthBuffer:l,skinning:!0===v.isSkinnedMesh&&C>0,maxBones:C,useVertexTexture:m,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:E,morphTextureStride:F,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:g.numPlanes,numClipIntersection:g.numIntersection,dithering:f.dithering,shadowMapEnabled:a.shadowMap.enabled&&j.length>0,shadowMapType:a.shadowMap.type,toneMapping:f.toneMapped?a.toneMapping:$,physicallyCorrectLights:a.physicallyCorrectLights,premultipliedAlpha:f.premultipliedAlpha,doubleSided:f.side===q,flipSided:f.side===p,depthPacking:void 0!==f.depthPacking&&f.depthPacking,index0AttributeName:f.index0AttributeName,extensionDerivatives:f.extensions&&f.extensions.derivatives,extensionFragDepth:f.extensions&&f.extensions.fragDepth,extensionDrawBuffers:f.extensions&&f.extensions.drawBuffers,extensionShaderTextureLOD:f.extensions&&f.extensions.shaderTextureLOD,rendererExtensionFragDepth:k||d.has("EXT_frag_depth"),rendererExtensionDrawBuffers:k||d.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:k||d.has("EXT_shader_texture_lod"),customProgramCacheKey:f.customProgramCacheKey()};return O},getProgramCacheKey:function(b){var c,d,e,f;let g=[];if(b.shaderID?g.push(b.shaderID):(g.push(b.customVertexShaderID),g.push(b.customFragmentShaderID)),void 0!==b.defines)for(let i in b.defines)g.push(i),g.push(b.defines[i]);return!1===b.isRawShaderMaterial&&(c=g,d=b,c.push(d.precision),c.push(d.outputEncoding),c.push(d.envMapMode),c.push(d.envMapCubeUVHeight),c.push(d.combine),c.push(d.vertexUvs),c.push(d.fogExp2),c.push(d.sizeAttenuation),c.push(d.maxBones),c.push(d.morphTargetsCount),c.push(d.morphAttributeCount),c.push(d.numDirLights),c.push(d.numPointLights),c.push(d.numSpotLights),c.push(d.numHemiLights),c.push(d.numRectAreaLights),c.push(d.numDirLightShadows),c.push(d.numPointLightShadows),c.push(d.numSpotLightShadows),c.push(d.shadowMapType),c.push(d.toneMapping),c.push(d.numClippingPlanes),c.push(d.numClipIntersection),e=g,f=b,h.disableAll(),f.isWebGL2&&h.enable(0),f.supportsVertexTextures&&h.enable(1),f.instancing&&h.enable(2),f.instancingColor&&h.enable(3),f.map&&h.enable(4),f.matcap&&h.enable(5),f.envMap&&h.enable(6),f.lightMap&&h.enable(7),f.aoMap&&h.enable(8),f.emissiveMap&&h.enable(9),f.bumpMap&&h.enable(10),f.normalMap&&h.enable(11),f.objectSpaceNormalMap&&h.enable(12),f.tangentSpaceNormalMap&&h.enable(13),f.clearcoat&&h.enable(14),f.clearcoatMap&&h.enable(15),f.clearcoatRoughnessMap&&h.enable(16),f.clearcoatNormalMap&&h.enable(17),f.displacementMap&&h.enable(18),f.specularMap&&h.enable(19),f.roughnessMap&&h.enable(20),f.metalnessMap&&h.enable(21),f.gradientMap&&h.enable(22),f.alphaMap&&h.enable(23),f.alphaTest&&h.enable(24),f.vertexColors&&h.enable(25),f.vertexAlphas&&h.enable(26),f.vertexUvs&&h.enable(27),f.vertexTangents&&h.enable(28),f.uvsVertexOnly&&h.enable(29),f.fog&&h.enable(30),e.push(h.mask),h.disableAll(),f.useFog&&h.enable(0),f.flatShading&&h.enable(1),f.logarithmicDepthBuffer&&h.enable(2),f.skinning&&h.enable(3),f.useVertexTexture&&h.enable(4),f.morphTargets&&h.enable(5),f.morphNormals&&h.enable(6),f.morphColors&&h.enable(7),f.premultipliedAlpha&&h.enable(8),f.shadowMapEnabled&&h.enable(9),f.physicallyCorrectLights&&h.enable(10),f.doubleSided&&h.enable(11),f.flipSided&&h.enable(12),f.depthPacking&&h.enable(13),f.dithering&&h.enable(14),f.specularIntensityMap&&h.enable(15),f.specularColorMap&&h.enable(16),f.transmission&&h.enable(17),f.transmissionMap&&h.enable(18),f.thicknessMap&&h.enable(19),f.sheen&&h.enable(20),f.sheenColorMap&&h.enable(21),f.sheenRoughnessMap&&h.enable(22),f.decodeVideoTexture&&h.enable(23),f.opaque&&h.enable(24),e.push(h.mask),g.push(a.outputEncoding)),g.push(b.customProgramCacheKey),g.join()},getUniforms:function(a){let b=s[a.type],c;if(b){let d=eW[b];c=eD.clone(d.uniforms)}else c=a.uniforms;return c},acquireProgram:function(b,c){let d;for(let e=0,g=j.length;e<g;e++){let h=j[e];if(h.cacheKey===c){d=h,++d.usedTimes;break}}return void 0===d&&(d=new gA(a,c,b,f),j.push(d)),d},releaseProgram:function(a){if(0==--a.usedTimes){let b=j.indexOf(a);j[b]=j[j.length-1],j.pop(),a.destroy()}},releaseShaderCache:function(a){i.remove(a)},programs:j,dispose:function(){i.dispose()}}}function gF(){let a=new WeakMap;return{get:function(b){let c=a.get(b);return void 0===c&&(c={},a.set(b,c)),c},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function gG(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function gH(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function gI(){let a=[],b=0,c=[],d=[],e=[];function f(c,d,e,f,g,h){let i=a[b];return void 0===i?(i={id:c.id,object:c,geometry:d,material:e,groupOrder:f,renderOrder:c.renderOrder,z:g,group:h},a[b]=i):(i.id=c.id,i.object=c,i.geometry=d,i.material=e,i.groupOrder=f,i.renderOrder=c.renderOrder,i.z=g,i.group=h),b++,i}return{opaque:c,transmissive:d,transparent:e,init:function(){b=0,c.length=0,d.length=0,e.length=0},push:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.push(k):!0===g.transparent?e.push(k):c.push(k)},unshift:function(a,b,g,h,i,j){let k=f(a,b,g,h,i,j);g.transmission>0?d.unshift(k):!0===g.transparent?e.unshift(k):c.unshift(k)},finish:function(){for(let c=b,d=a.length;c<d;c++){let e=a[c];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(a,b){c.length>1&&c.sort(a||gG),d.length>1&&d.sort(b||gH),e.length>1&&e.sort(b||gH)}}}function gJ(){let a=new WeakMap;return{get:function(b,c){let d;return!1===a.has(b)?(d=new gI,a.set(b,[d])):c>=a.get(b).length?(d=new gI,a.get(b).push(d)):d=a.get(b)[c],d},dispose:function(){a=new WeakMap}}}function gK(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":c={direction:new cQ,color:new cB};break;case"SpotLight":c={position:new cQ,direction:new cQ,color:new cB,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new cQ,color:new cB,distance:0,decay:0};break;case"HemisphereLight":c={direction:new cQ,skyColor:new cB,groundColor:new cB};break;case"RectAreaLight":c={color:new cB,position:new cQ,halfWidth:new cQ,halfHeight:new cQ}}return a[b.id]=c,c}}}let gL=0;function gM(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}function gN(a,b){let c=new gK,d=function(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new cl};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new cl,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let f=0;f<9;f++)e.probe.push(new cQ);let g=new cQ,h=new dj,i=new dj;return{setup:function(f,g){let h=0,i=0,j=0;for(let k=0;k<9;k++)e.probe[k].set(0,0,0);let l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;f.sort(gM);let t=!0!==g?Math.PI:1;for(let u=0,v=f.length;u<v;u++){let w=f[u],x=w.color,y=w.intensity,z=w.distance,A=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)h+=x.r*y*t,i+=x.g*y*t,j+=x.b*y*t;else if(w.isLightProbe)for(let B=0;B<9;B++)e.probe[B].addScaledVector(w.sh.coefficients[B],y);else if(w.isDirectionalLight){let C=c.get(w);if(C.color.copy(w.color).multiplyScalar(w.intensity*t),w.castShadow){let D=w.shadow,E=d.get(w);E.shadowBias=D.bias,E.shadowNormalBias=D.normalBias,E.shadowRadius=D.radius,E.shadowMapSize=D.mapSize,e.directionalShadow[l]=E,e.directionalShadowMap[l]=A,e.directionalShadowMatrix[l]=w.shadow.matrix,q++}e.directional[l]=C,l++}else if(w.isSpotLight){let F=c.get(w);if(F.position.setFromMatrixPosition(w.matrixWorld),F.color.copy(x).multiplyScalar(y*t),F.distance=z,F.coneCos=Math.cos(w.angle),F.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),F.decay=w.decay,w.castShadow){let G=w.shadow,H=d.get(w);H.shadowBias=G.bias,H.shadowNormalBias=G.normalBias,H.shadowRadius=G.radius,H.shadowMapSize=G.mapSize,e.spotShadow[n]=H,e.spotShadowMap[n]=A,e.spotShadowMatrix[n]=w.shadow.matrix,s++}e.spot[n]=F,n++}else if(w.isRectAreaLight){let I=c.get(w);I.color.copy(x).multiplyScalar(y),I.halfWidth.set(.5*w.width,0,0),I.halfHeight.set(0,.5*w.height,0),e.rectArea[o]=I,o++}else if(w.isPointLight){let J=c.get(w);if(J.color.copy(w.color).multiplyScalar(w.intensity*t),J.distance=w.distance,J.decay=w.decay,w.castShadow){let K=w.shadow,L=d.get(w);L.shadowBias=K.bias,L.shadowNormalBias=K.normalBias,L.shadowRadius=K.radius,L.shadowMapSize=K.mapSize,L.shadowCameraNear=K.camera.near,L.shadowCameraFar=K.camera.far,e.pointShadow[m]=L,e.pointShadowMap[m]=A,e.pointShadowMatrix[m]=w.shadow.matrix,r++}e.point[m]=J,m++}else if(w.isHemisphereLight){let M=c.get(w);M.skyColor.copy(w.color).multiplyScalar(y*t),M.groundColor.copy(w.groundColor).multiplyScalar(y*t),e.hemi[p]=M,p++}}o>0&&(b.isWebGL2?(e.rectAreaLTC1=eV.LTC_FLOAT_1,e.rectAreaLTC2=eV.LTC_FLOAT_2):!0===a.has("OES_texture_float_linear")?(e.rectAreaLTC1=eV.LTC_FLOAT_1,e.rectAreaLTC2=eV.LTC_FLOAT_2):!0===a.has("OES_texture_half_float_linear")?(e.rectAreaLTC1=eV.LTC_HALF_1,e.rectAreaLTC2=eV.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),e.ambient[0]=h,e.ambient[1]=i,e.ambient[2]=j;let N=e.hash;(N.directionalLength!==l||N.pointLength!==m||N.spotLength!==n||N.rectAreaLength!==o||N.hemiLength!==p||N.numDirectionalShadows!==q||N.numPointShadows!==r||N.numSpotShadows!==s)&&(e.directional.length=l,e.spot.length=n,e.rectArea.length=o,e.point.length=m,e.hemi.length=p,e.directionalShadow.length=q,e.directionalShadowMap.length=q,e.pointShadow.length=r,e.pointShadowMap.length=r,e.spotShadow.length=s,e.spotShadowMap.length=s,e.directionalShadowMatrix.length=q,e.pointShadowMatrix.length=r,e.spotShadowMatrix.length=s,N.directionalLength=l,N.pointLength=m,N.spotLength=n,N.rectAreaLength=o,N.hemiLength=p,N.numDirectionalShadows=q,N.numPointShadows=r,N.numSpotShadows=s,e.version=gL++)},setupView:function(a,b){let c=0,d=0,f=0,j=0,k=0,l=b.matrixWorldInverse;for(let m=0,n=a.length;m<n;m++){let o=a[m];if(o.isDirectionalLight){let p=e.directional[c];p.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),p.direction.sub(g),p.direction.transformDirection(l),c++}else if(o.isSpotLight){let q=e.spot[f];q.position.setFromMatrixPosition(o.matrixWorld),q.position.applyMatrix4(l),q.direction.setFromMatrixPosition(o.matrixWorld),g.setFromMatrixPosition(o.target.matrixWorld),q.direction.sub(g),q.direction.transformDirection(l),f++}else if(o.isRectAreaLight){let r=e.rectArea[j];r.position.setFromMatrixPosition(o.matrixWorld),r.position.applyMatrix4(l),i.identity(),h.copy(o.matrixWorld),h.premultiply(l),i.extractRotation(h),r.halfWidth.set(.5*o.width,0,0),r.halfHeight.set(0,.5*o.height,0),r.halfWidth.applyMatrix4(i),r.halfHeight.applyMatrix4(i),j++}else if(o.isPointLight){let s=e.point[d];s.position.setFromMatrixPosition(o.matrixWorld),s.position.applyMatrix4(l),d++}else if(o.isHemisphereLight){let t=e.hemi[k];t.direction.setFromMatrixPosition(o.matrixWorld),t.direction.transformDirection(l),t.direction.normalize(),k++}}},state:e}}function gO(a,b){let c=new gN(a,b),d=[],e=[];return{init:function(){d.length=0,e.length=0},state:{lightsArray:d,shadowsArray:e,lights:c},setupLights:function(a){c.setup(d,a)},setupLightsView:function(a){c.setupView(d,a)},pushLight:function(a){d.push(a)},pushShadow:function(a){e.push(a)}}}function gP(a,b){let c=new WeakMap;return{get:function(d,e=0){let f;return!1===c.has(d)?(f=new gO(a,b),c.set(d,[f])):e>=c.get(d).length?(f=new gO(a,b),c.get(d).push(f)):f=c.get(d)[e],f},dispose:function(){c=new WeakMap}}}class gQ extends dW{constructor(a){super(),this.type="MeshDepthMaterial",this.depthPacking=by,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(a)}copy(a){return super.copy(a),this.depthPacking=a.depthPacking,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this}}gQ.prototype.isMeshDepthMaterial=!0;class gR extends dW{constructor(a){super(),this.type="MeshDistanceMaterial",this.referencePosition=new cQ,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(a)}copy(a){return super.copy(a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this}}function gS(a,b,c){let d=new eQ,e=new cl,f=new cl,g=new cI,h=new gQ({depthPacking:bz}),i=new gR,j={},k=c.maxTextureSize,m={0:p,1:o,2:q},r=new eE({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new cl},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),s=r.clone();s.defines.HORIZONTAL_PASS=1;let u=new eg;u.setAttribute("position",new d$(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let v=new ey(u,r),w=this;function x(c,d){let e=b.update(v);r.defines.VSM_SAMPLES!==c.blurSamples&&(r.defines.VSM_SAMPLES=c.blurSamples,s.defines.VSM_SAMPLES=c.blurSamples,r.needsUpdate=!0,s.needsUpdate=!0),r.uniforms.shadow_pass.value=c.map.texture,r.uniforms.resolution.value=c.mapSize,r.uniforms.radius.value=c.radius,a.setRenderTarget(c.mapPass),a.clear(),a.renderBufferDirect(d,null,e,r,v,null),s.uniforms.shadow_pass.value=c.mapPass.texture,s.uniforms.resolution.value=c.mapSize,s.uniforms.radius.value=c.radius,a.setRenderTarget(c.map),a.clear(),a.renderBufferDirect(d,null,e,s,v,null)}function y(b,c,d,e,f,g){let k=null,l=!0===d.isPointLight?b.customDistanceMaterial:b.customDepthMaterial;if(k=void 0!==l?l:!0===d.isPointLight?i:h,a.localClippingEnabled&&!0===c.clipShadows&&0!==c.clippingPlanes.length||c.displacementMap&&0!==c.displacementScale||c.alphaMap&&c.alphaTest>0){let o=k.uuid,p=c.uuid,q=j[o];void 0===q&&(q={},j[o]=q);let r=q[p];void 0===r&&(r=k.clone(),q[p]=r),k=r}return k.visible=c.visible,k.wireframe=c.wireframe,g===n?k.side=null!==c.shadowSide?c.shadowSide:c.side:k.side=null!==c.shadowSide?c.shadowSide:m[c.side],k.alphaMap=c.alphaMap,k.alphaTest=c.alphaTest,k.clipShadows=c.clipShadows,k.clippingPlanes=c.clippingPlanes,k.clipIntersection=c.clipIntersection,k.displacementMap=c.displacementMap,k.displacementScale=c.displacementScale,k.displacementBias=c.displacementBias,k.wireframeLinewidth=c.wireframeLinewidth,k.linewidth=c.linewidth,!0===d.isPointLight&&!0===k.isMeshDistanceMaterial&&(k.referencePosition.setFromMatrixPosition(d.matrixWorld),k.nearDistance=e,k.farDistance=f),k}function z(c,e,f,g,h){if(!1===c.visible)return;let i=c.layers.test(e.layers);if(i&&(c.isMesh||c.isLine||c.isPoints)&&(c.castShadow||c.receiveShadow&&h===n)&&(!c.frustumCulled||d.intersectsObject(c))){c.modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,c.matrixWorld);let j=b.update(c),k=c.material;if(Array.isArray(k)){let l=j.groups;for(let m=0,o=l.length;m<o;m++){let p=l[m],q=k[p.materialIndex];if(q&&q.visible){let r=y(c,q,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,r,c,p)}}}else if(k.visible){let s=y(c,k,g,f.near,f.far,h);a.renderBufferDirect(f,null,j,s,c,null)}}let t=c.children;for(let u=0,v=t.length;u<v;u++)z(t[u],e,f,g,h)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=l,this.render=function(b,c,h){if(!1===w.enabled||!1===w.autoUpdate&&!1===w.needsUpdate||0===b.length)return;let i=a.getRenderTarget(),j=a.getActiveCubeFace(),l=a.getActiveMipmapLevel(),m=a.state;m.setBlending(t),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(let o=0,p=b.length;o<p;o++){let q=b[o],r=q.shadow;if(void 0===r){console.warn("THREE.WebGLShadowMap:",q,"has no shadow.");continue}if(!1===r.autoUpdate&&!1===r.needsUpdate)continue;e.copy(r.mapSize);let s=r.getFrameExtents();if(e.multiply(s),f.copy(r.mapSize),(e.x>k||e.y>k)&&(e.x>k&&(f.x=Math.floor(k/s.x),e.x=f.x*s.x,r.mapSize.x=f.x),e.y>k&&(f.y=Math.floor(k/s.y),e.y=f.y*s.y,r.mapSize.y=f.y)),null!==r.map||r.isPointLightShadow||this.type!==n||(r.map=new cJ(e.x,e.y),r.map.texture.name=q.name+".shadowMap",r.mapPass=new cJ(e.x,e.y),r.camera.updateProjectionMatrix()),null===r.map){let u={minFilter:an,magFilter:an,format:aK};r.map=new cJ(e.x,e.y,u),r.map.texture.name=q.name+".shadowMap",r.camera.updateProjectionMatrix()}a.setRenderTarget(r.map),a.clear();let v=r.getViewportCount();for(let y=0;y<v;y++){let A=r.getViewport(y);g.set(f.x*A.x,f.y*A.y,f.x*A.z,f.y*A.w),m.viewport(g),r.updateMatrices(q,y),d=r.getFrustum(),z(c,h,r.camera,q,this.type)}r.isPointLightShadow||this.type!==n||x(r,h),r.needsUpdate=!1}w.needsUpdate=!1,a.setRenderTarget(i,j,l)}}function gT(a,b,c){let d=c.isWebGL2,e=new function(){let b=!1,c=new cI,d=null,e=new cI(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(b,d,f,g,h){!0===h&&(b*=g,d*=g,f*=g),c.set(b,d,f,g),!1===e.equals(c)&&(a.clearColor(b,d,f,g),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},f=new function(){let b=!1,c=null,d=null,e=null;return{setTest:function(a){a?at(2929):au(2929)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case P:a.depthFunc(512);break;case Q:a.depthFunc(519);break;case R:a.depthFunc(513);break;case S:a.depthFunc(515);break;case T:a.depthFunc(514);break;case U:a.depthFunc(518);break;case V:a.depthFunc(516);break;case W:a.depthFunc(517);break;default:a.depthFunc(515)}else a.depthFunc(515);d=b}},setLocked:function(a){b=a},setClear:function(b){e!==b&&(a.clearDepth(b),e=b)},reset:function(){b=!1,c=null,d=null,e=null}}},j=new function(){let b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null;return{setTest:function(a){b||(a?at(2960):au(2960))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,g){(d!==b||e!==c||f!==g)&&(a.stencilFunc(b,c,g),d=b,e=c,f=g)},setOp:function(b,c,d){(g!==b||h!==c||i!==d)&&(a.stencilOp(b,c,d),g=b,h=c,i=d)},setLocked:function(a){b=a},setClear:function(b){j!==b&&(a.clearStencil(b),j=b)},reset:function(){b=!1,c=null,d=null,e=null,f=null,g=null,h=null,i=null,j=null}}},k={},l={},m=new WeakMap,n=[],o=null,r=!1,s=null,X=null,Y=null,Z=null,$=null,_=null,aa=null,ab=!1,ac=null,ad=null,ae=null,af=null,ag=null,ah=a.getParameter(35661),ai=!1,aj=0,ak=a.getParameter(7938);-1!==ak.indexOf("WebGL")?ai=parseFloat(/^WebGL (\d)/.exec(ak)[1])>=1:-1!==ak.indexOf("OpenGL ES")&&(ai=parseFloat(/^OpenGL ES (\d)/.exec(ak)[1])>=2);let al=null,am={},an=a.getParameter(3088),ao=a.getParameter(2978),ap=new cI().fromArray(an),aq=new cI().fromArray(ao);function ar(b,c,d){let e=new Uint8Array(4),f=a.createTexture();a.bindTexture(b,f),a.texParameteri(b,10241,9728),a.texParameteri(b,10240,9728);for(let g=0;g<d;g++)a.texImage2D(c+g,0,6408,1,1,0,6408,5121,e);return f}let as={};function at(b){!0!==k[b]&&(a.enable(b),k[b]=!0)}function au(b){!1!==k[b]&&(a.disable(b),k[b]=!1)}as[3553]=ar(3553,3553,1),as[34067]=ar(34067,34069,6),e.setClear(0,0,0,1),f.setClear(1),j.setClear(0),at(2929),f.setFunc(S),az(!1),aA(h),at(2884),ay(t);let av={[z]:32774,[A]:32778,[B]:32779};if(d)av[C]=32775,av[D]=32776;else{let aw=b.get("EXT_blend_minmax");null!==aw&&(av[C]=aw.MIN_EXT,av[D]=aw.MAX_EXT)}let ax={[E]:0,[F]:1,[G]:768,[I]:770,[O]:776,[M]:774,[K]:772,[H]:769,[J]:771,[N]:775,[L]:773};function ay(b,c,d,e,f,g,h,i){if(b===t){!0===r&&(au(3042),r=!1);return}if(!1===r&&(at(3042),r=!0),b!==y){if(b!==s||i!==ab){if((X!==z||$!==z)&&(a.blendEquation(32774),X=z,$=z),i)switch(b){case u:a.blendFuncSeparate(1,771,1,771);break;case v:a.blendFunc(1,1);break;case w:a.blendFuncSeparate(0,769,0,1);break;case x:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case u:a.blendFuncSeparate(770,771,1,771);break;case v:a.blendFunc(770,1);break;case w:a.blendFuncSeparate(0,769,0,1);break;case x:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}Y=null,Z=null,_=null,aa=null,s=b,ab=i}return}f=f||c,g=g||d,h=h||e,(c!==X||f!==$)&&(a.blendEquationSeparate(av[c],av[f]),X=c,$=f),(d!==Y||e!==Z||g!==_||h!==aa)&&(a.blendFuncSeparate(ax[d],ax[e],ax[g],ax[h]),Y=d,Z=e,_=g,aa=h),s=b,ab=null}function az(b){ac!==b&&(b?a.frontFace(2304):a.frontFace(2305),ac=b)}function aA(b){b!==g?(at(2884),b!==ad&&(b===h?a.cullFace(1029):b===i?a.cullFace(1028):a.cullFace(1032))):au(2884),ad=b}function aB(b,c,d){b?(at(32823),(af!==c||ag!==d)&&(a.polygonOffset(c,d),af=c,ag=d)):au(32823)}function aC(b){void 0===b&&(b=33984+ah-1),al!==b&&(a.activeTexture(b),al=b)}return{buffers:{color:e,depth:f,stencil:j},enable:at,disable:au,bindFramebuffer:function(b,c){return l[b]!==c&&(a.bindFramebuffer(b,c),l[b]=c,d&&(36009===b&&(l[36160]=c),36160===b&&(l[36009]=c)),!0)},drawBuffers:function(d,e){let f=n,g=!1;if(d){if(void 0===(f=m.get(e))&&(f=[],m.set(e,f)),d.isWebGLMultipleRenderTargets){let h=d.texture;if(f.length!==h.length||36064!==f[0]){for(let i=0,j=h.length;i<j;i++)f[i]=36064+i;f.length=h.length,g=!0}}else 36064!==f[0]&&(f[0]=36064,g=!0)}else 1029!==f[0]&&(f[0]=1029,g=!0);g&&(c.isWebGL2?a.drawBuffers(f):b.get("WEBGL_draw_buffers").drawBuffersWEBGL(f))},useProgram:function(b){return o!==b&&(a.useProgram(b),o=b,!0)},setBlending:ay,setMaterial:function(a,b){a.side===q?au(2884):at(2884);let c=a.side===p;b&&(c=!c),az(c),a.blending===u&&!1===a.transparent?ay(t):ay(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),f.setFunc(a.depthFunc),f.setTest(a.depthTest),f.setMask(a.depthWrite),e.setMask(a.colorWrite);let d=a.stencilWrite;j.setTest(d),d&&(j.setMask(a.stencilWriteMask),j.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),j.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),aB(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits),!0===a.alphaToCoverage?at(32926):au(32926)},setFlipSided:az,setCullFace:aA,setLineWidth:function(b){b!==ae&&(ai&&a.lineWidth(b),ae=b)},setPolygonOffset:aB,setScissorTest:function(a){a?at(3089):au(3089)},activeTexture:aC,bindTexture:function(b,c){null===al&&aC();let d=am[al];void 0===d&&(d={type:void 0,texture:void 0},am[al]=d),(d.type!==b||d.texture!==c)&&(a.bindTexture(b,c||as[b]),d.type=b,d.texture=c)},unbindTexture:function(){let b=am[al];void 0!==b&&void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage2D:function(){try{a.texStorage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage3D:function(){try{a.texStorage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage2D:function(){try{a.texSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage3D:function(){try{a.texSubImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},compressedTexSubImage2D:function(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},scissor:function(b){!1===ap.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),ap.copy(b))},viewport:function(b){!1===aq.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),aq.copy(b))},reset:function(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===d&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),k={},al=null,am={},l={},m=new WeakMap,n=[],o=null,r=!1,s=null,X=null,Y=null,Z=null,$=null,_=null,aa=null,ab=!1,ac=null,ad=null,ae=null,af=null,ag=null,ap.set(0,0,a.canvas.width,a.canvas.height),aq.set(0,0,a.canvas.width,a.canvas.height),e.reset(),f.reset(),j.reset()}}}function gU(a,b,c,d,e,f,g){let h=e.isWebGL2,i=e.maxTextures,j=e.maxCubemapSize,k=e.maxTextureSize,l=e.maxSamples,m=b.has("WEBGL_multisampled_render_to_texture")?b.get("WEBGL_multisampled_render_to_texture"):null,n=/OculusBrowser/g.test(navigator.userAgent),o=new WeakMap,p,q=new WeakMap,r=!1;try{r="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(s){}function t(a,b){return r?new OffscreenCanvas(a,b):cq("canvas")}function u(a,b,c,d){let e=1;if((a.width>d||a.height>d)&&(e=d/Math.max(a.width,a.height)),e<1||!0===b){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let f=b?cj:Math.floor,g=f(e*a.width),h=f(e*a.height);void 0===p&&(p=t(g,h));let i=c?t(g,h):p;i.width=g,i.height=h;let j=i.getContext("2d");return j.drawImage(a,0,0,g,h),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+g+"x"+h+")."),i}"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").")}return a}function v(a){return ch(a.width)&&ch(a.height)}function w(a,b){return a.generateMipmaps&&b&&a.minFilter!==an&&a.minFilter!==as}function x(b){a.generateMipmap(b)}function y(c,d,e,f,g=!1){if(!1===h)return d;if(null!==c){if(void 0!==a[c])return a[c];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+c+"'")}let i=d;return 6403===d&&(5126===e&&(i=33326),5131===e&&(i=33325),5121===e&&(i=33321)),33319===d&&(5126===e&&(i=33328),5131===e&&(i=33327),5121===e&&(i=33323)),6408===d&&(5126===e&&(i=34836),5131===e&&(i=34842),5121===e&&(i=f===bx&&!1===g?35907:32856),32819===e&&(i=32854),32820===e&&(i=32855)),(33325===i||33326===i||33327===i||33328===i||34842===i||34836===i)&&b.get("EXT_color_buffer_float"),i}function z(a,b,c){return!0===w(a,c)||a.isFramebufferTexture&&a.minFilter!==an&&a.minFilter!==as?Math.log2(Math.max(b.width,b.height))+1:void 0!==a.mipmaps&&a.mipmaps.length>0?a.mipmaps.length:a.isCompressedTexture&&Array.isArray(a.image)?b.mipmaps.length:1}function A(a){return a===an||a===ao||a===aq?9728:9729}function B(a){let b=a.target;b.removeEventListener("dispose",B),D(b),b.isVideoTexture&&o.delete(b)}function C(a){let b=a.target;b.removeEventListener("dispose",C),F(b)}function D(a){let b=d.get(a);if(void 0===b.__webglInit)return;let c=a.source,e=q.get(c);if(e){let f=e[b.__cacheKey];f.usedTimes--,0===f.usedTimes&&E(a),0===Object.keys(e).length&&q.delete(c)}d.remove(a)}function E(b){let c=d.get(b);a.deleteTexture(c.__webglTexture);let e=b.source,f=q.get(e);delete f[c.__cacheKey],g.memory.textures--}function F(b){let c=b.texture,e=d.get(b),f=d.get(c);if(void 0!==f.__webglTexture&&(a.deleteTexture(f.__webglTexture),g.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let h=0;h<6;h++)a.deleteFramebuffer(e.__webglFramebuffer[h]),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer[h]);else a.deleteFramebuffer(e.__webglFramebuffer),e.__webglDepthbuffer&&a.deleteRenderbuffer(e.__webglDepthbuffer),e.__webglMultisampledFramebuffer&&a.deleteFramebuffer(e.__webglMultisampledFramebuffer),e.__webglColorRenderbuffer&&a.deleteRenderbuffer(e.__webglColorRenderbuffer),e.__webglDepthRenderbuffer&&a.deleteRenderbuffer(e.__webglDepthRenderbuffer);if(b.isWebGLMultipleRenderTargets)for(let i=0,j=c.length;i<j;i++){let k=d.get(c[i]);k.__webglTexture&&(a.deleteTexture(k.__webglTexture),g.memory.textures--),d.remove(c[i])}d.remove(c),d.remove(b)}let G=0;function H(a,b){let e=d.get(a);if(a.isVideoTexture&&S(a),!1===a.isRenderTargetTexture&&a.version>0&&e.__version!==a.version){let f=a.image;if(null===f)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===f.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{M(e,a,b);return}}c.activeTexture(33984+b),c.bindTexture(3553,e.__webglTexture)}let I={[ak]:10497,[al]:33071,[am]:33648},J={[an]:9728,[ao]:9984,[aq]:9986,[as]:9729,[at]:9985,[av]:9987};function K(c,f,g){if(g?(a.texParameteri(c,10242,I[f.wrapS]),a.texParameteri(c,10243,I[f.wrapT]),(32879===c||35866===c)&&a.texParameteri(c,32882,I[f.wrapR]),a.texParameteri(c,10240,J[f.magFilter]),a.texParameteri(c,10241,J[f.minFilter])):(a.texParameteri(c,10242,33071),a.texParameteri(c,10243,33071),(32879===c||35866===c)&&a.texParameteri(c,32882,33071),(f.wrapS!==al||f.wrapT!==al)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),a.texParameteri(c,10240,A(f.magFilter)),a.texParameteri(c,10241,A(f.minFilter)),f.minFilter!==an&&f.minFilter!==as&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===b.has("EXT_texture_filter_anisotropic")){let i=b.get("EXT_texture_filter_anisotropic");(f.type!==aD||!1!==b.has("OES_texture_float_linear"))&&(!1!==h||f.type!==aE||!1!==b.has("OES_texture_half_float_linear"))&&(f.anisotropy>1||d.get(f).__currentAnisotropy)&&(a.texParameterf(c,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,e.getMaxAnisotropy())),d.get(f).__currentAnisotropy=f.anisotropy)}}function L(b,c){let d=!1;void 0===b.__webglInit&&(b.__webglInit=!0,c.addEventListener("dispose",B));let e=c.source,f=q.get(e);void 0===f&&(f={},q.set(e,f));let h=function(a){let b=[];return b.push(a.wrapS),b.push(a.wrapT),b.push(a.magFilter),b.push(a.minFilter),b.push(a.anisotropy),b.push(a.internalFormat),b.push(a.format),b.push(a.type),b.push(a.generateMipmaps),b.push(a.premultiplyAlpha),b.push(a.flipY),b.push(a.unpackAlignment),b.push(a.encoding),b.join()}(c);if(h!==b.__cacheKey){void 0===f[h]&&(f[h]={texture:a.createTexture(),usedTimes:0},g.memory.textures++,d=!0),f[h].usedTimes++;let i=f[b.__cacheKey];void 0!==i&&(f[b.__cacheKey].usedTimes--,0===i.usedTimes&&E(c)),b.__cacheKey=h,b.__webglTexture=f[h].texture}return d}function M(b,d,e){let g=3553;d.isDataArrayTexture&&(g=35866),d.isData3DTexture&&(g=32879);let i=L(b,d),j=d.source;if(c.activeTexture(33984+e),c.bindTexture(g,b.__webglTexture),j.version!==j.__currentVersion||!0===i){var l;a.pixelStorei(37440,d.flipY),a.pixelStorei(37441,d.premultiplyAlpha),a.pixelStorei(3317,d.unpackAlignment),a.pixelStorei(37443,0);let m=(l=d,!h&&(l.wrapS!==al||l.wrapT!==al||l.minFilter!==an&&l.minFilter!==as)&&!1===v(d.image)),n=u(d.image,m,!1,k);n=T(d,n);let o=v(n)||h,p=f.convert(d.format,d.encoding),q=f.convert(d.type),r=y(d.internalFormat,p,q,d.encoding,d.isVideoTexture);K(g,d,o);let s,t=d.mipmaps,A=h&&!0!==d.isVideoTexture,B=void 0===b.__version,C=z(d,n,o);if(d.isDepthTexture)r=6402,h?r=d.type===aD?36012:d.type===aC?33190:d.type===aH?35056:33189:d.type===aD&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),d.format===aN&&6402===r&&d.type!==aA&&d.type!==aC&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),d.type=aA,q=f.convert(d.type)),d.format===aO&&6402===r&&(r=34041,d.type!==aH&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),d.type=aH,q=f.convert(d.type))),A&&B?c.texStorage2D(3553,1,r,n.width,n.height):c.texImage2D(3553,0,r,n.width,n.height,0,p,q,null);else if(d.isDataTexture){if(t.length>0&&o){A&&B&&c.texStorage2D(3553,C,r,t[0].width,t[0].height);for(let D=0,E=t.length;D<E;D++)s=t[D],A?c.texSubImage2D(3553,D,0,0,s.width,s.height,p,q,s.data):c.texImage2D(3553,D,r,s.width,s.height,0,p,q,s.data);d.generateMipmaps=!1}else A?(B&&c.texStorage2D(3553,C,r,n.width,n.height),c.texSubImage2D(3553,0,0,0,n.width,n.height,p,q,n.data)):c.texImage2D(3553,0,r,n.width,n.height,0,p,q,n.data)}else if(d.isCompressedTexture){A&&B&&c.texStorage2D(3553,C,r,t[0].width,t[0].height);for(let F=0,G=t.length;F<G;F++)s=t[F],d.format!==aK?null!==p?A?c.compressedTexSubImage2D(3553,F,0,0,s.width,s.height,p,s.data):c.compressedTexImage2D(3553,F,r,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):A?c.texSubImage2D(3553,F,0,0,s.width,s.height,p,q,s.data):c.texImage2D(3553,F,r,s.width,s.height,0,p,q,s.data)}else if(d.isDataArrayTexture)A?(B&&c.texStorage3D(35866,C,r,n.width,n.height,n.depth),c.texSubImage3D(35866,0,0,0,0,n.width,n.height,n.depth,p,q,n.data)):c.texImage3D(35866,0,r,n.width,n.height,n.depth,0,p,q,n.data);else if(d.isData3DTexture)A?(B&&c.texStorage3D(32879,C,r,n.width,n.height,n.depth),c.texSubImage3D(32879,0,0,0,0,n.width,n.height,n.depth,p,q,n.data)):c.texImage3D(32879,0,r,n.width,n.height,n.depth,0,p,q,n.data);else if(d.isFramebufferTexture)A&&B?c.texStorage2D(3553,C,r,n.width,n.height):c.texImage2D(3553,0,r,n.width,n.height,0,p,q,null);else if(t.length>0&&o){A&&B&&c.texStorage2D(3553,C,r,t[0].width,t[0].height);for(let H=0,I=t.length;H<I;H++)s=t[H],A?c.texSubImage2D(3553,H,0,0,p,q,s):c.texImage2D(3553,H,r,p,q,s);d.generateMipmaps=!1}else A?(B&&c.texStorage2D(3553,C,r,n.width,n.height),c.texSubImage2D(3553,0,0,0,p,q,n)):c.texImage2D(3553,0,r,p,q,n);w(d,o)&&x(g),j.__currentVersion=j.version,d.onUpdate&&d.onUpdate(d)}b.__version=d.version}function N(b,e,g,h,i){let j=f.convert(g.format,g.encoding),k=f.convert(g.type),l=y(g.internalFormat,j,k,g.encoding),n=d.get(e);n.__hasExternalTextures||(32879===i||35866===i?c.texImage3D(i,0,l,e.width,e.height,e.depth,0,j,k,null):c.texImage2D(i,0,l,e.width,e.height,0,j,k,null)),c.bindFramebuffer(36160,b),R(e)?m.framebufferTexture2DMultisampleEXT(36160,h,i,d.get(g).__webglTexture,0,Q(e)):a.framebufferTexture2D(36160,h,i,d.get(g).__webglTexture,0),c.bindFramebuffer(36160,null)}function O(b,c,d){if(a.bindRenderbuffer(36161,b),c.depthBuffer&&!c.stencilBuffer){let e=33189;if(d||R(c)){let g=c.depthTexture;g&&g.isDepthTexture&&(g.type===aD?e=36012:g.type===aC&&(e=33190));let h=Q(c);R(c)?m.renderbufferStorageMultisampleEXT(36161,h,e,c.width,c.height):a.renderbufferStorageMultisample(36161,h,e,c.width,c.height)}else a.renderbufferStorage(36161,e,c.width,c.height);a.framebufferRenderbuffer(36160,36096,36161,b)}else if(c.depthBuffer&&c.stencilBuffer){let i=Q(c);d&&!1===R(c)?a.renderbufferStorageMultisample(36161,i,35056,c.width,c.height):R(c)?m.renderbufferStorageMultisampleEXT(36161,i,35056,c.width,c.height):a.renderbufferStorage(36161,34041,c.width,c.height),a.framebufferRenderbuffer(36160,33306,36161,b)}else{let j=!0===c.isWebGLMultipleRenderTargets?c.texture[0]:c.texture,k=f.convert(j.format,j.encoding),l=f.convert(j.type),n=y(j.internalFormat,k,l,j.encoding),o=Q(c);d&&!1===R(c)?a.renderbufferStorageMultisample(36161,o,n,c.width,c.height):R(c)?m.renderbufferStorageMultisampleEXT(36161,o,n,c.width,c.height):a.renderbufferStorage(36161,n,c.width,c.height)}a.bindRenderbuffer(36161,null)}function P(b){let e=d.get(b),f=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture&&!e.__autoAllocateDepthBuffer){if(f)throw Error("target.depthTexture not supported in Cube render targets");!function(b,e){let f=e&&e.isWebGLCubeRenderTarget;if(f)throw Error("Depth Texture with cube render targets is not supported");if(c.bindFramebuffer(36160,b),!(e.depthTexture&&e.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");d.get(e.depthTexture).__webglTexture&&e.depthTexture.image.width===e.width&&e.depthTexture.image.height===e.height||(e.depthTexture.image.width=e.width,e.depthTexture.image.height=e.height,e.depthTexture.needsUpdate=!0),H(e.depthTexture,0);let g=d.get(e.depthTexture).__webglTexture,h=Q(e);if(e.depthTexture.format===aN)R(e)?m.framebufferTexture2DMultisampleEXT(36160,36096,3553,g,0,h):a.framebufferTexture2D(36160,36096,3553,g,0);else if(e.depthTexture.format===aO)R(e)?m.framebufferTexture2DMultisampleEXT(36160,33306,3553,g,0,h):a.framebufferTexture2D(36160,33306,3553,g,0);else throw Error("Unknown depthTexture format")}(e.__webglFramebuffer,b)}else if(f){e.__webglDepthbuffer=[];for(let g=0;g<6;g++)c.bindFramebuffer(36160,e.__webglFramebuffer[g]),e.__webglDepthbuffer[g]=a.createRenderbuffer(),O(e.__webglDepthbuffer[g],b,!1)}else c.bindFramebuffer(36160,e.__webglFramebuffer),e.__webglDepthbuffer=a.createRenderbuffer(),O(e.__webglDepthbuffer,b,!1);c.bindFramebuffer(36160,null)}function Q(a){return Math.min(l,a.samples)}function R(a){let c=d.get(a);return h&&a.samples>0&&!0===b.has("WEBGL_multisampled_render_to_texture")&&!1!==c.__useRenderToTexture}function S(a){let b=g.render.frame;o.get(a)!==b&&(o.set(a,b),a.update())}function T(a,c){let d=a.encoding,e=a.format,f=a.type;return!0===a.isCompressedTexture||!0===a.isVideoTexture||a.format===b4||d!==bw&&(d===bx?!1===h?!0===b.has("EXT_sRGB")&&e===aK?(a.format=b4,a.minFilter=as,a.generateMipmaps=!1):c=cD.sRGBToLinear(c):(e!==aK||f!==ax)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",d)),c}this.allocateTextureUnit=function(){let a=G;return a>=i&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+i),G+=1,a},this.resetTextureUnits=function(){G=0},this.setTexture2D=H,this.setTexture2DArray=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){M(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(35866,e.__webglTexture)},this.setTexture3D=function(a,b){let e=d.get(a);if(a.version>0&&e.__version!==a.version){M(e,a,b);return}c.activeTexture(33984+b),c.bindTexture(32879,e.__webglTexture)},this.setTextureCube=function(b,e){let g=d.get(b);if(b.version>0&&g.__version!==b.version){(function b(d,e,g){if(6!==e.image.length)return;let i=L(d,e),k=e.source;if(c.activeTexture(33984+g),c.bindTexture(34067,d.__webglTexture),k.version!==k.__currentVersion||!0===i){a.pixelStorei(37440,e.flipY),a.pixelStorei(37441,e.premultiplyAlpha),a.pixelStorei(3317,e.unpackAlignment),a.pixelStorei(37443,0);let l=e.isCompressedTexture||e.image[0].isCompressedTexture,m=e.image[0]&&e.image[0].isDataTexture,n=[];for(let o=0;o<6;o++)l||m?n[o]=m?e.image[o].image:e.image[o]:n[o]=u(e.image[o],!1,!0,j),n[o]=T(e,n[o]);let p=n[0],q=v(p)||h,r=f.convert(e.format,e.encoding),s=f.convert(e.type),t=y(e.internalFormat,r,s,e.encoding),A=h&&!0!==e.isVideoTexture,B=void 0===d.__version,C=z(e,p,q);K(34067,e,q);let D;if(l){A&&B&&c.texStorage2D(34067,C,t,p.width,p.height);for(let E=0;E<6;E++){D=n[E].mipmaps;for(let F=0;F<D.length;F++){let G=D[F];e.format!==aK?null!==r?A?c.compressedTexSubImage2D(34069+E,F,0,0,G.width,G.height,r,G.data):c.compressedTexImage2D(34069+E,F,t,G.width,G.height,0,G.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):A?c.texSubImage2D(34069+E,F,0,0,G.width,G.height,r,s,G.data):c.texImage2D(34069+E,F,t,G.width,G.height,0,r,s,G.data)}}}else{D=e.mipmaps,A&&B&&(D.length>0&&C++,c.texStorage2D(34067,C,t,n[0].width,n[0].height));for(let H=0;H<6;H++)if(m){A?c.texSubImage2D(34069+H,0,0,0,n[H].width,n[H].height,r,s,n[H].data):c.texImage2D(34069+H,0,t,n[H].width,n[H].height,0,r,s,n[H].data);for(let I=0;I<D.length;I++){let J=D[I],M=J.image[H].image;A?c.texSubImage2D(34069+H,I+1,0,0,M.width,M.height,r,s,M.data):c.texImage2D(34069+H,I+1,t,M.width,M.height,0,r,s,M.data)}}else{A?c.texSubImage2D(34069+H,0,0,0,r,s,n[H]):c.texImage2D(34069+H,0,t,r,s,n[H]);for(let N=0;N<D.length;N++){let O=D[N];A?c.texSubImage2D(34069+H,N+1,0,0,r,s,O.image[H]):c.texImage2D(34069+H,N+1,t,r,s,O.image[H])}}}w(e,q)&&x(34067),k.__currentVersion=k.version,e.onUpdate&&e.onUpdate(e)}d.__version=e.version})(g,b,e);return}c.activeTexture(33984+e),c.bindTexture(34067,g.__webglTexture)},this.rebindTextures=function(a,b,c){let e=d.get(a);void 0!==b&&N(e.__webglFramebuffer,a,a.texture,36064,3553),void 0!==c&&P(a)},this.setupRenderTarget=function(b){let i=b.texture,j=d.get(b),k=d.get(i);b.addEventListener("dispose",C),!0!==b.isWebGLMultipleRenderTargets&&(void 0===k.__webglTexture&&(k.__webglTexture=a.createTexture()),k.__version=i.version,g.memory.textures++);let l=!0===b.isWebGLCubeRenderTarget,m=!0===b.isWebGLMultipleRenderTargets,n=v(b)||h;if(l){j.__webglFramebuffer=[];for(let o=0;o<6;o++)j.__webglFramebuffer[o]=a.createFramebuffer()}else if(j.__webglFramebuffer=a.createFramebuffer(),m){if(e.drawBuffers){let p=b.texture;for(let q=0,r=p.length;q<r;q++){let s=d.get(p[q]);void 0===s.__webglTexture&&(s.__webglTexture=a.createTexture(),g.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(h&&b.samples>0&&!1===R(b)){j.__webglMultisampledFramebuffer=a.createFramebuffer(),j.__webglColorRenderbuffer=a.createRenderbuffer(),a.bindRenderbuffer(36161,j.__webglColorRenderbuffer);let t=f.convert(i.format,i.encoding),u=f.convert(i.type),z=y(i.internalFormat,t,u,i.encoding),A=Q(b);a.renderbufferStorageMultisample(36161,A,z,b.width,b.height),c.bindFramebuffer(36160,j.__webglMultisampledFramebuffer),a.framebufferRenderbuffer(36160,36064,36161,j.__webglColorRenderbuffer),a.bindRenderbuffer(36161,null),b.depthBuffer&&(j.__webglDepthRenderbuffer=a.createRenderbuffer(),O(j.__webglDepthRenderbuffer,b,!0)),c.bindFramebuffer(36160,null)}if(l){c.bindTexture(34067,k.__webglTexture),K(34067,i,n);for(let B=0;B<6;B++)N(j.__webglFramebuffer[B],b,i,36064,34069+B);w(i,n)&&x(34067),c.unbindTexture()}else if(m){let D=b.texture;for(let E=0,F=D.length;E<F;E++){let G=D[E],H=d.get(G);c.bindTexture(3553,H.__webglTexture),K(3553,G,n),N(j.__webglFramebuffer,b,G,36064+E,3553),w(G,n)&&x(3553)}c.unbindTexture()}else{let I=3553;(b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(h?I=b.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),c.bindTexture(I,k.__webglTexture),K(I,i,n),N(j.__webglFramebuffer,b,i,36064,I),w(i,n)&&x(I),c.unbindTexture()}b.depthBuffer&&P(b)},this.updateRenderTargetMipmap=function(a){let b=v(a)||h,e=!0===a.isWebGLMultipleRenderTargets?a.texture:[a.texture];for(let f=0,g=e.length;f<g;f++){let i=e[f];if(w(i,b)){let j=a.isWebGLCubeRenderTarget?34067:3553,k=d.get(i).__webglTexture;c.bindTexture(j,k),x(j),c.unbindTexture()}}},this.updateMultisampleRenderTarget=function(b){if(h&&b.samples>0&&!1===R(b)){let e=b.width,f=b.height,g=16384,i=[36064],j=b.stencilBuffer?33306:36096;b.depthBuffer&&i.push(j);let k=d.get(b),l=void 0!==k.__ignoreDepthValues&&k.__ignoreDepthValues;!1===l&&(b.depthBuffer&&(g|=256),b.stencilBuffer&&(g|=1024)),c.bindFramebuffer(36008,k.__webglMultisampledFramebuffer),c.bindFramebuffer(36009,k.__webglFramebuffer),!0===l&&(a.invalidateFramebuffer(36008,[j]),a.invalidateFramebuffer(36009,[j])),a.blitFramebuffer(0,0,e,f,0,0,e,f,g,9728),n&&a.invalidateFramebuffer(36008,i),c.bindFramebuffer(36008,null),c.bindFramebuffer(36009,k.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=P,this.setupFrameBufferTexture=N,this.useMultisampledRTT=R}function gV(a,b,c){let d=c.isWebGL2;return{convert:function(a,c=null){let e;if(a===ax)return 5121;if(a===aF)return 32819;if(a===aG)return 32820;if(a===ay)return 5120;if(a===az)return 5122;if(a===aA)return 5123;if(a===aB)return 5124;if(a===aC)return 5125;if(a===aD)return 5126;if(a===aE)return d?5131:null!==(e=b.get("OES_texture_half_float"))?e.HALF_FLOAT_OES:null;if(a===aI)return 6406;if(a===aK)return 6408;if(a===aL)return 6409;if(a===aM)return 6410;if(a===aN)return 6402;if(a===aO)return 34041;if(a===aP)return 6403;if(a===aJ)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===b4)return null!==(e=b.get("EXT_sRGB"))?e.SRGB_ALPHA_EXT:null;if(a===aQ)return 36244;if(a===aR)return 33319;if(a===aS)return 33320;if(a===aT)return 36249;if(a===aU||a===aV||a===aW||a===aX){if(c===bx){if(null===(e=b.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(a===aU)return e.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===aV)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===aW)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===aX)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(e=b.get("WEBGL_compressed_texture_s3tc")))return null;if(a===aU)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===aV)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===aW)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===aX)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(a===aY||a===aZ||a===a$||a===a_){if(null===(e=b.get("WEBGL_compressed_texture_pvrtc")))return null;if(a===aY)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===aZ)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===a$)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===a_)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(a===a0)return null!==(e=b.get("WEBGL_compressed_texture_etc1"))?e.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===a1||a===a2){if(null===(e=b.get("WEBGL_compressed_texture_etc")))return null;if(a===a1)return c===bx?e.COMPRESSED_SRGB8_ETC2:e.COMPRESSED_RGB8_ETC2;if(a===a2)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC}if(a===a3||a===a4||a===a5||a===a6||a===a7||a===a8||a===a9||a===ba||a===bb||a===bc||a===bd||a===be||a===bf||a===bg){if(null===(e=b.get("WEBGL_compressed_texture_astc")))return null;if(a===a3)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:e.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===a4)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:e.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===a5)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:e.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===a6)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:e.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===a7)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:e.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===a8)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:e.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===a9)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:e.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===ba)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:e.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===bb)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:e.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===bc)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:e.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===bd)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:e.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===be)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:e.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===bf)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:e.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===bg)return c===bx?e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:e.COMPRESSED_RGBA_ASTC_12x12_KHR}if(a===bh){if(null===(e=b.get("EXT_texture_compression_bptc")))return null;if(a===bh)return c===bx?e.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:e.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(a===aH)return d?34042:null!==(e=b.get("WEBGL_depth_texture"))?e.UNSIGNED_INT_24_8_WEBGL:null}}}gR.prototype.isMeshDistanceMaterial=!0;class gW extends eG{constructor(a=[]){super(),this.cameras=a}}gW.prototype.isArrayCamera=!0;class gX extends dJ{constructor(){super(),this.type="Group"}}gX.prototype.isGroup=!0;let gY={type:"move"};class gZ{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new gX,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new gX,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new cQ,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new cQ),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new gX,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new cQ,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new cQ),this._grip}dispatchEvent(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this}disconnect(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(a,b,c){let d=null,e=null,f=null,g=this._targetRay,h=this._grip,i=this._hand;if(a&&"visible-blurred"!==b.session.visibilityState){if(null!==g&&null!==(d=b.getPose(a.targetRaySpace,c))&&(g.matrix.fromArray(d.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),d.linearVelocity?(g.hasLinearVelocity=!0,g.linearVelocity.copy(d.linearVelocity)):g.hasLinearVelocity=!1,d.angularVelocity?(g.hasAngularVelocity=!0,g.angularVelocity.copy(d.angularVelocity)):g.hasAngularVelocity=!1,this.dispatchEvent(gY)),i&&a.hand){for(let j of(f=!0,a.hand.values())){let k=b.getJointPose(j,c);if(void 0===i.joints[j.jointName]){let l=new gX;l.matrixAutoUpdate=!1,l.visible=!1,i.joints[j.jointName]=l,i.add(l)}let m=i.joints[j.jointName];null!==k&&(m.matrix.fromArray(k.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=k.radius),m.visible=null!==k}let n=i.joints["index-finger-tip"],o=i.joints["thumb-tip"],p=n.position.distanceTo(o.position),q=.02,r=.005;i.inputState.pinching&&p>q+r?(i.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:a.handedness,target:this})):!i.inputState.pinching&&p<=q-r&&(i.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:a.handedness,target:this}))}else null!==h&&a.gripSpace&&null!==(e=b.getPose(a.gripSpace,c))&&(h.matrix.fromArray(e.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),e.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(e.linearVelocity)):h.hasLinearVelocity=!1,e.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(e.angularVelocity)):h.hasAngularVelocity=!1)}return null!==g&&(g.visible=null!==d),null!==h&&(h.visible=null!==e),null!==i&&(i.visible=null!==f),this}}class g$ extends cH{constructor(a,b,c,d,e,f,g,h,i,j){if((j=void 0!==j?j:aN)!==aN&&j!==aO)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===c&&j===aN&&(c=aA),void 0===c&&j===aO&&(c=aH),super(null,d,e,f,g,h,j,c,i),this.image={width:a,height:b},this.magFilter=void 0!==g?g:an,this.minFilter=void 0!==h?h:an,this.flipY=!1,this.generateMipmaps=!1}}g$.prototype.isDepthTexture=!0;class g_ extends b5{constructor(a,b){super();let c=this,d=null,e=1,f=null,g="local-floor",h=null,i=null,j=null,k=null,l=null,m=b.getContextAttributes(),n=null,o=null,p=[],q=new Map,r=new eG;r.layers.enable(1),r.viewport=new cI;let s=new eG;s.layers.enable(2),s.viewport=new cI;let t=[r,s],u=new gW;u.layers.enable(1),u.layers.enable(2);let v=null,w=null;function x(a){let b=q.get(a.inputSource);b&&b.dispatchEvent({type:a.type,data:a.inputSource})}function y(){q.forEach(function(a,b){a.disconnect(b)}),q.clear(),v=null,w=null,a.setRenderTarget(n),k=null,j=null,i=null,d=null,o=null,E.stop(),c.isPresenting=!1,c.dispatchEvent({type:"sessionend"})}function z(a){let b=d.inputSources;for(let c=0;c<p.length;c++)q.set(b[c],p[c]);for(let e=0;e<a.removed.length;e++){let f=a.removed[e],g=q.get(f);g&&(g.dispatchEvent({type:"disconnected",data:f}),q.delete(f))}for(let h=0;h<a.added.length;h++){let i=a.added[h],j=q.get(i);j&&j.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(a){let b=p[a];return void 0===b&&(b=new gZ,p[a]=b),b.getTargetRaySpace()},this.getControllerGrip=function(a){let b=p[a];return void 0===b&&(b=new gZ,p[a]=b),b.getGripSpace()},this.getHand=function(a){let b=p[a];return void 0===b&&(b=new gZ,p[a]=b),b.getHandSpace()},this.setFramebufferScaleFactor=function(a){e=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){g=a,!0===c.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f},this.getBaseLayer=function(){return null!==j?j:k},this.getBinding=function(){return i},this.getFrame=function(){return l},this.getSession=function(){return d},this.setSession=async function(h){if(null!==(d=h)){if(n=a.getRenderTarget(),d.addEventListener("select",x),d.addEventListener("selectstart",x),d.addEventListener("selectend",x),d.addEventListener("squeeze",x),d.addEventListener("squeezestart",x),d.addEventListener("squeezeend",x),d.addEventListener("end",y),d.addEventListener("inputsourceschange",z),!0!==m.xrCompatible&&await b.makeXRCompatible(),void 0===d.renderState.layers||!1===a.capabilities.isWebGL2){let l={antialias:void 0!==d.renderState.layers||m.antialias,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:e};k=new XRWebGLLayer(d,b,l),d.updateRenderState({baseLayer:k}),o=new cJ(k.framebufferWidth,k.framebufferHeight,{format:aK,type:ax,encoding:a.outputEncoding})}else{let p=null,q=null,r=null;m.depth&&(r=m.stencil?35056:33190,p=m.stencil?aO:aN,q=m.stencil?aH:aA);let s={colorFormat:a.outputEncoding===bx?35907:32856,depthFormat:r,scaleFactor:e};j=(i=new XRWebGLBinding(d,b)).createProjectionLayer(s),d.updateRenderState({layers:[j]}),o=new cJ(j.textureWidth,j.textureHeight,{format:aK,type:ax,depthTexture:new g$(j.textureWidth,j.textureHeight,q,void 0,void 0,void 0,void 0,void 0,void 0,p),stencilBuffer:m.stencil,encoding:a.outputEncoding,samples:m.antialias?4:0});let t=a.properties.get(o);t.__ignoreDepthValues=j.ignoreDepthValues}o.isXRRenderTarget=!0,this.setFoveation(1),f=await d.requestReferenceSpace(g),E.setContext(d),E.start(),c.isPresenting=!0,c.dispatchEvent({type:"sessionstart"})}};let A=new cQ,B=new cQ;function C(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.copy(a.matrixWorld).invert()}this.updateCamera=function(a){if(null===d)return;u.near=s.near=r.near=a.near,u.far=s.far=r.far=a.far,(v!==u.near||w!==u.far)&&(d.updateRenderState({depthNear:u.near,depthFar:u.far}),v=u.near,w=u.far);let b=a.parent,c=u.cameras;C(u,b);for(let e=0;e<c.length;e++)C(c[e],b);u.matrixWorld.decompose(u.position,u.quaternion,u.scale),a.position.copy(u.position),a.quaternion.copy(u.quaternion),a.scale.copy(u.scale),a.matrix.copy(u.matrix),a.matrixWorld.copy(u.matrixWorld);let f=a.children;for(let g=0,h=f.length;g<h;g++)f[g].updateMatrixWorld(!0);2===c.length?function(a,b,c){A.setFromMatrixPosition(b.matrixWorld),B.setFromMatrixPosition(c.matrixWorld);let d=A.distanceTo(B),e=b.projectionMatrix.elements,f=c.projectionMatrix.elements,g=e[14]/(e[10]-1),h=e[14]/(e[10]+1),i=(e[9]+1)/e[5],j=(e[9]-1)/e[5],k=(e[8]-1)/e[0],l=(f[8]+1)/f[0],m=d/(-k+l),n=-(m*k);b.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(n),a.translateZ(m),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.copy(a.matrixWorld).invert();let o=g+m,p=h+m;a.projectionMatrix.makePerspective(g*k-n,g*l+(d-n),i*h/p*o,j*h/p*o,o,p)}(u,r,s):u.projectionMatrix.copy(r.projectionMatrix)},this.getCamera=function(){return u},this.getFoveation=function(){return null!==j?j.fixedFoveation:null!==k?k.fixedFoveation:void 0},this.setFoveation=function(a){null!==j&&(j.fixedFoveation=a),null!==k&&void 0!==k.fixedFoveation&&(k.fixedFoveation=a)};let D=null,E=new eR;E.setAnimationLoop(function(b,c){if(h=c.getViewerPose(f),l=c,null!==h){let e=h.views;null!==k&&(a.setRenderTargetFramebuffer(o,k.framebuffer),a.setRenderTarget(o));let g=!1;e.length!==u.cameras.length&&(u.cameras.length=0,g=!0);for(let m=0;m<e.length;m++){let n=e[m],q=null;if(null!==k)q=k.getViewport(n);else{let r=i.getViewSubImage(j,n);q=r.viewport,0===m&&(a.setRenderTargetTextures(o,r.colorTexture,j.ignoreDepthValues?void 0:r.depthStencilTexture),a.setRenderTarget(o))}let s=t[m];s.matrix.fromArray(n.transform.matrix),s.projectionMatrix.fromArray(n.projectionMatrix),s.viewport.set(q.x,q.y,q.width,q.height),0===m&&u.matrix.copy(s.matrix),!0===g&&u.cameras.push(s)}}let v=d.inputSources;for(let w=0;w<p.length;w++){let x=p[w],y=v[w];x.update(y,c,f)}D&&D(b,c),l=null}),this.setAnimationLoop=function(a){D=a},this.dispose=function(){}}}function g0(a,b){function c(c,d){c.opacity.value=d.opacity,d.color&&c.diffuse.value.copy(d.color),d.emissive&&c.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(c.map.value=d.map),d.alphaMap&&(c.alphaMap.value=d.alphaMap),d.bumpMap&&(c.bumpMap.value=d.bumpMap,c.bumpScale.value=d.bumpScale,d.side===p&&(c.bumpScale.value*=-1)),d.displacementMap&&(c.displacementMap.value=d.displacementMap,c.displacementScale.value=d.displacementScale,c.displacementBias.value=d.displacementBias),d.emissiveMap&&(c.emissiveMap.value=d.emissiveMap),d.normalMap&&(c.normalMap.value=d.normalMap,c.normalScale.value.copy(d.normalScale),d.side===p&&c.normalScale.value.negate()),d.specularMap&&(c.specularMap.value=d.specularMap),d.alphaTest>0&&(c.alphaTest.value=d.alphaTest);let e=b.get(d).envMap;if(e&&(c.envMap.value=e,c.flipEnvMap.value=e.isCubeTexture&&!1===e.isRenderTargetTexture?-1:1,c.reflectivity.value=d.reflectivity,c.ior.value=d.ior,c.refractionRatio.value=d.refractionRatio),d.lightMap){c.lightMap.value=d.lightMap;let f=!0!==a.physicallyCorrectLights?Math.PI:1;c.lightMapIntensity.value=d.lightMapIntensity*f}d.aoMap&&(c.aoMap.value=d.aoMap,c.aoMapIntensity.value=d.aoMapIntensity);let g;d.map?g=d.map:d.specularMap?g=d.specularMap:d.displacementMap?g=d.displacementMap:d.normalMap?g=d.normalMap:d.bumpMap?g=d.bumpMap:d.roughnessMap?g=d.roughnessMap:d.metalnessMap?g=d.metalnessMap:d.alphaMap?g=d.alphaMap:d.emissiveMap?g=d.emissiveMap:d.clearcoatMap?g=d.clearcoatMap:d.clearcoatNormalMap?g=d.clearcoatNormalMap:d.clearcoatRoughnessMap?g=d.clearcoatRoughnessMap:d.specularIntensityMap?g=d.specularIntensityMap:d.specularColorMap?g=d.specularColorMap:d.transmissionMap?g=d.transmissionMap:d.thicknessMap?g=d.thicknessMap:d.sheenColorMap?g=d.sheenColorMap:d.sheenRoughnessMap&&(g=d.sheenRoughnessMap),void 0!==g&&(g.isWebGLRenderTarget&&(g=g.texture),!0===g.matrixAutoUpdate&&g.updateMatrix(),c.uvTransform.value.copy(g.matrix));let h;d.aoMap?h=d.aoMap:d.lightMap&&(h=d.lightMap),void 0!==h&&(h.isWebGLRenderTarget&&(h=h.texture),!0===h.matrixAutoUpdate&&h.updateMatrix(),c.uv2Transform.value.copy(h.matrix))}return{refreshFogUniforms:function(a,b){a.fogColor.value.copy(b.color),b.isFog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b.isFogExp2&&(a.fogDensity.value=b.density)},refreshMaterialUniforms:function(a,d,e,f,g){var h,i,j,k,l,m,n,o,q,r,s,t,u,v,w,x,y,z,A,B,C;let D,E;d.isMeshBasicMaterial?c(a,d):d.isMeshLambertMaterial?c(a,d):d.isMeshToonMaterial?(c(a,d),h=a,(i=d).gradientMap&&(h.gradientMap.value=i.gradientMap)):d.isMeshPhongMaterial?(c(a,d),j=a,k=d,j.specular.value.copy(k.specular),j.shininess.value=Math.max(k.shininess,1e-4)):d.isMeshStandardMaterial?(c(a,d),function a(c,d){c.roughness.value=d.roughness,c.metalness.value=d.metalness,d.roughnessMap&&(c.roughnessMap.value=d.roughnessMap),d.metalnessMap&&(c.metalnessMap.value=d.metalnessMap);let e=b.get(d).envMap;e&&(c.envMapIntensity.value=d.envMapIntensity)}(a,d),d.isMeshPhysicalMaterial&&(l=a,m=d,n=g,l.ior.value=m.ior,m.sheen>0&&(l.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),l.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(l.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(l.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(l.clearcoat.value=m.clearcoat,l.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(l.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(l.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(l.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),l.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===p&&l.clearcoatNormalScale.value.negate())),m.transmission>0&&(l.transmission.value=m.transmission,l.transmissionSamplerMap.value=n.texture,l.transmissionSamplerSize.value.set(n.width,n.height),m.transmissionMap&&(l.transmissionMap.value=m.transmissionMap),l.thickness.value=m.thickness,m.thicknessMap&&(l.thicknessMap.value=m.thicknessMap),l.attenuationDistance.value=m.attenuationDistance,l.attenuationColor.value.copy(m.attenuationColor)),l.specularIntensity.value=m.specularIntensity,l.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(l.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(l.specularColorMap.value=m.specularColorMap))):d.isMeshMatcapMaterial?(c(a,d),o=a,(q=d).matcap&&(o.matcap.value=q.matcap)):d.isMeshDepthMaterial?c(a,d):d.isMeshDistanceMaterial?(c(a,d),r=a,s=d,r.referencePosition.value.copy(s.referencePosition),r.nearDistance.value=s.nearDistance,r.farDistance.value=s.farDistance):d.isMeshNormalMaterial?c(a,d):d.isLineBasicMaterial?(t=a,u=d,t.diffuse.value.copy(u.color),t.opacity.value=u.opacity,d.isLineDashedMaterial&&(v=a,w=d,v.dashSize.value=w.dashSize,v.totalSize.value=w.dashSize+w.gapSize,v.scale.value=w.scale)):d.isPointsMaterial?(x=a,y=d,z=e,A=f,x.diffuse.value.copy(y.color),x.opacity.value=y.opacity,x.size.value=y.size*z,x.scale.value=.5*A,y.map&&(x.map.value=y.map),y.alphaMap&&(x.alphaMap.value=y.alphaMap),y.alphaTest>0&&(x.alphaTest.value=y.alphaTest),y.map?D=y.map:y.alphaMap&&(D=y.alphaMap),void 0!==D&&(!0===D.matrixAutoUpdate&&D.updateMatrix(),x.uvTransform.value.copy(D.matrix))):d.isSpriteMaterial?(B=a,C=d,B.diffuse.value.copy(C.color),B.opacity.value=C.opacity,B.rotation.value=C.rotation,C.map&&(B.map.value=C.map),C.alphaMap&&(B.alphaMap.value=C.alphaMap),C.alphaTest>0&&(B.alphaTest.value=C.alphaTest),C.map?E=C.map:C.alphaMap&&(E=C.alphaMap),void 0!==E&&(!0===E.matrixAutoUpdate&&E.updateMatrix(),B.uvTransform.value.copy(E.matrix))):d.isShadowMaterial?(a.color.value.copy(d.color),a.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}}}function g1(a={}){let b=void 0!==a.canvas?a.canvas:function(){let a=cq("canvas");return a.style.display="block",a}(),c=void 0!==a.context?a.context:null,e=void 0===a.depth||a.depth,f=void 0===a.stencil||a.stencil,g=void 0!==a.antialias&&a.antialias,h=void 0===a.premultipliedAlpha||a.premultipliedAlpha,i=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,j=void 0!==a.powerPreference?a.powerPreference:"default",k=void 0!==a.failIfMajorPerformanceCaveat&&a.failIfMajorPerformanceCaveat,l;l=void 0!==a.context?c.getContextAttributes().alpha:void 0!==a.alpha&&a.alpha;let m=null,n=null,r=[],s=[];this.domElement=b,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=bw,this.physicallyCorrectLights=!1,this.toneMapping=$,this.toneMappingExposure=1;let t=this,u=!1,v=0,w=0,x=null,y=-1,z=null,A=new cI,B=new cI,C=null,D=b.width,E=b.height,F=1,G=null,H=null,I=new cI(0,0,D,E),J=new cI(0,0,D,E),K=!1,L=new eQ,M=!1,N=!1,O=null,P=new dj,Q=new cl,R=new cQ,S={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function T(){return null===x?F:1}let U=c;function V(a,c){for(let d=0;d<a.length;d++){let e=a[d],f=b.getContext(e,c);if(null!==f)return f}return null}try{let W={alpha:!0,depth:e,stencil:f,antialias:g,premultipliedAlpha:h,preserveDrawingBuffer:i,powerPreference:j,failIfMajorPerformanceCaveat:k};if("setAttribute"in b&&b.setAttribute("data-engine",`three.js r${d}`),b.addEventListener("webglcontextlost",az,!1),b.addEventListener("webglcontextrestored",aA,!1),null===U){let X=["webgl2","webgl","experimental-webgl"];if(!0===t.isWebGL1Renderer&&X.shift(),U=V(X,W),null===U){if(V(X))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===U.getShaderPrecisionFormat&&(U.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Y){throw console.error("THREE.WebGLRenderer: "+Y.message),Y}let Z,_,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au;function aw(){Z=new fi(U),_=new e$(U,Z,a),Z.init(_),at=new gV(U,Z,_),aa=new gT(U,Z,_),ab=new fl(U),ac=new gF,ad=new gU(U,Z,aa,ac,_,at,ab),ae=new e0(t),af=new fh(t),ag=new eS(U,_),au=new eY(U,Z,ag,_),ah=new fj(U,ag,ab,au),ai=new fq(U,ah,ag,ab),aq=new fp(U,_,ad),an=new e_(ac),aj=new gE(t,ae,af,Z,_,au,an),ak=new g0(t,ac),al=new gJ,am=new gP(Z,_),ap=new eX(t,ae,aa,ai,l,h),ao=new gS(t,ai,_),ar=new eZ(U,Z,ab,_),as=new fk(U,Z,ab,_),ab.programs=aj.programs,t.capabilities=_,t.extensions=Z,t.properties=ac,t.renderLists=al,t.shadowMap=ao,t.state=aa,t.info=ab}aw();let ay=new g_(t,U);function az(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),u=!0}function aA(){console.log("THREE.WebGLRenderer: Context Restored."),u=!1;let a=ab.autoReset,b=ao.enabled,c=ao.autoUpdate,d=ao.needsUpdate,e=ao.type;aw(),ab.autoReset=a,ao.enabled=b,ao.autoUpdate=c,ao.needsUpdate=d,ao.type=e}function aB(a){let b=a.target;b.removeEventListener("dispose",aB),aC(b)}function aC(a){aF(a),ac.remove(a)}function aF(a){let b=ac.get(a).programs;void 0!==b&&(b.forEach(function(a){aj.releaseProgram(a)}),a.isShaderMaterial&&aj.releaseShaderCache(a))}this.xr=ay,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){let a=Z.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=Z.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return F},this.setPixelRatio=function(a){void 0!==a&&(F=a,this.setSize(D,E,!1))},this.getSize=function(a){return a.set(D,E)},this.setSize=function(a,c,d){if(ay.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}D=a,E=c,b.width=Math.floor(a*F),b.height=Math.floor(c*F),!1!==d&&(b.style.width=a+"px",b.style.height=c+"px"),this.setViewport(0,0,a,c)},this.getDrawingBufferSize=function(a){return a.set(D*F,E*F).floor()},this.setDrawingBufferSize=function(a,c,d){D=a,E=c,F=d,b.width=Math.floor(a*d),b.height=Math.floor(c*d),this.setViewport(0,0,a,c)},this.getCurrentViewport=function(a){return a.copy(A)},this.getViewport=function(a){return a.copy(I)},this.setViewport=function(a,b,c,d){a.isVector4?I.set(a.x,a.y,a.z,a.w):I.set(a,b,c,d),aa.viewport(A.copy(I).multiplyScalar(F).floor())},this.getScissor=function(a){return a.copy(J)},this.setScissor=function(a,b,c,d){a.isVector4?J.set(a.x,a.y,a.z,a.w):J.set(a,b,c,d),aa.scissor(B.copy(J).multiplyScalar(F).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(a){aa.setScissorTest(K=a)},this.setOpaqueSort=function(a){G=a},this.setTransparentSort=function(a){H=a},this.getClearColor=function(a){return a.copy(ap.getClearColor())},this.setClearColor=function(){ap.setClearColor.apply(ap,arguments)},this.getClearAlpha=function(){return ap.getClearAlpha()},this.setClearAlpha=function(){ap.setClearAlpha.apply(ap,arguments)},this.clear=function(a=!0,b=!0,c=!0){let d=0;a&&(d|=16384),b&&(d|=256),c&&(d|=1024),U.clear(d)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){b.removeEventListener("webglcontextlost",az,!1),b.removeEventListener("webglcontextrestored",aA,!1),al.dispose(),am.dispose(),ac.dispose(),ae.dispose(),af.dispose(),ai.dispose(),au.dispose(),aj.dispose(),ay.dispose(),ay.removeEventListener("sessionstart",aH),ay.removeEventListener("sessionend",aI),O&&(O.dispose(),O=null),aJ.stop()},this.renderBufferDirect=function(a,b,c,d,e,f){null===b&&(b=S);let g=e.isMesh&&0>e.matrixWorld.determinant(),h=aS(a,b,c,d,e);aa.setMaterial(d,g);let i=c.index,j=c.attributes.position;if(null===i){if(void 0===j||0===j.count)return}else if(0===i.count)return;let k=1;!0===d.wireframe&&(i=ah.getWireframeAttribute(c),k=2),au.setup(e,d,h,c,i);let l,m=ar;null!==i&&(l=ag.get(i),(m=as).setIndex(l));let n=null!==i?i.count:j.count,o=c.drawRange.start*k,p=c.drawRange.count*k,q=null!==f?f.start*k:0,r=null!==f?f.count*k:1/0,s=Math.max(o,q),t=Math.max(0,Math.min(n,o+p,q+r)-1-s+1);if(0!==t){if(e.isMesh)!0===d.wireframe?(aa.setLineWidth(d.wireframeLinewidth*T()),m.setMode(1)):m.setMode(4);else if(e.isLine){let u=d.linewidth;void 0===u&&(u=1),aa.setLineWidth(u*T()),e.isLineSegments?m.setMode(1):e.isLineLoop?m.setMode(2):m.setMode(3)}else e.isPoints?m.setMode(0):e.isSprite&&m.setMode(4);if(e.isInstancedMesh)m.renderInstances(s,t,e.count);else if(c.isInstancedBufferGeometry){let v=Math.min(c.instanceCount,c._maxInstanceCount);m.renderInstances(s,t,v)}else m.render(s,t)}},this.compile=function(a,b){(n=am.get(a)).init(),s.push(n),a.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(n.pushLight(a),a.castShadow&&n.pushShadow(a))}),n.setupLights(t.physicallyCorrectLights),a.traverse(function(b){let c=b.material;if(c){if(Array.isArray(c))for(let d=0;d<c.length;d++){let e=c[d];aQ(e,a,b)}else aQ(c,a,b)}}),s.pop(),n=null};let aG=null;function aH(){aJ.stop()}function aI(){aJ.start()}let aJ=new eR;function aL(a,b,c,d){if(!1===a.visible)return;let e=a.layers.test(b.layers);if(e){if(a.isGroup)c=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(b);else if(a.isLight)n.pushLight(a),a.castShadow&&n.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||L.intersectsSprite(a)){d&&R.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P);let f=ai.update(a),g=a.material;g.visible&&m.push(a,f,g,c,R.z,null)}}else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==ab.render.frame&&(a.skeleton.update(),a.skeleton.frame=ab.render.frame),!a.frustumCulled||L.intersectsObject(a))){d&&R.setFromMatrixPosition(a.matrixWorld).applyMatrix4(P);let h=ai.update(a),i=a.material;if(Array.isArray(i)){let j=h.groups;for(let k=0,l=j.length;k<l;k++){let o=j[k],p=i[o.materialIndex];p&&p.visible&&m.push(a,h,p,c,R.z,o)}}else i.visible&&m.push(a,h,i,c,R.z,null)}}let q=a.children;for(let r=0,s=q.length;r<s;r++)aL(q[r],b,c,d)}function aM(a,b,c,d){let e=a.opaque,f=a.transmissive,g=a.transparent;n.setupLightsView(c),f.length>0&&aN(e,b,c),d&&aa.viewport(A.copy(d)),e.length>0&&aO(e,b,c),f.length>0&&aO(f,b,c),g.length>0&&aO(g,b,c),aa.buffers.depth.setTest(!0),aa.buffers.depth.setMask(!0),aa.buffers.color.setMask(!0),aa.setPolygonOffset(!1)}function aN(a,b,c){let d=_.isWebGL2;null===O&&(O=new cJ(1,1,{generateMipmaps:!0,type:null!==at.convert(aE)?aE:ax,minFilter:av,samples:d&&!0===g?4:0})),t.getDrawingBufferSize(Q),d?O.setSize(Q.x,Q.y):O.setSize(cj(Q.x),cj(Q.y));let e=t.getRenderTarget();t.setRenderTarget(O),t.clear();let f=t.toneMapping;t.toneMapping=$,aO(a,b,c),t.toneMapping=f,ad.updateMultisampleRenderTarget(O),ad.updateRenderTargetMipmap(O),t.setRenderTarget(e)}function aO(a,b,c){let d=!0===b.isScene?b.overrideMaterial:null;for(let e=0,f=a.length;e<f;e++){let g=a[e],h=g.object,i=g.geometry,j=null===d?g.material:d,k=g.group;h.layers.test(c.layers)&&aP(h,b,c,i,j,k)}}function aP(a,b,c,d,e,f){a.onBeforeRender(t,b,c,d,e,f),a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),e.onBeforeRender(t,b,c,d,a,f),!0===e.transparent&&e.side===q?(e.side=p,e.needsUpdate=!0,t.renderBufferDirect(c,b,d,e,a,f),e.side=o,e.needsUpdate=!0,t.renderBufferDirect(c,b,d,e,a,f),e.side=q):t.renderBufferDirect(c,b,d,e,a,f),a.onAfterRender(t,b,c,d,e,f)}function aQ(a,b,c){!0!==b.isScene&&(b=S);let d=ac.get(a),e=n.state.lights,f=n.state.shadowsArray,g=e.state.version,h=aj.getParameters(a,e.state,f,b,c),i=aj.getProgramCacheKey(h),j=d.programs;d.environment=a.isMeshStandardMaterial?b.environment:null,d.fog=b.fog,d.envMap=(a.isMeshStandardMaterial?af:ae).get(a.envMap||d.environment),void 0===j&&(a.addEventListener("dispose",aB),j=new Map,d.programs=j);let k=j.get(i);if(void 0!==k){if(d.currentProgram===k&&d.lightsStateVersion===g)return aR(a,h),k}else h.uniforms=aj.getUniforms(a),a.onBuild(c,h,t),a.onBeforeCompile(h,t),k=aj.acquireProgram(h,i),j.set(i,k),d.uniforms=h.uniforms;let l=d.uniforms;(a.isShaderMaterial||a.isRawShaderMaterial)&&!0!==a.clipping||(l.clippingPlanes=an.uniform),aR(a,h),d.needsLights=aU(a),d.lightsStateVersion=g,d.needsLights&&(l.ambientLightColor.value=e.state.ambient,l.lightProbe.value=e.state.probe,l.directionalLights.value=e.state.directional,l.directionalLightShadows.value=e.state.directionalShadow,l.spotLights.value=e.state.spot,l.spotLightShadows.value=e.state.spotShadow,l.rectAreaLights.value=e.state.rectArea,l.ltc_1.value=e.state.rectAreaLTC1,l.ltc_2.value=e.state.rectAreaLTC2,l.pointLights.value=e.state.point,l.pointLightShadows.value=e.state.pointShadow,l.hemisphereLights.value=e.state.hemi,l.directionalShadowMap.value=e.state.directionalShadowMap,l.directionalShadowMatrix.value=e.state.directionalShadowMatrix,l.spotShadowMap.value=e.state.spotShadowMap,l.spotShadowMatrix.value=e.state.spotShadowMatrix,l.pointShadowMap.value=e.state.pointShadowMap,l.pointShadowMatrix.value=e.state.pointShadowMatrix);let m=k.getUniforms(),o=gk.seqWithValue(m.seq,l);return d.currentProgram=k,d.uniformsList=o,k}function aR(a,b){let c=ac.get(a);c.outputEncoding=b.outputEncoding,c.instancing=b.instancing,c.skinning=b.skinning,c.morphTargets=b.morphTargets,c.morphNormals=b.morphNormals,c.morphColors=b.morphColors,c.morphTargetsCount=b.morphTargetsCount,c.numClippingPlanes=b.numClippingPlanes,c.numIntersection=b.numClipIntersection,c.vertexAlphas=b.vertexAlphas,c.vertexTangents=b.vertexTangents,c.toneMapping=b.toneMapping}function aS(a,b,c,d,e){!0!==b.isScene&&(b=S),ad.resetTextureUnits();let f=b.fog,g=d.isMeshStandardMaterial?b.environment:null,h=null===x?t.outputEncoding:!0===x.isXRRenderTarget?x.texture.encoding:bw,i=(d.isMeshStandardMaterial?af:ae).get(d.envMap||g),j=!0===d.vertexColors&&!!c.attributes.color&&4===c.attributes.color.itemSize,k=!!d.normalMap&&!!c.attributes.tangent,l=!!c.morphAttributes.position,m=!!c.morphAttributes.normal,o=!!c.morphAttributes.color,p=d.toneMapped?t.toneMapping:$,q=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,r=void 0!==q?q.length:0,s=ac.get(d),u=n.state.lights;if(!0===M&&(!0===N||a!==z)){let v=a===z&&d.id===y;an.setState(d,a,v)}let w=!1;d.version===s.__version?s.needsLights&&s.lightsStateVersion!==u.state.version?w=!0:s.outputEncoding!==h?w=!0:e.isInstancedMesh&&!1===s.instancing?w=!0:e.isInstancedMesh||!0!==s.instancing?e.isSkinnedMesh&&!1===s.skinning?w=!0:e.isSkinnedMesh||!0!==s.skinning?s.envMap!==i?w=!0:d.fog&&s.fog!==f?w=!0:void 0!==s.numClippingPlanes&&(s.numClippingPlanes!==an.numPlanes||s.numIntersection!==an.numIntersection)?w=!0:s.vertexAlphas!==j?w=!0:s.vertexTangents!==k?w=!0:s.morphTargets!==l?w=!0:s.morphNormals!==m?w=!0:s.morphColors!==o?w=!0:s.toneMapping!==p?w=!0:!0===_.isWebGL2&&s.morphTargetsCount!==r&&(w=!0):w=!0:w=!0:(w=!0,s.__version=d.version);let A=s.currentProgram;!0===w&&(A=aQ(d,b,e));let B=!1,C=!1,D=!1,G=A.getUniforms(),H=s.uniforms;if(aa.useProgram(A.program)&&(B=!0,C=!0,D=!0),d.id!==y&&(y=d.id,C=!0),B||z!==a){if(G.setValue(U,"projectionMatrix",a.projectionMatrix),_.logarithmicDepthBuffer&&G.setValue(U,"logDepthBufFC",2/(Math.log(a.far+1)/Math.LN2)),z!==a&&(z=a,C=!0,D=!0),d.isShaderMaterial||d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshStandardMaterial||d.envMap){let I=G.map.cameraPosition;void 0!==I&&I.setValue(U,R.setFromMatrixPosition(a.matrixWorld))}(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial)&&G.setValue(U,"isOrthographic",!0===a.isOrthographicCamera),(d.isMeshPhongMaterial||d.isMeshToonMaterial||d.isMeshLambertMaterial||d.isMeshBasicMaterial||d.isMeshStandardMaterial||d.isShaderMaterial||d.isShadowMaterial||e.isSkinnedMesh)&&G.setValue(U,"viewMatrix",a.matrixWorldInverse)}if(e.isSkinnedMesh){G.setOptional(U,e,"bindMatrix"),G.setOptional(U,e,"bindMatrixInverse");let J=e.skeleton;J&&(_.floatVertexTextures?(null===J.boneTexture&&J.computeBoneTexture(),G.setValue(U,"boneTexture",J.boneTexture,ad),G.setValue(U,"boneTextureSize",J.boneTextureSize)):G.setOptional(U,J,"boneMatrices"))}let K=c.morphAttributes;return(void 0!==K.position||void 0!==K.normal||void 0!==K.color&&!0===_.isWebGL2)&&aq.update(e,c,d,A),(C||s.receiveShadow!==e.receiveShadow)&&(s.receiveShadow=e.receiveShadow,G.setValue(U,"receiveShadow",e.receiveShadow)),C&&(G.setValue(U,"toneMappingExposure",t.toneMappingExposure),s.needsLights&&aT(H,D),f&&d.fog&&ak.refreshFogUniforms(H,f),ak.refreshMaterialUniforms(H,d,F,E,O),gk.upload(U,s.uniformsList,H,ad)),d.isShaderMaterial&&!0===d.uniformsNeedUpdate&&(gk.upload(U,s.uniformsList,H,ad),d.uniformsNeedUpdate=!1),d.isSpriteMaterial&&G.setValue(U,"center",e.center),G.setValue(U,"modelViewMatrix",e.modelViewMatrix),G.setValue(U,"normalMatrix",e.normalMatrix),G.setValue(U,"modelMatrix",e.matrixWorld),A}function aT(a,b){a.ambientLightColor.needsUpdate=b,a.lightProbe.needsUpdate=b,a.directionalLights.needsUpdate=b,a.directionalLightShadows.needsUpdate=b,a.pointLights.needsUpdate=b,a.pointLightShadows.needsUpdate=b,a.spotLights.needsUpdate=b,a.spotLightShadows.needsUpdate=b,a.rectAreaLights.needsUpdate=b,a.hemisphereLights.needsUpdate=b}function aU(a){return a.isMeshLambertMaterial||a.isMeshToonMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&&!0===a.lights}aJ.setAnimationLoop(function(a){aG&&aG(a)}),"undefined"!=typeof self&&aJ.setContext(self),this.setAnimationLoop=function(a){aG=a,ay.setAnimationLoop(a),null===a?aJ.stop():aJ.start()},ay.addEventListener("sessionstart",aH),ay.addEventListener("sessionend",aI),this.render=function(a,b){if(void 0!==b&&!0!==b.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===u)return;!0===a.autoUpdate&&a.updateMatrixWorld(),null===b.parent&&b.updateMatrixWorld(),!0===ay.enabled&&!0===ay.isPresenting&&(!0===ay.cameraAutoUpdate&&ay.updateCamera(b),b=ay.getCamera()),!0===a.isScene&&a.onBeforeRender(t,a,b,x),(n=am.get(a,s.length)).init(),s.push(n),P.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),L.setFromProjectionMatrix(P),N=this.localClippingEnabled,M=an.init(this.clippingPlanes,N,b),(m=al.get(a,r.length)).init(),r.push(m),aL(a,b,0,t.sortObjects),m.finish(),!0===t.sortObjects&&m.sort(G,H),!0===M&&an.beginShadows();let c=n.state.shadowsArray;if(ao.render(c,a,b),!0===M&&an.endShadows(),!0===this.info.autoReset&&this.info.reset(),ap.render(m,a),n.setupLights(t.physicallyCorrectLights),b.isArrayCamera){let d=b.cameras;for(let e=0,f=d.length;e<f;e++){let g=d[e];aM(m,a,g,g.viewport)}}else aM(m,a,b);null!==x&&(ad.updateMultisampleRenderTarget(x),ad.updateRenderTargetMipmap(x)),!0===a.isScene&&a.onAfterRender(t,a,b),au.resetDefaultState(),y=-1,z=null,s.pop(),n=s.length>0?s[s.length-1]:null,r.pop(),m=r.length>0?r[r.length-1]:null},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(a,b,c){ac.get(a.texture).__webglTexture=b,ac.get(a.depthTexture).__webglTexture=c;let d=ac.get(a);d.__hasExternalTextures=!0,d.__hasExternalTextures&&(d.__autoAllocateDepthBuffer=void 0===c,d.__autoAllocateDepthBuffer||!0!==Z.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),d.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(a,b){let c=ac.get(a);c.__webglFramebuffer=b,c.__useDefaultFramebuffer=void 0===b},this.setRenderTarget=function(a,b=0,c=0){x=a,v=b,w=c;let d=!0;if(a){let e=ac.get(a);void 0!==e.__useDefaultFramebuffer?(aa.bindFramebuffer(36160,null),d=!1):void 0===e.__webglFramebuffer?ad.setupRenderTarget(a):e.__hasExternalTextures&&ad.rebindTextures(a,ac.get(a.texture).__webglTexture,ac.get(a.depthTexture).__webglTexture)}let f=null,g=!1,h=!1;if(a){let i=a.texture;(i.isData3DTexture||i.isDataArrayTexture)&&(h=!0);let j=ac.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(f=j[b],g=!0):f=_.isWebGL2&&a.samples>0&&!1===ad.useMultisampledRTT(a)?ac.get(a).__webglMultisampledFramebuffer:j,A.copy(a.viewport),B.copy(a.scissor),C=a.scissorTest}else A.copy(I).multiplyScalar(F).floor(),B.copy(J).multiplyScalar(F).floor(),C=K;let k=aa.bindFramebuffer(36160,f);if(k&&_.drawBuffers&&d&&aa.drawBuffers(a,f),aa.viewport(A),aa.scissor(B),aa.setScissorTest(C),g){let l=ac.get(a.texture);U.framebufferTexture2D(36160,36064,34069+b,l.__webglTexture,c)}else if(h){let m=ac.get(a.texture),n=b||0;U.framebufferTextureLayer(36160,36064,m.__webglTexture,c||0,n)}y=-1},this.readRenderTargetPixels=function(a,b,c,d,e,f,g){if(!(a&&a.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let h=ac.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&&void 0!==g&&(h=h[g]),h){aa.bindFramebuffer(36160,h);try{let i=a.texture,j=i.format,k=i.type;if(j!==aK&&at.convert(j)!==U.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let l=k===aE&&(Z.has("EXT_color_buffer_half_float")||_.isWebGL2&&Z.has("EXT_color_buffer_float"));if(k!==ax&&at.convert(k)!==U.getParameter(35738)&&!(k===aD&&(_.isWebGL2||Z.has("OES_texture_float")||Z.has("WEBGL_color_buffer_float")))&&!l){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}b>=0&&b<=a.width-d&&c>=0&&c<=a.height-e&&U.readPixels(b,c,d,e,at.convert(j),at.convert(k),f)}finally{let m=null!==x?ac.get(x).__webglFramebuffer:null;aa.bindFramebuffer(36160,m)}}},this.copyFramebufferToTexture=function(a,b,c=0){if(!0!==b.isFramebufferTexture){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}let d=Math.pow(2,-c),e=Math.floor(b.image.width*d),f=Math.floor(b.image.height*d);ad.setTexture2D(b,0),U.copyTexSubImage2D(3553,c,0,0,a.x,a.y,e,f),aa.unbindTexture()},this.copyTextureToTexture=function(a,b,c,d=0){let e=b.image.width,f=b.image.height,g=at.convert(c.format),h=at.convert(c.type);ad.setTexture2D(c,0),U.pixelStorei(37440,c.flipY),U.pixelStorei(37441,c.premultiplyAlpha),U.pixelStorei(3317,c.unpackAlignment),b.isDataTexture?U.texSubImage2D(3553,d,a.x,a.y,e,f,g,h,b.image.data):b.isCompressedTexture?U.compressedTexSubImage2D(3553,d,a.x,a.y,b.mipmaps[0].width,b.mipmaps[0].height,g,b.mipmaps[0].data):U.texSubImage2D(3553,d,a.x,a.y,g,h,b.image),0===d&&c.generateMipmaps&&U.generateMipmap(3553),aa.unbindTexture()},this.copyTextureToTexture3D=function(a,b,c,d,e=0){if(t.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let f=a.max.x-a.min.x+1,g=a.max.y-a.min.y+1,h=a.max.z-a.min.z+1,i=at.convert(d.format),j=at.convert(d.type),k;if(d.isData3DTexture)ad.setTexture3D(d,0),k=32879;else if(d.isDataArrayTexture)ad.setTexture2DArray(d,0),k=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}U.pixelStorei(37440,d.flipY),U.pixelStorei(37441,d.premultiplyAlpha),U.pixelStorei(3317,d.unpackAlignment);let l=U.getParameter(3314),m=U.getParameter(32878),n=U.getParameter(3316),o=U.getParameter(3315),p=U.getParameter(32877),q=c.isCompressedTexture?c.mipmaps[0]:c.image;U.pixelStorei(3314,q.width),U.pixelStorei(32878,q.height),U.pixelStorei(3316,a.min.x),U.pixelStorei(3315,a.min.y),U.pixelStorei(32877,a.min.z),c.isDataTexture||c.isData3DTexture?U.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q.data):c.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),U.compressedTexSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,q.data)):U.texSubImage3D(k,e,b.x,b.y,b.z,f,g,h,i,j,q),U.pixelStorei(3314,l),U.pixelStorei(32878,m),U.pixelStorei(3316,n),U.pixelStorei(3315,o),U.pixelStorei(32877,p),0===e&&d.generateMipmaps&&U.generateMipmap(k),aa.unbindTexture()},this.initTexture=function(a){ad.setTexture2D(a,0),aa.unbindTexture()},this.resetState=function(){v=0,w=0,x=null,aa.reset(),au.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}g1.prototype.isWebGLRenderer=!0;class g2 extends g1{}g2.prototype.isWebGL1Renderer=!0;class g3{constructor(a,b=25e-5){this.name="",this.color=new cB(a),this.density=b}clone(){return new g3(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}g3.prototype.isFogExp2=!0;class g4{constructor(a,b=1,c=1e3){this.name="",this.color=new cB(a),this.near=b,this.far=c}clone(){return new g4(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}g4.prototype.isFog=!0;class g5 extends dJ{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(a){let b=super.toJSON(a);return null!==this.fog&&(b.object.fog=this.fog.toJSON()),b}}g5.prototype.isScene=!0;class g6{constructor(a,b){this.array=a,this.stride=b,this.count=void 0!==a?a.length/b:0,this.usage=bV,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=cb()}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.usage=a.usage,this}copyAt(a,b,c){a*=this.stride,c*=b.stride;for(let d=0,e=this.stride;d<e;d++)this.array[a+d]=b.array[c+d];return this}set(a,b=0){return this.array.set(a,b),this}clone(a){void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=cb()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let b=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]),c=new this.constructor(b,this.stride);return c.setUsage(this.usage),c}onUpload(a){return this.onUploadCallback=a,this}toJSON(a){return void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=cb()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}g6.prototype.isInterleavedBuffer=!0;let g7=new cQ;class g8{constructor(a,b,c,d=!1){this.name="",this.data=a,this.itemSize=b,this.offset=c,this.normalized=!0===d}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(a){this.data.needsUpdate=a}applyMatrix4(a){for(let b=0,c=this.data.count;b<c;b++)g7.fromBufferAttribute(this,b),g7.applyMatrix4(a),this.setXYZ(b,g7.x,g7.y,g7.z);return this}applyNormalMatrix(a){for(let b=0,c=this.count;b<c;b++)g7.fromBufferAttribute(this,b),g7.applyNormalMatrix(a),this.setXYZ(b,g7.x,g7.y,g7.z);return this}transformDirection(a){for(let b=0,c=this.count;b<c;b++)g7.fromBufferAttribute(this,b),g7.transformDirection(a),this.setXYZ(b,g7.x,g7.y,g7.z);return this}setX(a,b){return this.data.array[a*this.data.stride+this.offset]=b,this}setY(a,b){return this.data.array[a*this.data.stride+this.offset+1]=b,this}setZ(a,b){return this.data.array[a*this.data.stride+this.offset+2]=b,this}setW(a,b){return this.data.array[a*this.data.stride+this.offset+3]=b,this}getX(a){return this.data.array[a*this.data.stride+this.offset]}getY(a){return this.data.array[a*this.data.stride+this.offset+1]}getZ(a){return this.data.array[a*this.data.stride+this.offset+2]}getW(a){return this.data.array[a*this.data.stride+this.offset+3]}setXY(a,b,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this}setXYZ(a,b,c,d){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this.data.array[a+3]=e,this}clone(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a)),new g8(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return new d$(new this.array.constructor(b),this.itemSize,this.normalized)}}toJSON(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let b=[];for(let c=0;c<this.count;c++){let d=c*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)b.push(this.data.array[d+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:b,normalized:this.normalized}}}}g8.prototype.isInterleavedBufferAttribute=!0;class g9 extends dW{constructor(a){super(),this.type="SpriteMaterial",this.color=new cB(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this}}g9.prototype.isSpriteMaterial=!0;let ha,hb=new cQ,hc=new cQ,hd=new cQ,he=new cl,hf=new cl,hg=new dj,hh=new cQ,hi=new cQ,hj=new cQ,hk=new cl,hl=new cl,hm=new cl;class hn extends dJ{constructor(a){if(super(),this.type="Sprite",void 0===ha){ha=new eg;let b=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),c=new g6(b,5);ha.setIndex([0,1,2,0,2,3]),ha.setAttribute("position",new g8(c,3,0,!1)),ha.setAttribute("uv",new g8(c,2,3,!1))}this.geometry=ha,this.material=void 0!==a?a:new g9,this.center=new cl(.5,.5)}raycast(a,b){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),hc.setFromMatrixScale(this.matrixWorld),hg.copy(a.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld),hd.setFromMatrixPosition(this.modelViewMatrix),a.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&hc.multiplyScalar(-hd.z);let c=this.material.rotation,d,e;0!==c&&(e=Math.cos(c),d=Math.sin(c));let f=this.center;ho(hh.set(-.5,-.5,0),hd,f,hc,d,e),ho(hi.set(.5,-.5,0),hd,f,hc,d,e),ho(hj.set(.5,.5,0),hd,f,hc,d,e),hk.set(0,0),hl.set(1,0),hm.set(1,1);let g=a.ray.intersectTriangle(hh,hi,hj,!1,hb);if(null===g&&(ho(hi.set(-.5,.5,0),hd,f,hc,d,e),hl.set(0,1),null===(g=a.ray.intersectTriangle(hh,hj,hi,!1,hb))))return;let h=a.ray.origin.distanceTo(hb);h<a.near||h>a.far||b.push({distance:h,point:hb.clone(),uv:dU.getUV(hb,hh,hi,hj,hk,hl,hm,new cl),face:null,object:this})}copy(a){return super.copy(a),void 0!==a.center&&this.center.copy(a.center),this.material=a.material,this}}function ho(a,b,c,d,e,f){he.subVectors(a,c).addScalar(.5).multiply(d),void 0!==e?(hf.x=f*he.x-e*he.y,hf.y=e*he.x+f*he.y):hf.copy(he),a.copy(b),a.x+=hf.x,a.y+=hf.y,a.applyMatrix4(hg)}hn.prototype.isSprite=!0;let hp=new cQ,hq=new cQ;class hr extends dJ{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(a){super.copy(a,!1);let b=a.levels;for(let c=0,d=b.length;c<d;c++){let e=b[c];this.addLevel(e.object.clone(),e.distance)}return this.autoUpdate=a.autoUpdate,this}addLevel(a,b=0){b=Math.abs(b);let c=this.levels,d;for(d=0;d<c.length&&!(b<c[d].distance);d++);return c.splice(d,0,{distance:b,object:a}),this.add(a),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(a){let b=this.levels;if(b.length>0){let c,d;for(c=1,d=b.length;c<d&&!(a<b[c].distance);c++);return b[c-1].object}return null}raycast(a,b){let c=this.levels;if(c.length>0){hp.setFromMatrixPosition(this.matrixWorld);let d=a.ray.origin.distanceTo(hp);this.getObjectForDistance(d).raycast(a,b)}}update(a){let b=this.levels;if(b.length>1){hp.setFromMatrixPosition(a.matrixWorld),hq.setFromMatrixPosition(this.matrixWorld);let c=hp.distanceTo(hq)/a.zoom;b[0].object.visible=!0;let d,e;for(d=1,e=b.length;d<e;d++)if(c>=b[d].distance)b[d-1].object.visible=!1,b[d].object.visible=!0;else break;for(this._currentLevel=d-1;d<e;d++)b[d].object.visible=!1}}toJSON(a){let b=super.toJSON(a);!1===this.autoUpdate&&(b.object.autoUpdate=!1),b.object.levels=[];let c=this.levels;for(let d=0,e=c.length;d<e;d++){let f=c[d];b.object.levels.push({object:f.object.uuid,distance:f.distance})}return b}}let hs=new cQ,ht=new cI,hu=new cI,hv=new cQ,hw=new dj;class hx extends ey{constructor(a,b){super(a,b),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new dj,this.bindMatrixInverse=new dj}copy(a){return super.copy(a),this.bindMode=a.bindMode,this.bindMatrix.copy(a.bindMatrix),this.bindMatrixInverse.copy(a.bindMatrixInverse),this.skeleton=a.skeleton,this}bind(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.copy(b).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let a=new cI,b=this.geometry.attributes.skinWeight;for(let c=0,d=b.count;c<d;c++){a.fromBufferAttribute(b,c);let e=1/a.manhattanLength();e!==1/0?a.multiplyScalar(e):a.set(1,0,0,0),b.setXYZW(c,a.x,a.y,a.z,a.w)}}updateMatrixWorld(a){super.updateMatrixWorld(a),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(a,b){let c=this.skeleton,d=this.geometry;ht.fromBufferAttribute(d.attributes.skinIndex,a),hu.fromBufferAttribute(d.attributes.skinWeight,a),hs.copy(b).applyMatrix4(this.bindMatrix),b.set(0,0,0);for(let e=0;e<4;e++){let f=hu.getComponent(e);if(0!==f){let g=ht.getComponent(e);hw.multiplyMatrices(c.bones[g].matrixWorld,c.boneInverses[g]),b.addScaledVector(hv.copy(hs).applyMatrix4(hw),f)}}return b.applyMatrix4(this.bindMatrixInverse)}}hx.prototype.isSkinnedMesh=!0;class hy extends dJ{constructor(){super(),this.type="Bone"}}hy.prototype.isBone=!0;class hz extends cH{constructor(a=null,b=1,c=1,d,e,f,g,h,i=an,j=an,k,l){super(null,f,g,h,i,j,d,e,k,l),this.image={data:a,width:b,height:c},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}hz.prototype.isDataTexture=!0;let hA=new dj,hB=new dj;class hC{constructor(a=[],b=[]){this.uuid=cb(),this.bones=a.slice(0),this.boneInverses=b,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let a=this.bones,b=this.boneInverses;if(this.boneMatrices=new Float32Array(16*a.length),0===b.length)this.calculateInverses();else if(a.length!==b.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new dj)}}calculateInverses(){this.boneInverses.length=0;for(let a=0,b=this.bones.length;a<b;a++){let c=new dj;this.bones[a]&&c.copy(this.bones[a].matrixWorld).invert(),this.boneInverses.push(c)}}pose(){for(let a=0,b=this.bones.length;a<b;a++){let c=this.bones[a];c&&c.matrixWorld.copy(this.boneInverses[a]).invert()}for(let d=0,e=this.bones.length;d<e;d++){let f=this.bones[d];f&&(f.parent&&f.parent.isBone?(f.matrix.copy(f.parent.matrixWorld).invert(),f.matrix.multiply(f.matrixWorld)):f.matrix.copy(f.matrixWorld),f.matrix.decompose(f.position,f.quaternion,f.scale))}}update(){let a=this.bones,b=this.boneInverses,c=this.boneMatrices,d=this.boneTexture;for(let e=0,f=a.length;e<f;e++){let g=a[e]?a[e].matrixWorld:hB;hA.multiplyMatrices(g,b[e]),hA.toArray(c,16*e)}null!==d&&(d.needsUpdate=!0)}clone(){return new hC(this.bones,this.boneInverses)}computeBoneTexture(){let a=Math.sqrt(4*this.bones.length);a=Math.max(a=ci(a),4);let b=new Float32Array(a*a*4);b.set(this.boneMatrices);let c=new hz(b,a,a,aK,aD);return c.needsUpdate=!0,this.boneMatrices=b,this.boneTexture=c,this.boneTextureSize=a,this}getBoneByName(a){for(let b=0,c=this.bones.length;b<c;b++){let d=this.bones[b];if(d.name===a)return d}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(a,b){this.uuid=a.uuid;for(let c=0,d=a.bones.length;c<d;c++){let e=a.bones[c],f=b[e];void 0===f&&(console.warn("THREE.Skeleton: No bone found with UUID:",e),f=new hy),this.bones.push(f),this.boneInverses.push(new dj().fromArray(a.boneInverses[c]))}return this.init(),this}toJSON(){let a={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};a.uuid=this.uuid;let b=this.bones,c=this.boneInverses;for(let d=0,e=b.length;d<e;d++){let f=b[d];a.bones.push(f.uuid);let g=c[d];a.boneInverses.push(g.toArray())}return a}}class hD extends d${constructor(a,b,c,d=1){"number"==typeof c&&(d=c,c=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(a,b,c),this.meshPerAttribute=d}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}toJSON(){let a=super.toJSON();return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}hD.prototype.isInstancedBufferAttribute=!0;let hE=new dj,hF=new dj,hG=[],hH=new ey;class hI extends ey{constructor(a,b,c){super(a,b),this.instanceMatrix=new hD(new Float32Array(16*c),16),this.instanceColor=null,this.count=c,this.frustumCulled=!1}copy(a){return super.copy(a),this.instanceMatrix.copy(a.instanceMatrix),null!==a.instanceColor&&(this.instanceColor=a.instanceColor.clone()),this.count=a.count,this}getColorAt(a,b){b.fromArray(this.instanceColor.array,3*a)}getMatrixAt(a,b){b.fromArray(this.instanceMatrix.array,16*a)}raycast(a,b){let c=this.matrixWorld,d=this.count;if(hH.geometry=this.geometry,hH.material=this.material,void 0!==hH.material)for(let e=0;e<d;e++){this.getMatrixAt(e,hE),hF.multiplyMatrices(c,hE),hH.matrixWorld=hF,hH.raycast(a,hG);for(let f=0,g=hG.length;f<g;f++){let h=hG[f];h.instanceId=e,h.object=this,b.push(h)}hG.length=0}}setColorAt(a,b){null===this.instanceColor&&(this.instanceColor=new hD(new Float32Array(3*this.instanceMatrix.count),3)),b.toArray(this.instanceColor.array,3*a)}setMatrixAt(a,b){b.toArray(this.instanceMatrix.array,16*a)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}hI.prototype.isInstancedMesh=!0;class hJ extends dW{constructor(a){super(),this.type="LineBasicMaterial",this.color=new cB(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this}}hJ.prototype.isLineBasicMaterial=!0;let hK=new cQ,hL=new cQ,hM=new dj,hN=new di,hO=new da;class hP extends dJ{constructor(a=new eg,b=new hJ){super(),this.type="Line",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),this.material=a.material,this.geometry=a.geometry,this}computeLineDistances(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[0];for(let d=1,e=b.count;d<e;d++)hK.fromBufferAttribute(b,d-1),hL.fromBufferAttribute(b,d),c[d]=c[d-1],c[d]+=hK.distanceTo(hL);a.setAttribute("lineDistance",new d7(c,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else a.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Line.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),hO.copy(c.boundingSphere),hO.applyMatrix4(d),hO.radius+=e,!1===a.ray.intersectsSphere(hO))return;hM.copy(d).invert(),hN.copy(a.ray).applyMatrix4(hM);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g,i=new cQ,j=new cQ,k=new cQ,l=new cQ,m=this.isLineSegments?2:1;if(c.isBufferGeometry){let n=c.index,o=c.attributes,p=o.position;if(null!==n){let q=Math.max(0,f.start),r=Math.min(n.count,f.start+f.count);for(let s=q,t=r-1;s<t;s+=m){let u=n.getX(s),v=n.getX(s+1);i.fromBufferAttribute(p,u),j.fromBufferAttribute(p,v);let w=hN.distanceSqToSegment(i,j,l,k);if(w>h)continue;l.applyMatrix4(this.matrixWorld);let x=a.ray.origin.distanceTo(l);x<a.near||x>a.far||b.push({distance:x,point:k.clone().applyMatrix4(this.matrixWorld),index:s,face:null,faceIndex:null,object:this})}}else{let y=Math.max(0,f.start),z=Math.min(p.count,f.start+f.count);for(let A=y,B=z-1;A<B;A+=m){i.fromBufferAttribute(p,A),j.fromBufferAttribute(p,A+1);let C=hN.distanceSqToSegment(i,j,l,k);if(C>h)continue;l.applyMatrix4(this.matrixWorld);let D=a.ray.origin.distanceTo(l);D<a.near||D>a.far||b.push({distance:D,point:k.clone().applyMatrix4(this.matrixWorld),index:A,face:null,faceIndex:null,object:this})}}}else c.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}hP.prototype.isLine=!0;let hQ=new cQ,hR=new cQ;class hS extends hP{constructor(a,b){super(a,b),this.type="LineSegments"}computeLineDistances(){let a=this.geometry;if(a.isBufferGeometry){if(null===a.index){let b=a.attributes.position,c=[];for(let d=0,e=b.count;d<e;d+=2)hQ.fromBufferAttribute(b,d),hR.fromBufferAttribute(b,d+1),c[d]=0===d?0:c[d-1],c[d+1]=c[d]+hQ.distanceTo(hR);a.setAttribute("lineDistance",new d7(c,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else a.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}hS.prototype.isLineSegments=!0;class hT extends hP{constructor(a,b){super(a,b),this.type="LineLoop"}}hT.prototype.isLineLoop=!0;class hU extends dW{constructor(a){super(),this.type="PointsMaterial",this.color=new cB(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this}}hU.prototype.isPointsMaterial=!0;let hV=new dj,hW=new di,hX=new da,hY=new cQ;class hZ extends dJ{constructor(a=new eg,b=new hU){super(),this.type="Points",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a){return super.copy(a),this.material=a.material,this.geometry=a.geometry,this}raycast(a,b){let c=this.geometry,d=this.matrixWorld,e=a.params.Points.threshold,f=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),hX.copy(c.boundingSphere),hX.applyMatrix4(d),hX.radius+=e,!1===a.ray.intersectsSphere(hX))return;hV.copy(d).invert(),hW.copy(a.ray).applyMatrix4(hV);let g=e/((this.scale.x+this.scale.y+this.scale.z)/3),h=g*g;if(c.isBufferGeometry){let i=c.index,j=c.attributes,k=j.position;if(null!==i){let l=Math.max(0,f.start),m=Math.min(i.count,f.start+f.count);for(let n=l,o=m;n<o;n++){let p=i.getX(n);hY.fromBufferAttribute(k,p),h$(hY,p,h,d,a,b,this)}}else{let q=Math.max(0,f.start),r=Math.min(k.count,f.start+f.count);for(let s=q,t=r;s<t;s++)hY.fromBufferAttribute(k,s),h$(hY,s,h,d,a,b,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let a=this.geometry;if(a.isBufferGeometry){let b=a.morphAttributes,c=Object.keys(b);if(c.length>0){let d=b[c[0]];if(void 0!==d){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,f=d.length;e<f;e++){let g=d[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=e}}}}else{let h=a.morphTargets;void 0!==h&&h.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function h$(a,b,c,d,e,f,g){let h=hW.distanceSqToPoint(a);if(h<c){let i=new cQ;hW.closestPointToPoint(a,i),i.applyMatrix4(d);let j=e.ray.origin.distanceTo(i);if(j<e.near||j>e.far)return;f.push({distance:j,distanceToRay:Math.sqrt(h),point:i,index:b,face:null,object:g})}}hZ.prototype.isPoints=!0;class h_ extends cH{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.minFilter=void 0!==f?f:as,this.magFilter=void 0!==e?e:as,this.generateMipmaps=!1;let j=this;function k(){j.needsUpdate=!0,a.requestVideoFrameCallback(k)}"requestVideoFrameCallback"in a&&a.requestVideoFrameCallback(k)}clone(){return new this.constructor(this.image).copy(this)}update(){let a=this.image;!1=="requestVideoFrameCallback"in a&&a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}h_.prototype.isVideoTexture=!0;class h0 extends cH{constructor(a,b,c){super({width:a,height:b}),this.format=c,this.magFilter=an,this.minFilter=an,this.generateMipmaps=!1,this.needsUpdate=!0}}h0.prototype.isFramebufferTexture=!0;class h1 extends cH{constructor(a,b,c,d,e,f,g,h,i,j,k,l){super(null,f,g,h,i,j,d,e,k,l),this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}}h1.prototype.isCompressedTexture=!0;class h2 extends cH{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.needsUpdate=!0}}h2.prototype.isCanvasTexture=!0;class h3{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)}getPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return b}getSpacedPoints(a=5){let b=[];for(let c=0;c<=a;c++)b.push(this.getPointAt(c/a));return b}getLength(){let a=this.getLengths();return a[a.length-1]}getLengths(a=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let b=[],c,d=this.getPoint(0),e=0;b.push(0);for(let f=1;f<=a;f++)b.push(e+=(c=this.getPoint(f/a)).distanceTo(d)),d=c;return this.cacheArcLengths=b,b}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(a,b){let c=this.getLengths(),d=0,e=c.length,f;f=b||a*c[e-1];let g=0,h=e-1,i;for(;g<=h;)if((i=c[d=Math.floor(g+(h-g)/2)]-f)<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}if(c[d=h]===f)return d/(e-1);let j=c[d],k=c[d+1],l=(f-j)/(k-j),m=(d+l)/(e-1);return m}getTangent(a,b){let c=1e-4,d=a-c,e=a+c;d<0&&(d=0),e>1&&(e=1);let f=this.getPoint(d),g=this.getPoint(e),h=b||(f.isVector2?new cl:new cQ);return h.copy(g).sub(f).normalize(),h}getTangentAt(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)}computeFrenetFrames(a,b){let c=new cQ,d=[],e=[],f=[],g=new cQ,h=new dj;for(let i=0;i<=a;i++){let j=i/a;d[i]=this.getTangentAt(j,new cQ)}e[0]=new cQ,f[0]=new cQ;let k=Number.MAX_VALUE,l=Math.abs(d[0].x),m=Math.abs(d[0].y),n=Math.abs(d[0].z);l<=k&&(k=l,c.set(1,0,0)),m<=k&&(k=m,c.set(0,1,0)),n<=k&&c.set(0,0,1),g.crossVectors(d[0],c).normalize(),e[0].crossVectors(d[0],g),f[0].crossVectors(d[0],e[0]);for(let o=1;o<=a;o++){if(e[o]=e[o-1].clone(),f[o]=f[o-1].clone(),g.crossVectors(d[o-1],d[o]),g.length()>Number.EPSILON){g.normalize();let p=Math.acos(cc(d[o-1].dot(d[o]),-1,1));e[o].applyMatrix4(h.makeRotationAxis(g,p))}f[o].crossVectors(d[o],e[o])}if(!0===b){let q=Math.acos(cc(e[0].dot(e[a]),-1,1));q/=a,d[0].dot(g.crossVectors(e[0],e[a]))>0&&(q=-q);for(let r=1;r<=a;r++)e[r].applyMatrix4(h.makeRotationAxis(d[r],q*r)),f[r].crossVectors(d[r],e[r])}return{tangents:d,normals:e,binormals:f}}clone(){return new this.constructor().copy(this)}copy(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}toJSON(){let a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a}fromJSON(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}class h4 extends h3{constructor(a=0,b=0,c=1,d=1,e=0,f=2*Math.PI,g=!1,h=0){super(),this.type="EllipseCurve",this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g,this.aRotation=h}getPoint(a,b){let c=b||new cl,d=2*Math.PI,e=this.aEndAngle-this.aStartAngle,f=Math.abs(e)<Number.EPSILON;for(;e<0;)e+=d;for(;e>d;)e-=d;e<Number.EPSILON&&(e=f?0:d),!0!==this.aClockwise||f||(e===d?e=-d:e-=d);let g=this.aStartAngle+a*e,h=this.aX+this.xRadius*Math.cos(g),i=this.aY+this.yRadius*Math.sin(g);if(0!==this.aRotation){let j=Math.cos(this.aRotation),k=Math.sin(this.aRotation),l=h-this.aX,m=i-this.aY;h=l*j-m*k+this.aX,i=l*k+m*j+this.aY}return c.set(h,i)}copy(a){return super.copy(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}toJSON(){let a=super.toJSON();return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a}fromJSON(a){return super.fromJSON(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}}h4.prototype.isEllipseCurve=!0;class h5 extends h4{constructor(a,b,c,d,e,f){super(a,b,c,c,d,e,f),this.type="ArcCurve"}}function h6(){let a=0,b=0,c=0,d=0;function e(e,f,g,h){a=e,b=g,c=-3*e+3*f-2*g-h,d=2*e-2*f+g+h}return{initCatmullRom:function(a,b,c,d,f){e(b,c,f*(c-a),f*(d-b))},initNonuniformCatmullRom:function(a,b,c,d,f,g,h){let i=(b-a)/f-(c-a)/(f+g)+(c-b)/g,j=(c-b)/g-(d-b)/(g+h)+(d-c)/h;i*=g,j*=g,e(b,c,i,j)},calc:function(e){let f=e*e;return a+b*e+c*f+d*(f*e)}}}h5.prototype.isArcCurve=!0;let h7=new cQ,h8=new h6,h9=new h6,ia=new h6;class ib extends h3{constructor(a=[],b=!1,c="centripetal",d=.5){super(),this.type="CatmullRomCurve3",this.points=a,this.closed=b,this.curveType=c,this.tension=d}getPoint(a,b=new cQ){let c=b,d=this.points,e=d.length,f=(e-(this.closed?0:1))*a,g=Math.floor(f),h=f-g;this.closed?g+=g>0?0:(Math.floor(Math.abs(g)/e)+1)*e:0===h&&g===e-1&&(g=e-2,h=1);let i,j;this.closed||g>0?i=d[(g-1)%e]:(h7.subVectors(d[0],d[1]).add(d[0]),i=h7);let k=d[g%e],l=d[(g+1)%e];if(this.closed||g+2<e?j=d[(g+2)%e]:(h7.subVectors(d[e-1],d[e-2]).add(d[e-1]),j=h7),"centripetal"===this.curveType||"chordal"===this.curveType){let m="chordal"===this.curveType?.5:.25,n=Math.pow(i.distanceToSquared(k),m),o=Math.pow(k.distanceToSquared(l),m),p=Math.pow(l.distanceToSquared(j),m);o<1e-4&&(o=1),n<1e-4&&(n=o),p<1e-4&&(p=o),h8.initNonuniformCatmullRom(i.x,k.x,l.x,j.x,n,o,p),h9.initNonuniformCatmullRom(i.y,k.y,l.y,j.y,n,o,p),ia.initNonuniformCatmullRom(i.z,k.z,l.z,j.z,n,o,p)}else"catmullrom"===this.curveType&&(h8.initCatmullRom(i.x,k.x,l.x,j.x,this.tension),h9.initCatmullRom(i.y,k.y,l.y,j.y,this.tension),ia.initCatmullRom(i.z,k.z,l.z,j.z,this.tension));return c.set(h8.calc(h),h9.calc(h),ia.calc(h)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new cQ().fromArray(d))}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}}function ic(a,b,c,d,e){let f=(d-b)*.5,g=(e-c)*.5,h=a*a;return(2*c-2*d+f+g)*(a*h)+(-3*c+3*d-2*f-g)*h+f*a+c}ib.prototype.isCatmullRomCurve3=!0;function id(a,b,c,d){var e,f,g,h;return function(a,b){let c=1-a;return c*c*b}(a,b)+(e=a,2*(1-e)*e*(f=c))+(g=a,g*g*(h=d))}function ie(a,b,c,d,e){var f,g,h,i;return function(a,b){let c=1-a;return c*c*c*b}(a,b)+function(a,b){let c=1-a;return 3*c*c*a*b}(a,c)+(f=a,3*(1-f)*f*f*(g=d))+(h=a,h*h*h*(i=e))}class ig extends h3{constructor(a=new cl,b=new cl,c=new cl,d=new cl){super(),this.type="CubicBezierCurve",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new cl){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(ie(a,d.x,e.x,f.x,g.x),ie(a,d.y,e.y,f.y,g.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}ig.prototype.isCubicBezierCurve=!0;class ih extends h3{constructor(a=new cQ,b=new cQ,c=new cQ,d=new cQ){super(),this.type="CubicBezierCurve3",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,b=new cQ){let c=b,d=this.v0,e=this.v1,f=this.v2,g=this.v3;return c.set(ie(a,d.x,e.x,f.x,g.x),ie(a,d.y,e.y,f.y,g.y),ie(a,d.z,e.z,f.z,g.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}ih.prototype.isCubicBezierCurve3=!0;class ii extends h3{constructor(a=new cl,b=new cl){super(),this.type="LineCurve",this.v1=a,this.v2=b}getPoint(a,b=new cl){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}getTangent(a,b){let c=b||new cl;return c.copy(this.v2).sub(this.v1).normalize(),c}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}ii.prototype.isLineCurve=!0;class ij extends h3{constructor(a=new cQ,b=new cQ){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=a,this.v2=b}getPoint(a,b=new cQ){let c=b;return 1===a?c.copy(this.v2):(c.copy(this.v2).sub(this.v1),c.multiplyScalar(a).add(this.v1)),c}getPointAt(a,b){return this.getPoint(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class ik extends h3{constructor(a=new cl,b=new cl,c=new cl){super(),this.type="QuadraticBezierCurve",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new cl){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(id(a,d.x,e.x,f.x),id(a,d.y,e.y,f.y)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}ik.prototype.isQuadraticBezierCurve=!0;class il extends h3{constructor(a=new cQ,b=new cQ,c=new cQ){super(),this.type="QuadraticBezierCurve3",this.v0=a,this.v1=b,this.v2=c}getPoint(a,b=new cQ){let c=b,d=this.v0,e=this.v1,f=this.v2;return c.set(id(a,d.x,e.x,f.x),id(a,d.y,e.y,f.y),id(a,d.z,e.z,f.z)),c}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}il.prototype.isQuadraticBezierCurve3=!0;class im extends h3{constructor(a=[]){super(),this.type="SplineCurve",this.points=a}getPoint(a,b=new cl){let c=b,d=this.points,e=(d.length-1)*a,f=Math.floor(e),g=e-f,h=d[0===f?f:f-1],i=d[f],j=d[f>d.length-2?d.length-1:f+1],k=d[f>d.length-3?d.length-1:f+2];return c.set(ic(g,h.x,i.x,j.x,k.x),ic(g,h.y,i.y,j.y,k.y)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new cl().fromArray(d))}return this}}im.prototype.isSplineCurve=!0;var io=Object.freeze({__proto__:null,ArcCurve:h5,CatmullRomCurve3:ib,CubicBezierCurve:ig,CubicBezierCurve3:ih,EllipseCurve:h4,LineCurve:ii,LineCurve3:ij,QuadraticBezierCurve:ik,QuadraticBezierCurve3:il,SplineCurve:im});class ip extends h3{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(a){this.curves.push(a)}closePath(){let a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new ii(b,a))}getPoint(a,b){let c=a*this.getLength(),d=this.getCurveLengths(),e=0;for(;e<d.length;){if(d[e]>=c){let f=d[e]-c,g=this.curves[e],h=g.getLength(),i=0===h?0:1-f/h;return g.getPointAt(i,b)}e++}return null}getLength(){let a=this.getCurveLengths();return a[a.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let a=[],b=0;for(let c=0,d=this.curves.length;c<d;c++)a.push(b+=this.curves[c].getLength());return this.cacheLengths=a,a}getSpacedPoints(a=40){let b=[];for(let c=0;c<=a;c++)b.push(this.getPoint(c/a));return this.autoClose&&b.push(b[0]),b}getPoints(a=12){let b=[],c;for(let d=0,e=this.curves;d<e.length;d++){let f=e[d],g=f.isEllipseCurve?2*a:f.isLineCurve||f.isLineCurve3?1:f.isSplineCurve?a*f.points.length:a,h=f.getPoints(g);for(let i=0;i<h.length;i++){let j=h[i];c&&c.equals(j)||(b.push(j),c=j)}}return this.autoClose&&b.length>1&&!b[b.length-1].equals(b[0])&&b.push(b[0]),b}copy(a){super.copy(a),this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(d.clone())}return this.autoClose=a.autoClose,this}toJSON(){let a=super.toJSON();a.autoClose=this.autoClose,a.curves=[];for(let b=0,c=this.curves.length;b<c;b++){let d=this.curves[b];a.curves.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.autoClose=a.autoClose,this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(new io[d.type]().fromJSON(d))}return this}}class iq extends ip{constructor(a){super(),this.type="Path",this.currentPoint=new cl,a&&this.setFromPoints(a)}setFromPoints(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this}moveTo(a,b){return this.currentPoint.set(a,b),this}lineTo(a,b){let c=new ii(this.currentPoint.clone(),new cl(a,b));return this.curves.push(c),this.currentPoint.set(a,b),this}quadraticCurveTo(a,b,c,d){let e=new ik(this.currentPoint.clone(),new cl(a,b),new cl(c,d));return this.curves.push(e),this.currentPoint.set(c,d),this}bezierCurveTo(a,b,c,d,e,f){let g=new ig(this.currentPoint.clone(),new cl(a,b),new cl(c,d),new cl(e,f));return this.curves.push(g),this.currentPoint.set(e,f),this}splineThru(a){let b=[this.currentPoint.clone()].concat(a),c=new im(b);return this.curves.push(c),this.currentPoint.copy(a[a.length-1]),this}arc(a,b,c,d,e,f){let g=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(a+g,b+h,c,d,e,f),this}absarc(a,b,c,d,e,f){return this.absellipse(a,b,c,c,d,e,f),this}ellipse(a,b,c,d,e,f,g,h){let i=this.currentPoint.x,j=this.currentPoint.y;return this.absellipse(a+i,b+j,c,d,e,f,g,h),this}absellipse(a,b,c,d,e,f,g,h){let i=new h4(a,b,c,d,e,f,g,h);if(this.curves.length>0){let j=i.getPoint(0);j.equals(this.currentPoint)||this.lineTo(j.x,j.y)}this.curves.push(i);let k=i.getPoint(1);return this.currentPoint.copy(k),this}copy(a){return super.copy(a),this.currentPoint.copy(a.currentPoint),this}toJSON(){let a=super.toJSON();return a.currentPoint=this.currentPoint.toArray(),a}fromJSON(a){return super.fromJSON(a),this.currentPoint.fromArray(a.currentPoint),this}}class ir extends eg{constructor(a=[new cl(0,.5),new cl(.5,0),new cl(0,-.5)],b=12,c=0,d=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},b=Math.floor(b),d=cc(d,0,2*Math.PI);let e=[],f=[],g=[],h=[],i=[],j=1/b,k=new cQ,l=new cl,m=new cQ,n=new cQ,o=new cQ,p=0,q=0;for(let r=0;r<=a.length-1;r++)switch(r){case 0:p=a[r+1].x-a[r].x,q=a[r+1].y-a[r].y,m.x=1*q,m.y=-p,m.z=0*q,o.copy(m),m.normalize(),h.push(m.x,m.y,m.z);break;case a.length-1:h.push(o.x,o.y,o.z);break;default:p=a[r+1].x-a[r].x,q=a[r+1].y-a[r].y,m.x=1*q,m.y=-p,m.z=0*q,n.copy(m),m.x+=o.x,m.y+=o.y,m.z+=o.z,m.normalize(),h.push(m.x,m.y,m.z),o.copy(n)}for(let s=0;s<=b;s++){let t=c+s*j*d,u=Math.sin(t),v=Math.cos(t);for(let w=0;w<=a.length-1;w++){k.x=a[w].x*u,k.y=a[w].y,k.z=a[w].x*v,f.push(k.x,k.y,k.z),l.x=s/b,l.y=w/(a.length-1),g.push(l.x,l.y);let x=h[3*w+0]*u,y=h[3*w+1],z=h[3*w+0]*v;i.push(x,y,z)}}for(let A=0;A<b;A++)for(let B=0;B<a.length-1;B++){let C=B+A*a.length,D=C,E=C+a.length,F=C+a.length+1,G=C+1;e.push(D,E,G),e.push(F,G,E)}this.setIndex(e),this.setAttribute("position",new d7(f,3)),this.setAttribute("uv",new d7(g,2)),this.setAttribute("normal",new d7(i,3))}static fromJSON(a){return new ir(a.points,a.segments,a.phiStart,a.phiLength)}}class is extends ir{constructor(a=1,b=1,c=4,d=8){let e=new iq;e.absarc(0,-b/2,a,1.5*Math.PI,0),e.absarc(0,b/2,a,0,.5*Math.PI),super(e.getPoints(c),d),this.type="CapsuleGeometry",this.parameters={radius:a,height:b,capSegments:c,radialSegments:d}}static fromJSON(a){return new is(a.radius,a.length,a.capSegments,a.radialSegments)}}class it extends eg{constructor(a=1,b=8,c=0,d=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},b=Math.max(3,b);let e=[],f=[],g=[],h=[],i=new cQ,j=new cl;f.push(0,0,0),g.push(0,0,1),h.push(.5,.5);for(let k=0,l=3;k<=b;k++,l+=3){let m=c+k/b*d;i.x=a*Math.cos(m),i.y=a*Math.sin(m),f.push(i.x,i.y,i.z),g.push(0,0,1),j.x=(f[l]/a+1)/2,j.y=(f[l+1]/a+1)/2,h.push(j.x,j.y)}for(let n=1;n<=b;n++)e.push(n,n+1,0);this.setIndex(e),this.setAttribute("position",new d7(f,3)),this.setAttribute("normal",new d7(g,3)),this.setAttribute("uv",new d7(h,2))}static fromJSON(a){return new it(a.radius,a.segments,a.thetaStart,a.thetaLength)}}class iu extends eg{constructor(a=1,b=1,c=1,d=8,e=1,f=!1,g=0,h=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h};let i=this;d=Math.floor(d),e=Math.floor(e);let j=[],k=[],l=[],m=[],n=0,o=[],p=c/2,q=0;function r(c){let e=n,f=new cl,o=new cQ,r=0,s=!0===c?a:b,t=!0===c?1:-1;for(let u=1;u<=d;u++)k.push(0,p*t,0),l.push(0,t,0),m.push(.5,.5),n++;let v=n;for(let w=0;w<=d;w++){let x=w/d,y=x*h+g,z=Math.cos(y),A=Math.sin(y);o.x=s*A,o.y=p*t,o.z=s*z,k.push(o.x,o.y,o.z),l.push(0,t,0),f.x=.5*z+.5,f.y=.5*A*t+.5,m.push(f.x,f.y),n++}for(let B=0;B<d;B++){let C=e+B,D=v+B;!0===c?j.push(D,D+1,C):j.push(D+1,D,C),r+=3}i.addGroup(q,r,!0===c?1:2),q+=r}(function(){let f=new cQ,r=new cQ,s=0,t=(b-a)/c;for(let u=0;u<=e;u++){let v=[],w=u/e,x=w*(b-a)+a;for(let y=0;y<=d;y++){let z=y/d,A=z*h+g,B=Math.sin(A),C=Math.cos(A);r.x=x*B,r.y=-w*c+p,r.z=x*C,k.push(r.x,r.y,r.z),f.set(B,t,C).normalize(),l.push(f.x,f.y,f.z),m.push(z,1-w),v.push(n++)}o.push(v)}for(let D=0;D<d;D++)for(let E=0;E<e;E++){let F=o[E][D],G=o[E+1][D],H=o[E+1][D+1],I=o[E][D+1];j.push(F,G,I),j.push(G,H,I),s+=6}i.addGroup(q,s,0),q+=s})(),!1===f&&(a>0&&r(!0),b>0&&r(!1)),this.setIndex(j),this.setAttribute("position",new d7(k,3)),this.setAttribute("normal",new d7(l,3)),this.setAttribute("uv",new d7(m,2))}static fromJSON(a){return new iu(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class iv extends iu{constructor(a=1,b=1,c=8,d=1,e=!1,f=0,g=2*Math.PI){super(0,a,b,c,d,e,f,g),this.type="ConeGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}static fromJSON(a){return new iv(a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class iw extends eg{constructor(a=[],b=[],c=1,d=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d};let e=[],f=[];function g(a,b,c,d){let e=d+1,f=[];for(let g=0;g<=e;g++){f[g]=[];let h=a.clone().lerp(c,g/e),j=b.clone().lerp(c,g/e),k=e-g;for(let l=0;l<=k;l++)0===l&&g===e?f[g][l]=h:f[g][l]=h.clone().lerp(j,l/k)}for(let m=0;m<e;m++)for(let n=0;n<2*(e-m)-1;n++){let o=Math.floor(n/2);n%2==0?(i(f[m][o+1]),i(f[m+1][o]),i(f[m][o])):(i(f[m][o+1]),i(f[m+1][o+1]),i(f[m+1][o]))}}function h(){for(let a=0;a<f.length;a+=6){let b=f[a+0],c=f[a+2],d=f[a+4],e=Math.max(b,c,d),g=Math.min(b,c,d);e>.9&&g<.1&&(b<.2&&(f[a+0]+=1),c<.2&&(f[a+2]+=1),d<.2&&(f[a+4]+=1))}}function i(a){e.push(a.x,a.y,a.z)}function j(b,c){let d=3*b;c.x=a[d+0],c.y=a[d+1],c.z=a[d+2]}function k(){let a=new cQ,b=new cQ,c=new cQ,d=new cQ,g=new cl,h=new cl,i=new cl;for(let j=0,k=0;j<e.length;j+=9,k+=6){a.set(e[j+0],e[j+1],e[j+2]),b.set(e[j+3],e[j+4],e[j+5]),c.set(e[j+6],e[j+7],e[j+8]),g.set(f[k+0],f[k+1]),h.set(f[k+2],f[k+3]),i.set(f[k+4],f[k+5]),d.copy(a).add(b).add(c).divideScalar(3);let n=m(d);l(g,k+0,a,n),l(h,k+2,b,n),l(i,k+4,c,n)}}function l(a,b,c,d){d<0&&1===a.x&&(f[b]=a.x-1),0===c.x&&0===c.z&&(f[b]=d/2/Math.PI+.5)}function m(a){return Math.atan2(a.z,-a.x)}function n(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}(function(a){let c=new cQ,d=new cQ,e=new cQ;for(let f=0;f<b.length;f+=3)j(b[f+0],c),j(b[f+1],d),j(b[f+2],e),g(c,d,e,a)})(d),function(a){let b=new cQ;for(let c=0;c<e.length;c+=3)b.x=e[c+0],b.y=e[c+1],b.z=e[c+2],b.normalize().multiplyScalar(a),e[c+0]=b.x,e[c+1]=b.y,e[c+2]=b.z}(c),function(){let a=new cQ;for(let b=0;b<e.length;b+=3){a.x=e[b+0],a.y=e[b+1],a.z=e[b+2];let c=m(a)/2/Math.PI+.5,d=n(a)/Math.PI+.5;f.push(c,1-d)}k(),h()}(),this.setAttribute("position",new d7(e,3)),this.setAttribute("normal",new d7(e.slice(),3)),this.setAttribute("uv",new d7(f,2)),0===d?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(a){return new iw(a.vertices,a.indices,a.radius,a.details)}}class ix extends iw{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2,d=1/c;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],a,b),this.type="DodecahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new ix(a.radius,a.detail)}}let iy=new cQ,iz=new cQ,iA=new cQ,iB=new dU;class iC extends eg{constructor(a=null,b=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:a,thresholdAngle:b},null!==a){let c=4,d=Math.pow(10,c),e=Math.cos(b9*b),f=a.getIndex(),g=a.getAttribute("position"),h=f?f.count:g.count,i=[0,0,0],j=["a","b","c"],k=[,,,],l={},m=[];for(let n=0;n<h;n+=3){f?(i[0]=f.getX(n),i[1]=f.getX(n+1),i[2]=f.getX(n+2)):(i[0]=n,i[1]=n+1,i[2]=n+2);let{a:o,b:p,c:q}=iB;if(o.fromBufferAttribute(g,i[0]),p.fromBufferAttribute(g,i[1]),q.fromBufferAttribute(g,i[2]),iB.getNormal(iA),k[0]=`${Math.round(o.x*d)},${Math.round(o.y*d)},${Math.round(o.z*d)}`,k[1]=`${Math.round(p.x*d)},${Math.round(p.y*d)},${Math.round(p.z*d)}`,k[2]=`${Math.round(q.x*d)},${Math.round(q.y*d)},${Math.round(q.z*d)}`,k[0]!==k[1]&&k[1]!==k[2]&&k[2]!==k[0])for(let r=0;r<3;r++){let s=(r+1)%3,t=k[r],u=k[s],v=iB[j[r]],w=iB[j[s]],x=`${t}_${u}`,y=`${u}_${t}`;y in l&&l[y]?(iA.dot(l[y].normal)<=e&&(m.push(v.x,v.y,v.z),m.push(w.x,w.y,w.z)),l[y]=null):x in l||(l[x]={index0:i[r],index1:i[s],normal:iA.clone()})}}for(let z in l)if(l[z]){let{index0:A,index1:B}=l[z];iy.fromBufferAttribute(g,A),iz.fromBufferAttribute(g,B),m.push(iy.x,iy.y,iy.z),m.push(iz.x,iz.y,iz.z)}this.setAttribute("position",new d7(m,3))}}}class iD extends iq{constructor(a){super(a),this.uuid=cb(),this.type="Shape",this.holes=[]}getPointsHoles(a){let b=[];for(let c=0,d=this.holes.length;c<d;c++)b[c]=this.holes[c].getPoints(a);return b}extractPoints(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}}copy(a){super.copy(a),this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.uuid=this.uuid,a.holes=[];for(let b=0,c=this.holes.length;b<c;b++){let d=this.holes[b];a.holes.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.uuid=a.uuid,this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(new iq().fromJSON(d))}return this}}let iE={triangulate:function(a,b,c=2){let d=b&&b.length,e=d?b[0]*c:a.length,f=iF(a,0,e,c,!0),g=[];if(!f||f.next===f.prev)return g;let h,i,j,k,l,m,n;if(d&&(f=iM(a,b,f,c)),a.length>80*c){h=j=a[0],i=k=a[1];for(let o=c;o<e;o+=c)l=a[o],m=a[o+1],l<h&&(h=l),m<i&&(i=m),l>j&&(j=l),m>k&&(k=m);n=0!==(n=Math.max(j-h,k-i))?1/n:0}return iH(f,g,c,h,i,n),g}};function iF(a,b,c,d,e){let f,g;if(e===i7(a,b,c,d)>0)for(f=b;f<c;f+=d)g=i4(f,a[f],a[f+1],g);else for(f=c-d;f>=b;f-=d)g=i4(f,a[f],a[f+1],g);return g&&iY(g,g.next)&&(i5(g),g=g.next),g}function iG(a,b){if(!a)return a;b||(b=a);let c=a,d;do if(d=!1,!c.steiner&&(iY(c,c.next)||0===iX(c.prev,c,c.next))){if(i5(c),(c=b=c.prev)===c.next)break;d=!0}else c=c.next;while(d||c!==b);return b}function iH(a,b,c,d,e,f,g){if(!a)return;!g&&f&&iR(a,d,e,f);let h=a,i,j;for(;a.prev!==a.next;){if(i=a.prev,j=a.next,f?iJ(a,d,e,f):iI(a)){b.push(i.i/c),b.push(a.i/c),b.push(j.i/c),i5(a),a=j.next,h=j.next;continue}if((a=j)===h){g?1===g?(a=iK(iG(a),b,c),iH(a,b,c,d,e,f,2)):2===g&&iL(a,b,c,d,e,f):iH(iG(a),b,c,d,e,f,1);break}}}function iI(a){let b=a.prev,c=a,d=a.next;if(iX(b,c,d)>=0)return!1;let e=a.next.next;for(;e!==a.prev;){if(iV(b.x,b.y,c.x,c.y,d.x,d.y,e.x,e.y)&&iX(e.prev,e,e.next)>=0)return!1;e=e.next}return!0}function iJ(a,b,c,d){let e=a.prev,f=a,g=a.next;if(iX(e,f,g)>=0)return!1;let h=e.x<f.x?e.x<g.x?e.x:g.x:f.x<g.x?f.x:g.x,i=e.y<f.y?e.y<g.y?e.y:g.y:f.y<g.y?f.y:g.y,j=e.x>f.x?e.x>g.x?e.x:g.x:f.x>g.x?f.x:g.x,k=e.y>f.y?e.y>g.y?e.y:g.y:f.y>g.y?f.y:g.y,l=iT(h,i,b,c,d),m=iT(j,k,b,c,d),n=a.prevZ,o=a.nextZ;for(;n&&n.z>=l&&o&&o.z<=m;){if(n!==a.prev&&n!==a.next&&iV(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&iX(n.prev,n,n.next)>=0||(n=n.prevZ,o!==a.prev&&o!==a.next&&iV(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&iX(o.prev,o,o.next)>=0))return!1;o=o.nextZ}for(;n&&n.z>=l;){if(n!==a.prev&&n!==a.next&&iV(e.x,e.y,f.x,f.y,g.x,g.y,n.x,n.y)&&iX(n.prev,n,n.next)>=0)return!1;n=n.prevZ}for(;o&&o.z<=m;){if(o!==a.prev&&o!==a.next&&iV(e.x,e.y,f.x,f.y,g.x,g.y,o.x,o.y)&&iX(o.prev,o,o.next)>=0)return!1;o=o.nextZ}return!0}function iK(a,b,c){let d=a;do{let e=d.prev,f=d.next.next;!iY(e,f)&&iZ(e,d,d.next,f)&&i1(e,f)&&i1(f,e)&&(b.push(e.i/c),b.push(d.i/c),b.push(f.i/c),i5(d),i5(d.next),d=a=f),d=d.next}while(d!==a);return iG(d)}function iL(a,b,c,d,e,f){let g=a;do{let h=g.next.next;for(;h!==g.prev;){if(g.i!==h.i&&iW(g,h)){let i=i3(g,h);g=iG(g,g.next),i=iG(i,i.next),iH(g,b,c,d,e,f),iH(i,b,c,d,e,f);return}h=h.next}g=g.next}while(g!==a)}function iM(a,b,c,d){let e=[],f,g,h,i,j;for(f=0,g=b.length;f<g;f++)h=b[f]*d,i=f<g-1?b[f+1]*d:a.length,j=iF(a,h,i,d,!1),j===j.next&&(j.steiner=!0),e.push(iU(j));for(e.sort(iN),f=0;f<e.length;f++)iO(e[f],c),c=iG(c,c.next);return c}function iN(a,b){return a.x-b.x}function iO(a,b){if(b=iP(a,b)){let c=i3(b,a);iG(b,b.next),iG(c,c.next)}}function iP(a,b){let c=b,d=a.x,e=a.y,f=-1/0,g;do{if(e<=c.y&&e>=c.next.y&&c.next.y!==c.y){let h=c.x+(e-c.y)*(c.next.x-c.x)/(c.next.y-c.y);if(h<=d&&h>f){if(f=h,h===d){if(e===c.y)return c;if(e===c.next.y)return c.next}g=c.x<c.next.x?c:c.next}}c=c.next}while(c!==b);if(!g)return null;if(d===f)return g;let i=g,j=g.x,k=g.y,l=1/0,m;c=g;do d>=c.x&&c.x>=j&&d!==c.x&&iV(e<k?d:f,e,j,k,e<k?f:d,e,c.x,c.y)&&(m=Math.abs(e-c.y)/(d-c.x),i1(c,a)&&(m<l||m===l&&(c.x>g.x||c.x===g.x&&iQ(g,c)))&&(g=c,l=m)),c=c.next;while(c!==i);return g}function iQ(a,b){return 0>iX(a.prev,a,b.prev)&&0>iX(b.next,a,a.next)}function iR(a,b,c,d){let e=a;do null===e.z&&(e.z=iT(e.x,e.y,b,c,d)),e.prevZ=e.prev,e.nextZ=e.next,e=e.next;while(e!==a);e.prevZ.nextZ=null,e.prevZ=null,iS(e)}function iS(a){let b,c,d,e,f,g,h,i,j=1;do{for(c=a,a=null,f=null,g=0;c;){for(g++,d=c,h=0,b=0;b<j&&(h++,d=d.nextZ);b++);for(i=j;h>0||i>0&&d;)0!==h&&(0===i||!d||c.z<=d.z)?(e=c,c=c.nextZ,h--):(e=d,d=d.nextZ,i--),f?f.nextZ=e:a=e,e.prevZ=f,f=e;c=d}f.nextZ=null,j*=2}while(g>1);return a}function iT(a,b,c,d,e){return a=32767*(a-c)*e,b=32767*(b-d)*e,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,b=(b|b<<8)&16711935,b=(b|b<<4)&252645135,b=(b|b<<2)&858993459,b=(b|b<<1)&1431655765,a|b<<1}function iU(a){let b=a,c=a;do(b.x<c.x||b.x===c.x&&b.y<c.y)&&(c=b),b=b.next;while(b!==a);return c}function iV(a,b,c,d,e,f,g,h){return(e-g)*(b-h)-(a-g)*(f-h)>=0&&(a-g)*(d-h)-(c-g)*(b-h)>=0&&(c-g)*(f-h)-(e-g)*(d-h)>=0}function iW(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!i0(a,b)&&(i1(a,b)&&i1(b,a)&&i2(a,b)&&(iX(a.prev,a,b.prev)||iX(a,b.prev,b))||iY(a,b)&&iX(a.prev,a,a.next)>0&&iX(b.prev,b,b.next)>0)}function iX(a,b,c){return(b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y)}function iY(a,b){return a.x===b.x&&a.y===b.y}function iZ(a,b,c,d){let e=i_(iX(a,b,c)),f=i_(iX(a,b,d)),g=i_(iX(c,d,a)),h=i_(iX(c,d,b));return!!(e!==f&&g!==h||0===e&&i$(a,c,b)||0===f&&i$(a,d,b)||0===g&&i$(c,a,d)||0===h&&i$(c,b,d))}function i$(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}function i_(a){return a>0?1:a<0?-1:0}function i0(a,b){let c=a;do{if(c.i!==a.i&&c.next.i!==a.i&&c.i!==b.i&&c.next.i!==b.i&&iZ(c,c.next,a,b))return!0;c=c.next}while(c!==a);return!1}function i1(a,b){return 0>iX(a.prev,a,a.next)?iX(a,b,a.next)>=0&&iX(a,a.prev,b)>=0:0>iX(a,b,a.prev)||0>iX(a,a.next,b)}function i2(a,b){let c=a,d=!1,e=(a.x+b.x)/2,f=(a.y+b.y)/2;do c.y>f!=c.next.y>f&&c.next.y!==c.y&&e<(c.next.x-c.x)*(f-c.y)/(c.next.y-c.y)+c.x&&(d=!d),c=c.next;while(c!==a);return d}function i3(a,b){let c=new i6(a.i,a.x,a.y),d=new i6(b.i,b.x,b.y),e=a.next,f=b.prev;return a.next=b,b.prev=a,c.next=e,e.prev=c,d.next=c,c.prev=d,f.next=d,d.prev=f,d}function i4(a,b,c,d){let e=new i6(a,b,c);return d?(e.next=d.next,e.prev=d,d.next.prev=e,d.next=e):(e.prev=e,e.next=e),e}function i5(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function i6(a,b,c){this.i=a,this.x=b,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function i7(a,b,c,d){let e=0;for(let f=b,g=c-d;f<c;f+=d)e+=(a[g]-a[f])*(a[f+1]+a[g+1]),g=f;return e}class i8{static area(a){let b=a.length,c=0;for(let d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return .5*c}static isClockWise(a){return 0>i8.area(a)}static triangulateShape(a,b){let c=[],d=[],e=[];i9(a),ja(c,a);let f=a.length;b.forEach(i9);for(let g=0;g<b.length;g++)d.push(f),f+=b[g].length,ja(c,b[g]);let h=iE.triangulate(c,d);for(let i=0;i<h.length;i+=3)e.push(h.slice(i,i+3));return e}}function i9(a){let b=a.length;b>2&&a[b-1].equals(a[0])&&a.pop()}function ja(a,b){for(let c=0;c<b.length;c++)a.push(b[c].x),a.push(b[c].y)}class jb extends eg{constructor(a=new iD([new cl(.5,.5),new cl(-.5,.5),new cl(-.5,-.5),new cl(.5,-.5)]),b={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:a,options:b},a=Array.isArray(a)?a:[a];let c=this,d=[],e=[];for(let f=0,g=a.length;f<g;f++){let h=a[f];i(h)}function i(a){let f=[],g=void 0!==b.curveSegments?b.curveSegments:12,h=void 0!==b.steps?b.steps:1,i=void 0!==b.depth?b.depth:1,j=void 0===b.bevelEnabled||b.bevelEnabled,k=void 0!==b.bevelThickness?b.bevelThickness:.2,l=void 0!==b.bevelSize?b.bevelSize:k-.1,m=void 0!==b.bevelOffset?b.bevelOffset:0,n=void 0!==b.bevelSegments?b.bevelSegments:3,o=b.extrudePath,p=void 0!==b.UVGenerator?b.UVGenerator:jc;void 0!==b.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),i=b.amount);let q,r=!1,s,t,u,v;o&&(q=o.getSpacedPoints(h),r=!0,j=!1,s=o.computeFrenetFrames(h,!1),t=new cQ,u=new cQ,v=new cQ),j||(n=0,k=0,l=0,m=0);let w=a.extractPoints(g),x=w.shape,y=w.holes,z=!i8.isClockWise(x);if(z){x=x.reverse();for(let A=0,B=y.length;A<B;A++){let C=y[A];i8.isClockWise(C)&&(y[A]=C.reverse())}}let D=i8.triangulateShape(x,y),E=x;for(let F=0,G=y.length;F<G;F++){let H=y[F];x=x.concat(H)}function I(a,b,c){return b||console.error("THREE.ExtrudeGeometry: vec does not exist"),b.clone().multiplyScalar(c).add(a)}let J=x.length,K=D.length;function L(a,b,c){let d,e,f,g=a.x-b.x,h=a.y-b.y,i=c.x-a.x,j=c.y-a.y,k=g*g+h*h,l=g*j-h*i;if(Math.abs(l)>Number.EPSILON){let m=Math.sqrt(k),n=Math.sqrt(i*i+j*j),o=b.x-h/m,p=b.y+g/m,q=c.x-j/n,r=c.y+i/n,s=((q-o)*j-(r-p)*i)/(g*j-h*i);d=o+g*s-a.x,e=p+h*s-a.y;let t=d*d+e*e;if(t<=2)return new cl(d,e);f=Math.sqrt(t/2)}else{let u=!1;g>Number.EPSILON?i>Number.EPSILON&&(u=!0):g<-Number.EPSILON?i<-Number.EPSILON&&(u=!0):Math.sign(h)===Math.sign(j)&&(u=!0),u?(d=-h,e=g,f=Math.sqrt(k)):(d=g,e=h,f=Math.sqrt(k/2))}return new cl(d/f,e/f)}let M=[];for(let N=0,O=E.length,P=O-1,Q=N+1;N<O;N++,P++,Q++)P===O&&(P=0),Q===O&&(Q=0),M[N]=L(E[N],E[P],E[Q]);let R=[],S,T=M.concat();for(let U=0,V=y.length;U<V;U++){let W=y[U];S=[];for(let X=0,Y=W.length,Z=Y-1,$=X+1;X<Y;X++,Z++,$++)Z===Y&&(Z=0),$===Y&&($=0),S[X]=L(W[X],W[Z],W[$]);R.push(S),T=T.concat(S)}for(let _=0;_<n;_++){let aa=_/n,ab=k*Math.cos(aa*Math.PI/2),ac=l*Math.sin(aa*Math.PI/2)+m;for(let ad=0,ae=E.length;ad<ae;ad++){let af=I(E[ad],M[ad],ac);aG(af.x,af.y,-ab)}for(let ag=0,ah=y.length;ag<ah;ag++){let ai=y[ag];S=R[ag];for(let aj=0,ak=ai.length;aj<ak;aj++){let al=I(ai[aj],S[aj],ac);aG(al.x,al.y,-ab)}}}let am=l+m;for(let an=0;an<J;an++){let ao=j?I(x[an],T[an],am):x[an];r?(u.copy(s.normals[0]).multiplyScalar(ao.x),t.copy(s.binormals[0]).multiplyScalar(ao.y),v.copy(q[0]).add(u).add(t),aG(v.x,v.y,v.z)):aG(ao.x,ao.y,0)}for(let ap=1;ap<=h;ap++)for(let aq=0;aq<J;aq++){let ar=j?I(x[aq],T[aq],am):x[aq];r?(u.copy(s.normals[ap]).multiplyScalar(ar.x),t.copy(s.binormals[ap]).multiplyScalar(ar.y),v.copy(q[ap]).add(u).add(t),aG(v.x,v.y,v.z)):aG(ar.x,ar.y,i/h*ap)}for(let as=n-1;as>=0;as--){let at=as/n,au=k*Math.cos(at*Math.PI/2),av=l*Math.sin(at*Math.PI/2)+m;for(let aw=0,ax=E.length;aw<ax;aw++){let ay=I(E[aw],M[aw],av);aG(ay.x,ay.y,i+au)}for(let az=0,aA=y.length;az<aA;az++){let aB=y[az];S=R[az];for(let aC=0,aD=aB.length;aC<aD;aC++){let aE=I(aB[aC],S[aC],av);r?aG(aE.x,aE.y+q[h-1].y,q[h-1].x+au):aG(aE.x,aE.y,i+au)}}}function aF(a,b){let c=a.length;for(;--c>=0;){let d=c,e=c-1;e<0&&(e=a.length-1);for(let f=0,g=h+2*n;f<g;f++){let i=J*f,j=J*(f+1),k=b+d+i,l=b+e+i,m=b+e+j,o=b+d+j;aI(k,l,m,o)}}}function aG(a,b,c){f.push(a),f.push(b),f.push(c)}function aH(a,b,e){aJ(a),aJ(b),aJ(e);let f=d.length/3,g=p.generateTopUV(c,d,f-3,f-2,f-1);aK(g[0]),aK(g[1]),aK(g[2])}function aI(a,b,e,f){aJ(a),aJ(b),aJ(f),aJ(b),aJ(e),aJ(f);let g=d.length/3,h=p.generateSideWallUV(c,d,g-6,g-3,g-2,g-1);aK(h[0]),aK(h[1]),aK(h[3]),aK(h[1]),aK(h[2]),aK(h[3])}function aJ(a){d.push(f[3*a+0]),d.push(f[3*a+1]),d.push(f[3*a+2])}function aK(a){e.push(a.x),e.push(a.y)}(function(){let a=d.length/3;if(j){let b=0,e=J*b;for(let f=0;f<K;f++){let g=D[f];aH(g[2]+e,g[1]+e,g[0]+e)}e=J*(b=h+2*n);for(let i=0;i<K;i++){let k=D[i];aH(k[0]+e,k[1]+e,k[2]+e)}}else{for(let l=0;l<K;l++){let m=D[l];aH(m[2],m[1],m[0])}for(let o=0;o<K;o++){let p=D[o];aH(p[0]+J*h,p[1]+J*h,p[2]+J*h)}}c.addGroup(a,d.length/3-a,0)})(),function(){let a=d.length/3,b=0;aF(E,b),b+=E.length;for(let e=0,f=y.length;e<f;e++){let g=y[e];aF(g,b),b+=g.length}c.addGroup(a,d.length/3-a,1)}()}this.setAttribute("position",new d7(d,3)),this.setAttribute("uv",new d7(e,2)),this.computeVertexNormals()}toJSON(){let a=super.toJSON(),b=this.parameters.shapes,c=this.parameters.options;return jd(b,c,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}let g=a.options.extrudePath;return void 0!==g&&(a.options.extrudePath=new io[g.type]().fromJSON(g)),new jb(c,a.options)}}let jc={generateTopUV:function(a,b,c,d,e){let f=b[3*c],g=b[3*c+1],h=b[3*d],i=b[3*d+1],j=b[3*e],k=b[3*e+1];return[new cl(f,g),new cl(h,i),new cl(j,k)]},generateSideWallUV:function(a,b,c,d,e,f){let g=b[3*c],h=b[3*c+1],i=b[3*c+2],j=b[3*d],k=b[3*d+1],l=b[3*d+2],m=b[3*e],n=b[3*e+1],o=b[3*e+2],p=b[3*f],q=b[3*f+1],r=b[3*f+2];return Math.abs(h-k)<Math.abs(g-j)?[new cl(g,1-i),new cl(j,1-l),new cl(m,1-o),new cl(p,1-r)]:[new cl(h,1-i),new cl(k,1-l),new cl(n,1-o),new cl(q,1-r)]}};function jd(a,b,c){if(c.shapes=[],Array.isArray(a))for(let d=0,e=a.length;d<e;d++){let f=a[d];c.shapes.push(f.uuid)}else c.shapes.push(a.uuid);return void 0!==b.extrudePath&&(c.options.extrudePath=b.extrudePath.toJSON()),c}class je extends iw{constructor(a=1,b=0){let c=(1+Math.sqrt(5))/2;super([-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],a,b),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new je(a.radius,a.detail)}}class jf extends iw{constructor(a=1,b=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new jf(a.radius,a.detail)}}class jg extends eg{constructor(a=.5,b=1,c=8,d=1,e=0,f=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},c=Math.max(3,c),d=Math.max(1,d);let g=[],h=[],i=[],j=[],k=a,l=(b-a)/d,m=new cQ,n=new cl;for(let o=0;o<=d;o++){for(let p=0;p<=c;p++){let q=e+p/c*f;m.x=k*Math.cos(q),m.y=k*Math.sin(q),h.push(m.x,m.y,m.z),i.push(0,0,1),n.x=(m.x/b+1)/2,n.y=(m.y/b+1)/2,j.push(n.x,n.y)}k+=l}for(let r=0;r<d;r++){let s=r*(c+1);for(let t=0;t<c;t++){let u=t+s,v=u,w=u+c+1,x=u+c+2,y=u+1;g.push(v,w,y),g.push(w,x,y)}}this.setIndex(g),this.setAttribute("position",new d7(h,3)),this.setAttribute("normal",new d7(i,3)),this.setAttribute("uv",new d7(j,2))}static fromJSON(a){return new jg(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)}}class jh extends eg{constructor(a=new iD([new cl(0,.5),new cl(-.5,-.5),new cl(.5,-.5)]),b=12){super(),this.type="ShapeGeometry",this.parameters={shapes:a,curveSegments:b};let c=[],d=[],e=[],f=[],g=0,h=0;if(!1===Array.isArray(a))j(a);else for(let i=0;i<a.length;i++)j(a[i]),this.addGroup(g,h,i),g+=h,h=0;function j(a){let g=d.length/3,i=a.extractPoints(b),j=i.shape,k=i.holes;!1===i8.isClockWise(j)&&(j=j.reverse());for(let l=0,m=k.length;l<m;l++){let n=k[l];!0===i8.isClockWise(n)&&(k[l]=n.reverse())}let o=i8.triangulateShape(j,k);for(let p=0,q=k.length;p<q;p++){let r=k[p];j=j.concat(r)}for(let s=0,t=j.length;s<t;s++){let u=j[s];d.push(u.x,u.y,0),e.push(0,0,1),f.push(u.x,u.y)}for(let v=0,w=o.length;v<w;v++){let x=o[v],y=x[0]+g,z=x[1]+g,A=x[2]+g;c.push(y,z,A),h+=3}}this.setIndex(c),this.setAttribute("position",new d7(d,3)),this.setAttribute("normal",new d7(e,3)),this.setAttribute("uv",new d7(f,2))}toJSON(){let a=super.toJSON(),b=this.parameters.shapes;return ji(b,a)}static fromJSON(a,b){let c=[];for(let d=0,e=a.shapes.length;d<e;d++){let f=b[a.shapes[d]];c.push(f)}return new jh(c,a.curveSegments)}}function ji(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class jj extends eg{constructor(a=1,b=32,c=16,d=0,e=2*Math.PI,f=0,g=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},b=Math.max(3,Math.floor(b)),c=Math.max(2,Math.floor(c));let h=Math.min(f+g,Math.PI),i=0,j=[],k=new cQ,l=new cQ,m=[],n=[],o=[],p=[];for(let q=0;q<=c;q++){let r=[],s=q/c,t=0;0==q&&0==f?t=.5/b:q==c&&h==Math.PI&&(t=-.5/b);for(let u=0;u<=b;u++){let v=u/b;k.x=-a*Math.cos(d+v*e)*Math.sin(f+s*g),k.y=a*Math.cos(f+s*g),k.z=a*Math.sin(d+v*e)*Math.sin(f+s*g),n.push(k.x,k.y,k.z),l.copy(k).normalize(),o.push(l.x,l.y,l.z),p.push(v+t,1-s),r.push(i++)}j.push(r)}for(let w=0;w<c;w++)for(let x=0;x<b;x++){let y=j[w][x+1],z=j[w][x],A=j[w+1][x],B=j[w+1][x+1];(0!==w||f>0)&&m.push(y,z,B),(w!==c-1||h<Math.PI)&&m.push(z,A,B)}this.setIndex(m),this.setAttribute("position",new d7(n,3)),this.setAttribute("normal",new d7(o,3)),this.setAttribute("uv",new d7(p,2))}static fromJSON(a){return new jj(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)}}class jk extends iw{constructor(a=1,b=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new jk(a.radius,a.detail)}}class jl extends eg{constructor(a=1,b=.4,c=8,d=6,e=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},c=Math.floor(c),d=Math.floor(d);let f=[],g=[],h=[],i=[],j=new cQ,k=new cQ,l=new cQ;for(let m=0;m<=c;m++)for(let n=0;n<=d;n++){let o=n/d*e,p=m/c*Math.PI*2;k.x=(a+b*Math.cos(p))*Math.cos(o),k.y=(a+b*Math.cos(p))*Math.sin(o),k.z=b*Math.sin(p),g.push(k.x,k.y,k.z),j.x=a*Math.cos(o),j.y=a*Math.sin(o),l.subVectors(k,j).normalize(),h.push(l.x,l.y,l.z),i.push(n/d),i.push(m/c)}for(let q=1;q<=c;q++)for(let r=1;r<=d;r++){let s=(d+1)*q+r-1,t=(d+1)*(q-1)+r-1,u=(d+1)*(q-1)+r,v=(d+1)*q+r;f.push(s,t,v),f.push(t,u,v)}this.setIndex(f),this.setAttribute("position",new d7(g,3)),this.setAttribute("normal",new d7(h,3)),this.setAttribute("uv",new d7(i,2))}static fromJSON(a){return new jl(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)}}class jm extends eg{constructor(a=1,b=.4,c=64,d=8,e=2,f=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},c=Math.floor(c),d=Math.floor(d);let g=[],h=[],i=[],j=[],k=new cQ,l=new cQ,m=new cQ,n=new cQ,o=new cQ,p=new cQ,q=new cQ;for(let r=0;r<=c;++r){let s=r/c*e*Math.PI*2;D(s,e,f,a,m),D(s+.01,e,f,a,n),p.subVectors(n,m),q.addVectors(n,m),o.crossVectors(p,q),q.crossVectors(o,p),o.normalize(),q.normalize();for(let t=0;t<=d;++t){let u=t/d*Math.PI*2,v=-b*Math.cos(u),w=b*Math.sin(u);k.x=m.x+(v*q.x+w*o.x),k.y=m.y+(v*q.y+w*o.y),k.z=m.z+(v*q.z+w*o.z),h.push(k.x,k.y,k.z),l.subVectors(k,m).normalize(),i.push(l.x,l.y,l.z),j.push(r/c),j.push(t/d)}}for(let x=1;x<=c;x++)for(let y=1;y<=d;y++){let z=(d+1)*(x-1)+(y-1),A=(d+1)*x+(y-1),B=(d+1)*x+y,C=(d+1)*(x-1)+y;g.push(z,A,C),g.push(A,B,C)}function D(a,b,c,d,e){let f=c/b*a,g=Math.cos(f);e.x=d*(2+g)*.5*Math.cos(a),e.y=d*(2+g)*Math.sin(a)*.5,e.z=d*Math.sin(f)*.5}this.setIndex(g),this.setAttribute("position",new d7(h,3)),this.setAttribute("normal",new d7(i,3)),this.setAttribute("uv",new d7(j,2))}static fromJSON(a){return new jm(a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q)}}class jn extends eg{constructor(a=new il(new cQ(-1,-1,0),new cQ(-1,1,0),new cQ(1,1,0)),b=64,c=1,d=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:b,radius:c,radialSegments:d,closed:e};let f=a.computeFrenetFrames(b,e);this.tangents=f.tangents,this.normals=f.normals,this.binormals=f.binormals;let g=new cQ,h=new cQ,i=new cl,j=new cQ,k=[],l=[],m=[],n=[];function o(e){j=a.getPointAt(e/b,j);let i=f.normals[e],m=f.binormals[e];for(let n=0;n<=d;n++){let o=n/d*Math.PI*2,p=Math.sin(o),q=-Math.cos(o);h.x=q*i.x+p*m.x,h.y=q*i.y+p*m.y,h.z=q*i.z+p*m.z,h.normalize(),l.push(h.x,h.y,h.z),g.x=j.x+c*h.x,g.y=j.y+c*h.y,g.z=j.z+c*h.z,k.push(g.x,g.y,g.z)}}function p(){for(let a=1;a<=b;a++)for(let c=1;c<=d;c++){let e=(d+1)*(a-1)+(c-1),f=(d+1)*a+(c-1),g=(d+1)*a+c,h=(d+1)*(a-1)+c;n.push(e,f,h),n.push(f,g,h)}}function q(){for(let a=0;a<=b;a++)for(let c=0;c<=d;c++)i.x=a/b,i.y=c/d,m.push(i.x,i.y)}(function(){for(let a=0;a<b;a++)o(a);o(!1===e?b:0),q(),p()})(),this.setIndex(n),this.setAttribute("position",new d7(k,3)),this.setAttribute("normal",new d7(l,3)),this.setAttribute("uv",new d7(m,2))}toJSON(){let a=super.toJSON();return a.path=this.parameters.path.toJSON(),a}static fromJSON(a){return new jn(new io[a.path.type]().fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed)}}class jo extends eg{constructor(a=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:a},null!==a){let b=[],c=new Set,d=new cQ,e=new cQ;if(null!==a.index){let f=a.attributes.position,g=a.index,h=a.groups;0===h.length&&(h=[{start:0,count:g.count,materialIndex:0}]);for(let i=0,j=h.length;i<j;++i){let k=h[i],l=k.start,m=k.count;for(let n=l,o=l+m;n<o;n+=3)for(let p=0;p<3;p++){let q=g.getX(n+p),r=g.getX(n+(p+1)%3);d.fromBufferAttribute(f,q),e.fromBufferAttribute(f,r),!0===jp(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}}else{let s=a.attributes.position;for(let t=0,u=s.count/3;t<u;t++)for(let v=0;v<3;v++){let w=3*t+v,x=3*t+(v+1)%3;d.fromBufferAttribute(s,w),e.fromBufferAttribute(s,x),!0===jp(d,e,c)&&(b.push(d.x,d.y,d.z),b.push(e.x,e.y,e.z))}}this.setAttribute("position",new d7(b,3))}}}function jp(a,b,c){let d=`${a.x},${a.y},${a.z}-${b.x},${b.y},${b.z}`,e=`${b.x},${b.y},${b.z}-${a.x},${a.y},${a.z}`;return!0!==c.has(d)&&!0!==c.has(e)&&(c.add(d),c.add(e),!0)}var jq=Object.freeze({__proto__:null,BoxGeometry:eA,BoxBufferGeometry:eA,CapsuleGeometry:is,CapsuleBufferGeometry:is,CircleGeometry:it,CircleBufferGeometry:it,ConeGeometry:iv,ConeBufferGeometry:iv,CylinderGeometry:iu,CylinderBufferGeometry:iu,DodecahedronGeometry:ix,DodecahedronBufferGeometry:ix,EdgesGeometry:iC,ExtrudeGeometry:jb,ExtrudeBufferGeometry:jb,IcosahedronGeometry:je,IcosahedronBufferGeometry:je,LatheGeometry:ir,LatheBufferGeometry:ir,OctahedronGeometry:jf,OctahedronBufferGeometry:jf,PlaneGeometry:eT,PlaneBufferGeometry:eT,PolyhedronGeometry:iw,PolyhedronBufferGeometry:iw,RingGeometry:jg,RingBufferGeometry:jg,ShapeGeometry:jh,ShapeBufferGeometry:jh,SphereGeometry:jj,SphereBufferGeometry:jj,TetrahedronGeometry:jk,TetrahedronBufferGeometry:jk,TorusGeometry:jl,TorusBufferGeometry:jl,TorusKnotGeometry:jm,TorusKnotBufferGeometry:jm,TubeGeometry:jn,TubeBufferGeometry:jn,WireframeGeometry:jo});class jr extends dW{constructor(a){super(),this.type="ShadowMaterial",this.color=new cB(0),this.transparent=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this}}jr.prototype.isShadowMaterial=!0;class js extends eE{constructor(a){super(a),this.type="RawShaderMaterial"}}js.prototype.isRawShaderMaterial=!0;class jt extends dW{constructor(a){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new cB(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cB(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bA,this.normalScale=new cl(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this}}jt.prototype.isMeshStandardMaterial=!0;class ju extends jt{constructor(a){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new cl(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return cc(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.sheenColor=new cB(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new cB(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new cB(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(a)}get sheen(){return this._sheen}set sheen(a){this._sheen>0!=a>0&&this.version++,this._sheen=a}get clearcoat(){return this._clearcoat}set clearcoat(a){this._clearcoat>0!=a>0&&this.version++,this._clearcoat=a}get transmission(){return this._transmission}set transmission(a){this._transmission>0!=a>0&&this.version++,this._transmission=a}copy(a){return super.copy(a),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.ior=a.ior,this.sheen=a.sheen,this.sheenColor.copy(a.sheenColor),this.sheenColorMap=a.sheenColorMap,this.sheenRoughness=a.sheenRoughness,this.sheenRoughnessMap=a.sheenRoughnessMap,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this.thickness=a.thickness,this.thicknessMap=a.thicknessMap,this.attenuationDistance=a.attenuationDistance,this.attenuationColor.copy(a.attenuationColor),this.specularIntensity=a.specularIntensity,this.specularIntensityMap=a.specularIntensityMap,this.specularColor.copy(a.specularColor),this.specularColorMap=a.specularColorMap,this}}ju.prototype.isMeshPhysicalMaterial=!0;class jv extends dW{constructor(a){super(),this.type="MeshPhongMaterial",this.color=new cB(16777215),this.specular=new cB(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cB(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bA,this.normalScale=new cl(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this}}jv.prototype.isMeshPhongMaterial=!0;class jw extends dW{constructor(a){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new cB(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cB(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bA,this.normalScale=new cl(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.gradientMap=a.gradientMap,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}jw.prototype.isMeshToonMaterial=!0;class jx extends dW{constructor(a){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bA,this.normalScale=new cl(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.flatShading=a.flatShading,this}}jx.prototype.isMeshNormalMaterial=!0;class jy extends dW{constructor(a){super(),this.type="MeshLambertMaterial",this.color=new cB(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new cB(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=X,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this}}jy.prototype.isMeshLambertMaterial=!0;class jz extends dW{constructor(a){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new cB(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=bA,this.normalScale=new cl(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.flatShading=a.flatShading,this}}jz.prototype.isMeshMatcapMaterial=!0;class jA extends hJ{constructor(a){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}copy(a){return super.copy(a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this}}jA.prototype.isLineDashedMaterial=!0;let jB={ShadowMaterial:jr,SpriteMaterial:g9,RawShaderMaterial:js,ShaderMaterial:eE,PointsMaterial:hU,MeshPhysicalMaterial:ju,MeshStandardMaterial:jt,MeshPhongMaterial:jv,MeshToonMaterial:jw,MeshNormalMaterial:jx,MeshLambertMaterial:jy,MeshDepthMaterial:gQ,MeshDistanceMaterial:gR,MeshBasicMaterial:dX,MeshMatcapMaterial:jz,LineDashedMaterial:jA,LineBasicMaterial:hJ,Material:dW};dW.fromType=function(a){return new jB[a]};let jC={arraySlice:function(a,b,c){return jC.isTypedArray(a)?new a.constructor(a.subarray(b,void 0!==c?c:a.length)):a.slice(b,c)},convertArray:function(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a},isTypedArray:function(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)},getKeyframeOrder:function(a){let b=a.length,c=Array(b);for(let d=0;d!==b;++d)c[d]=d;return c.sort(function(b,c){return a[b]-a[c]}),c},sortedArray:function(a,b,c){let d=a.length,e=new a.constructor(d);for(let f=0,g=0;g!==d;++f){let h=c[f]*b;for(let i=0;i!==b;++i)e[g++]=a[h+i]}return e},flattenJSON:function(a,b,c,d){let e=1,f=a[0];for(;void 0!==f&&void 0===f[d];)f=a[e++];if(void 0===f)return;let g=f[d];if(void 0!==g){if(Array.isArray(g))do void 0!==(g=f[d])&&(b.push(f.time),c.push.apply(c,g)),f=a[e++];while(void 0!==f);else if(void 0!==g.toArray)do void 0!==(g=f[d])&&(b.push(f.time),g.toArray(c,c.length)),f=a[e++];while(void 0!==f);else do void 0!==(g=f[d])&&(b.push(f.time),c.push(g)),f=a[e++];while(void 0!==f)}},subclip:function(a,b,c,d,e=30){let f=a.clone();f.name=b;let g=[];for(let h=0;h<f.tracks.length;++h){let i=f.tracks[h],j=i.getValueSize(),k=[],l=[];for(let m=0;m<i.times.length;++m){let n=i.times[m]*e;if(!(n<c)&&!(n>=d)){k.push(i.times[m]);for(let o=0;o<j;++o)l.push(i.values[m*j+o])}}0!==k.length&&(i.times=jC.convertArray(k,i.times.constructor),i.values=jC.convertArray(l,i.values.constructor),g.push(i))}f.tracks=g;let p=1/0;for(let q=0;q<f.tracks.length;++q)p>f.tracks[q].times[0]&&(p=f.tracks[q].times[0]);for(let r=0;r<f.tracks.length;++r)f.tracks[r].shift(-1*p);return f.resetDuration(),f},makeClipAdditive:function(a,b=0,c=a,d=30){d<=0&&(d=30);let e=c.tracks.length,f=b/d;for(let g=0;g<e;++g){let h=c.tracks[g],i=h.ValueTypeName;if("bool"===i||"string"===i)continue;let j=a.tracks.find(function(a){return a.name===h.name&&a.ValueTypeName===i});if(void 0===j)continue;let k=0,l=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(k=l/3);let m=0,n=j.getValueSize();j.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=n/3);let o=h.times.length-1,p;if(f<=h.times[0]){let q=k,r=l-k;p=jC.arraySlice(h.values,q,r)}else if(f>=h.times[o]){let s=o*l+k,t=s+l-k;p=jC.arraySlice(h.values,s,t)}else{let u=h.createInterpolant(),v=k,w=l-k;u.evaluate(f),p=jC.arraySlice(u.resultBuffer,v,w)}if("quaternion"===i){let x=new cP().fromArray(p).normalize().conjugate();x.toArray(p)}let y=j.times.length;for(let z=0;z<y;++z){let A=z*n+m;if("quaternion"===i)cP.multiplyQuaternionsFlat(j.values,A,p,0,j.values,A);else{let B=n-2*m;for(let C=0;C<B;++C)j.values[A+C]-=p[C]}}}return a.blendMode=bs,a}};class jD{constructor(a,b,c,d){this.parameterPositions=a,this._cachedIndex=0,this.resultBuffer=void 0!==d?d:new b.constructor(c),this.sampleValues=b,this.valueSize=c,this.settings=null,this.DefaultSettings_={}}evaluate(a){let b=this.parameterPositions,c=this._cachedIndex,d=b[c],e=b[c-1];validate_interval:{seek:{let f;linear_scan:{forward_scan:if(!(a<d)){for(let g=c+2;;){if(void 0===d){if(a<e)break forward_scan;return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,a,e)}if(c===g)break;if(e=d,a<(d=b[++c]))break seek}f=b.length;break linear_scan}if(!(a>=e)){let h=b[1];a<h&&(c=2,e=h);for(let i=c-2;;){if(void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(c===i)break;if(d=e,a>=(e=b[--c-1]))break seek}f=c,c=0;break linear_scan}break validate_interval}for(;c<f;){let j=c+f>>>1;a<b[j]?f=j:c=j+1}if(d=b[c],e=b[c-1],void 0===e)return this._cachedIndex=0,this.beforeStart_(0,a,d);if(void 0===d)return c=b.length,this._cachedIndex=c,this.afterEnd_(c-1,e,a)}this._cachedIndex=c,this.intervalChanged_(c,e,d)}return this.interpolate_(c,e,a,d)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(a){let b=this.resultBuffer,c=this.sampleValues,d=this.valueSize,e=a*d;for(let f=0;f!==d;++f)b[f]=c[e+f];return b}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}jD.prototype.beforeStart_=jD.prototype.copySampleValue_,jD.prototype.afterEnd_=jD.prototype.copySampleValue_;class jE extends jD{constructor(a,b,c,d){super(a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:bo,endingEnd:bo}}intervalChanged_(a,b,c){let d=this.parameterPositions,e=a-2,f=a+1,g=d[e],h=d[f];if(void 0===g)switch(this.getSettings_().endingStart){case bp:e=a,g=2*b-c;break;case bq:e=d.length-2,g=b+d[e]-d[e+1];break;default:e=a,g=c}if(void 0===h)switch(this.getSettings_().endingEnd){case bp:f=a,h=2*c-b;break;case bq:f=1,h=c+d[1]-d[0];break;default:f=a-1,h=b}let i=(c-b)*.5,j=this.valueSize;this._weightPrev=i/(b-g),this._weightNext=i/(h-c),this._offsetPrev=e*j,this._offsetNext=f*j}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=this._offsetPrev,k=this._offsetNext,l=this._weightPrev,m=this._weightNext,n=(c-b)/(d-b),o=n*n,p=o*n,q=-l*p+2*l*o-l*n,r=(1+l)*p+(-1.5-2*l)*o+(-.5+l)*n+1,s=(-1-m)*p+(1.5+m)*o+.5*n,t=m*p-m*o;for(let u=0;u!==g;++u)e[u]=q*f[j+u]+r*f[i+u]+s*f[h+u]+t*f[k+u];return e}}class jF extends jD{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=a*g,i=h-g,j=(c-b)/(d-b),k=1-j;for(let l=0;l!==g;++l)e[l]=f[i+l]*k+f[h+l]*j;return e}}class jG extends jD{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a){return this.copySampleValue_(a-1)}}class jH{constructor(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=jC.convertArray(b,this.TimeBufferType),this.values=jC.convertArray(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}static toJSON(a){let b=a.constructor,c;if(b.toJSON!==this.toJSON)c=b.toJSON(a);else{c={name:a.name,times:jC.convertArray(a.times,Array),values:jC.convertArray(a.values,Array)};let d=a.getInterpolation();d!==a.DefaultInterpolation&&(c.interpolation=d)}return c.type=a.ValueTypeName,c}InterpolantFactoryMethodDiscrete(a){return new jG(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodLinear(a){return new jF(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodSmooth(a){return new jE(this.times,this.values,this.getValueSize(),a)}setInterpolation(a){let b;switch(a){case bl:b=this.InterpolantFactoryMethodDiscrete;break;case bm:b=this.InterpolantFactoryMethodLinear;break;case bn:b=this.InterpolantFactoryMethodSmooth}if(void 0===b){let c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(a!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(c)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=b,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return bl;case this.InterpolantFactoryMethodLinear:return bm;case this.InterpolantFactoryMethodSmooth:return bn}}getValueSize(){return this.values.length/this.times.length}shift(a){if(0!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]+=a}return this}scale(a){if(1!==a){let b=this.times;for(let c=0,d=b.length;c!==d;++c)b[c]*=a}return this}trim(a,b){let c=this.times,d=c.length,e=0,f=d-1;for(;e!==d&&c[e]<a;)++e;for(;-1!==f&&c[f]>b;)--f;if(++f,0!==e||f!==d){e>=f&&(e=(f=Math.max(f,1))-1);let g=this.getValueSize();this.times=jC.arraySlice(c,e,f),this.values=jC.arraySlice(this.values,e*g,f*g)}return this}validate(){let a=!0,b=this.getValueSize();b-Math.floor(b)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);let c=this.times,d=this.values,e=c.length;0===e&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let f=null;for(let g=0;g!==e;g++){let h=c[g];if("number"==typeof h&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,g,h),a=!1;break}if(null!==f&&f>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,g,h,f),a=!1;break}f=h}if(void 0!==d&&jC.isTypedArray(d))for(let i=0,j=d.length;i!==j;++i){let k=d[i];if(isNaN(k)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,k),a=!1;break}}return a}optimize(){let a=jC.arraySlice(this.times),b=jC.arraySlice(this.values),c=this.getValueSize(),d=this.getInterpolation()===bn,e=a.length-1,f=1;for(let g=1;g<e;++g){let h=!1,i=a[g],j=a[g+1];if(i!==j&&(1!==g||i!==a[0])){if(d)h=!0;else{let k=g*c,l=k-c,m=k+c;for(let n=0;n!==c;++n){let o=b[k+n];if(o!==b[l+n]||o!==b[m+n]){h=!0;break}}}}if(h){if(g!==f){a[f]=a[g];let p=g*c,q=f*c;for(let r=0;r!==c;++r)b[q+r]=b[p+r]}++f}}if(e>0){a[f]=a[e];for(let s=e*c,t=f*c,u=0;u!==c;++u)b[t+u]=b[s+u];++f}return f!==a.length?(this.times=jC.arraySlice(a,0,f),this.values=jC.arraySlice(b,0,f*c)):(this.times=a,this.values=b),this}clone(){let a=jC.arraySlice(this.times,0),b=jC.arraySlice(this.values,0),c=this.constructor,d=new c(this.name,a,b);return d.createInterpolant=this.createInterpolant,d}}jH.prototype.TimeBufferType=Float32Array,jH.prototype.ValueBufferType=Float32Array,jH.prototype.DefaultInterpolation=bm;class jI extends jH{}jI.prototype.ValueTypeName="bool",jI.prototype.ValueBufferType=Array,jI.prototype.DefaultInterpolation=bl,jI.prototype.InterpolantFactoryMethodLinear=void 0,jI.prototype.InterpolantFactoryMethodSmooth=void 0;class jJ extends jH{}jJ.prototype.ValueTypeName="color";class jK extends jH{}jK.prototype.ValueTypeName="number";class jL extends jD{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a,b,c,d){let e=this.resultBuffer,f=this.sampleValues,g=this.valueSize,h=(c-b)/(d-b),i=a*g;for(let j=i+g;i!==j;i+=4)cP.slerpFlat(e,0,f,i-g,f,i,h);return e}}class jM extends jH{InterpolantFactoryMethodLinear(a){return new jL(this.times,this.values,this.getValueSize(),a)}}jM.prototype.ValueTypeName="quaternion",jM.prototype.DefaultInterpolation=bm,jM.prototype.InterpolantFactoryMethodSmooth=void 0;class jN extends jH{}jN.prototype.ValueTypeName="string",jN.prototype.ValueBufferType=Array,jN.prototype.DefaultInterpolation=bl,jN.prototype.InterpolantFactoryMethodLinear=void 0,jN.prototype.InterpolantFactoryMethodSmooth=void 0;class jO extends jH{}jO.prototype.ValueTypeName="vector";class jP{constructor(a,b=-1,c,d=br){this.name=a,this.tracks=c,this.duration=b,this.blendMode=d,this.uuid=cb(),this.duration<0&&this.resetDuration()}static parse(a){let b=[],c=a.tracks,d=1/(a.fps||1);for(let e=0,f=c.length;e!==f;++e)b.push(jQ(c[e]).scale(d));let g=new this(a.name,a.duration,b,a.blendMode);return g.uuid=a.uuid,g}static toJSON(a){let b=[],c=a.tracks,d={name:a.name,duration:a.duration,tracks:b,uuid:a.uuid,blendMode:a.blendMode};for(let e=0,f=c.length;e!==f;++e)b.push(jH.toJSON(c[e]));return d}static CreateFromMorphTargetSequence(a,b,c,d){let e=b.length,f=[];for(let g=0;g<e;g++){let h=[],i=[];h.push((g+e-1)%e,g,(g+1)%e),i.push(0,1,0);let j=jC.getKeyframeOrder(h);h=jC.sortedArray(h,1,j),i=jC.sortedArray(i,1,j),d||0!==h[0]||(h.push(e),i.push(i[0])),f.push(new jK(".morphTargetInfluences["+b[g].name+"]",h,i).scale(1/c))}return new this(a,-1,f)}static findByName(a,b){let c=a;if(!Array.isArray(a)){let d=a;c=d.geometry&&d.geometry.animations||d.animations}for(let e=0;e<c.length;e++)if(c[e].name===b)return c[e];return null}static CreateClipsFromMorphTargetSequences(a,b,c){let d={},e=/^([\w-]*?)([\d]+)$/;for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.name.match(e);if(i&&i.length>1){let j=i[1],k=d[j];k||(d[j]=k=[]),k.push(h)}}let l=[];for(let m in d)l.push(this.CreateFromMorphTargetSequence(m,d[m],b,c));return l}static parseAnimation(a,b){if(!a)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let c=function(a,b,c,d,e){if(0!==c.length){let f=[],g=[];jC.flattenJSON(c,f,g,d),0!==f.length&&e.push(new a(b,f,g))}},d=[],e=a.name||"default",f=a.fps||30,g=a.blendMode,h=a.length||-1,i=a.hierarchy||[];for(let j=0;j<i.length;j++){let k=i[j].keys;if(k&&0!==k.length){if(k[0].morphTargets){let l={},m;for(m=0;m<k.length;m++)if(k[m].morphTargets)for(let n=0;n<k[m].morphTargets.length;n++)l[k[m].morphTargets[n]]=-1;for(let o in l){let p=[],q=[];for(let r=0;r!==k[m].morphTargets.length;++r){let s=k[m];p.push(s.time),q.push(s.morphTarget===o?1:0)}d.push(new jK(".morphTargetInfluence["+o+"]",p,q))}h=l.length*f}else{let t=".bones["+b[j].name+"]";c(jO,t+".position",k,"pos",d),c(jM,t+".quaternion",k,"rot",d),c(jO,t+".scale",k,"scl",d)}}}if(0===d.length)return null;let u=new this(e,h,d,g);return u}resetDuration(){let a=this.tracks,b=0;for(let c=0,d=a.length;c!==d;++c){let e=this.tracks[c];b=Math.max(b,e.times[e.times.length-1])}return this.duration=b,this}trim(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this}validate(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a}optimize(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}clone(){let a=[];for(let b=0;b<this.tracks.length;b++)a.push(this.tracks[b].clone());return new this.constructor(this.name,this.duration,a,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function jQ(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let b=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return jK;case"vector":case"vector2":case"vector3":case"vector4":return jO;case"color":return jJ;case"quaternion":return jM;case"bool":case"boolean":return jI;case"string":return jN}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){let c=[],d=[];jC.flattenJSON(a.keys,c,d,"value"),a.times=c,a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}let jR={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class jS{constructor(a,b,c){let d=this,e=!1,f=0,g=0,h,i=[];this.onStart=void 0,this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){g++,!1===e&&void 0!==d.onStart&&d.onStart(a,f,g),e=!0},this.itemEnd=function(a){f++,void 0!==d.onProgress&&d.onProgress(a,f,g),f===g&&(e=!1,void 0!==d.onLoad&&d.onLoad())},this.itemError=function(a){void 0!==d.onError&&d.onError(a)},this.resolveURL=function(a){return h?h(a):a},this.setURLModifier=function(a){return h=a,this},this.addHandler=function(a,b){return i.push(a,b),this},this.removeHandler=function(a){let b=i.indexOf(a);return-1!==b&&i.splice(b,2),this},this.getHandler=function(a){for(let b=0,c=i.length;b<c;b+=2){let d=i[b],e=i[b+1];if(d.global&&(d.lastIndex=0),d.test(a))return e}return null}}}let jT=new jS;class jU{constructor(a){this.manager=void 0!==a?a:jT,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(a,b){let c=this;return new Promise(function(d,e){c.load(a,d,b,e)})}parse(){}setCrossOrigin(a){return this.crossOrigin=a,this}setWithCredentials(a){return this.withCredentials=a,this}setPath(a){return this.path=a,this}setResourcePath(a){return this.resourcePath=a,this}setRequestHeader(a){return this.requestHeader=a,this}}let jV={};class jW extends jU{constructor(a){super(a)}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=jR.get(a);if(void 0!==e)return this.manager.itemStart(a),setTimeout(()=>{b&&b(e),this.manager.itemEnd(a)},0),e;if(void 0!==jV[a]){jV[a].push({onLoad:b,onProgress:c,onError:d});return}jV[a]=[],jV[a].push({onLoad:b,onProgress:c,onError:d});let f=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),g=this.mimeType,h=this.responseType;fetch(f).then(b=>{if(200===b.status||0===b.status){if(0===b.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===b.body||void 0===b.body.getReader)return b;let c=jV[a],d=b.body.getReader(),e=b.headers.get("Content-Length"),f=e?parseInt(e):0,g=0!==f,h=0,i=new ReadableStream({start(a){b();function b(){d.read().then(({done:d,value:e})=>{if(d)a.close();else{h+=e.byteLength;let i=new ProgressEvent("progress",{lengthComputable:g,loaded:h,total:f});for(let j=0,k=c.length;j<k;j++){let l=c[j];l.onProgress&&l.onProgress(i)}a.enqueue(e),b()}})}}});return new Response(i)}throw Error(`fetch for "${b.url}" responded with ${b.status}: ${b.statusText}`)}).then(a=>{switch(h){case"arraybuffer":return a.arrayBuffer();case"blob":return a.blob();case"document":return a.text().then(a=>{let b=new DOMParser;return b.parseFromString(a,g)});case"json":return a.json();default:if(void 0===g)return a.text();{let b=/charset="?([^;"\s]*)"?/i,c=b.exec(g),d=c&&c[1]?c[1].toLowerCase():void 0,e=new TextDecoder(d);return a.arrayBuffer().then(a=>e.decode(a))}}}).then(b=>{jR.add(a,b);let c=jV[a];delete jV[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onLoad&&f.onLoad(b)}}).catch(b=>{let c=jV[a];if(void 0===c)throw this.manager.itemError(a),b;delete jV[a];for(let d=0,e=c.length;d<e;d++){let f=c[d];f.onError&&f.onError(b)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}setResponseType(a){return this.responseType=a,this}setMimeType(a){return this.mimeType=a,this}}class jX extends jU{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new jW(this.manager);f.setPath(this.path),f.setRequestHeader(this.requestHeader),f.setWithCredentials(this.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b=[];for(let c=0;c<a.length;c++){let d=jP.parse(a[c]);b.push(d)}return b}}class jY extends jU{constructor(a){super(a)}load(a,b,c,d){let e=this,f=[],g=new h1,h=new jW(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(e.withCredentials);let i=0;function j(j){h.load(a[j],function(a){let c=e.parse(a,!0);f[j]={width:c.width,height:c.height,format:c.format,mipmaps:c.mipmaps},6===(i+=1)&&(1===c.mipmapCount&&(g.minFilter=as),g.image=f,g.format=c.format,g.needsUpdate=!0,b&&b(g))},c,d)}if(Array.isArray(a))for(let k=0,l=a.length;k<l;++k)j(k);else h.load(a,function(a){let c=e.parse(a,!0);if(c.isCubemap){let d=c.mipmaps.length/c.mipmapCount;for(let h=0;h<d;h++){f[h]={mipmaps:[]};for(let i=0;i<c.mipmapCount;i++)f[h].mipmaps.push(c.mipmaps[h*c.mipmapCount+i]),f[h].format=c.format,f[h].width=c.width,f[h].height=c.height}g.image=f}else g.image.width=c.width,g.image.height=c.height,g.mipmaps=c.mipmaps;1===c.mipmapCount&&(g.minFilter=as),g.format=c.format,g.needsUpdate=!0,b&&b(g)},c,d);return g}}class jZ extends jU{constructor(a){super(a)}load(a,b,c,d){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=jR.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g=cq("img");function h(){j(),jR.add(a,this),b&&b(this),e.manager.itemEnd(a)}function i(b){j(),d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}function j(){g.removeEventListener("load",h,!1),g.removeEventListener("error",i,!1)}return g.addEventListener("load",h,!1),g.addEventListener("error",i,!1),"data:"!==a.slice(0,5)&&void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),e.manager.itemStart(a),g.src=a,g}}class j$ extends jU{constructor(a){super(a)}load(a,b,c,d){let e=new eI,f=new jZ(this.manager);f.setCrossOrigin(this.crossOrigin),f.setPath(this.path);let g=0;function h(c){f.load(a[c],function(a){e.images[c]=a,6==++g&&(e.needsUpdate=!0,b&&b(e))},void 0,d)}for(let i=0;i<a.length;++i)h(i);return e}}class j_ extends jU{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new hz,g=new jW(this.manager);return g.setResponseType("arraybuffer"),g.setRequestHeader(this.requestHeader),g.setPath(this.path),g.setWithCredentials(e.withCredentials),g.load(a,function(a){let c=e.parse(a);c&&(void 0!==c.image?f.image=c.image:void 0!==c.data&&(f.image.width=c.width,f.image.height=c.height,f.image.data=c.data),f.wrapS=void 0!==c.wrapS?c.wrapS:al,f.wrapT=void 0!==c.wrapT?c.wrapT:al,f.magFilter=void 0!==c.magFilter?c.magFilter:as,f.minFilter=void 0!==c.minFilter?c.minFilter:as,f.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.encoding&&(f.encoding=c.encoding),void 0!==c.flipY&&(f.flipY=c.flipY),void 0!==c.format&&(f.format=c.format),void 0!==c.type&&(f.type=c.type),void 0!==c.mipmaps&&(f.mipmaps=c.mipmaps,f.minFilter=av),1===c.mipmapCount&&(f.minFilter=as),void 0!==c.generateMipmaps&&(f.generateMipmaps=c.generateMipmaps),f.needsUpdate=!0,b&&b(f,c))},c,d),f}}class j0 extends jU{constructor(a){super(a)}load(a,b,c,d){let e=new cH,f=new jZ(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(a,function(a){e.image=a,e.needsUpdate=!0,void 0!==b&&b(e)},c,d),e}}class j1 extends dJ{constructor(a,b=1){super(),this.type="Light",this.color=new cB(a),this.intensity=b}dispose(){}copy(a){return super.copy(a),this.color.copy(a.color),this.intensity=a.intensity,this}toJSON(a){let b=super.toJSON(a);return b.object.color=this.color.getHex(),b.object.intensity=this.intensity,void 0!==this.groundColor&&(b.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(b.object.distance=this.distance),void 0!==this.angle&&(b.object.angle=this.angle),void 0!==this.decay&&(b.object.decay=this.decay),void 0!==this.penumbra&&(b.object.penumbra=this.penumbra),void 0!==this.shadow&&(b.object.shadow=this.shadow.toJSON()),b}}j1.prototype.isLight=!0;class j2 extends j1{constructor(a,b,c){super(a,c),this.type="HemisphereLight",this.position.copy(dJ.DefaultUp),this.updateMatrix(),this.groundColor=new cB(b)}copy(a){return j1.prototype.copy.call(this,a),this.groundColor.copy(a.groundColor),this}}j2.prototype.isHemisphereLight=!0;let j3=new dj,j4=new cQ,j5=new cQ;class j6{constructor(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new cl(512,512),this.map=null,this.mapPass=null,this.matrix=new dj,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new eQ,this._frameExtents=new cl(1,1),this._viewportCount=1,this._viewports=[new cI(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(a){let b=this.camera,c=this.matrix;j4.setFromMatrixPosition(a.matrixWorld),b.position.copy(j4),j5.setFromMatrixPosition(a.target.matrixWorld),b.lookAt(j5),b.updateMatrixWorld(),j3.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),this._frustum.setFromProjectionMatrix(j3),c.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),c.multiply(b.projectionMatrix),c.multiply(b.matrixWorldInverse)}getViewport(a){return this._viewports[a]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}class j7 extends j6{constructor(){super(new eG(50,1,.5,500)),this.focus=1}updateMatrices(a){let b=this.camera,c=2*ca*a.angle*this.focus,d=this.mapSize.width/this.mapSize.height,e=a.distance||b.far;(c!==b.fov||d!==b.aspect||e!==b.far)&&(b.fov=c,b.aspect=d,b.far=e,b.updateProjectionMatrix()),super.updateMatrices(a)}copy(a){return super.copy(a),this.focus=a.focus,this}}j7.prototype.isSpotLightShadow=!0;class j8 extends j1{constructor(a,b,c=0,d=Math.PI/3,e=0,f=1){super(a,b),this.type="SpotLight",this.position.copy(dJ.DefaultUp),this.updateMatrix(),this.target=new dJ,this.distance=c,this.angle=d,this.penumbra=e,this.decay=f,this.shadow=new j7}get power(){return this.intensity*Math.PI}set power(a){this.intensity=a/Math.PI}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}j8.prototype.isSpotLight=!0;let j9=new dj,ka=new cQ,kb=new cQ;class kc extends j6{constructor(){super(new eG(90,1,.5,500)),this._frameExtents=new cl(4,2),this._viewportCount=6,this._viewports=[new cI(2,1,1,1),new cI(0,1,1,1),new cI(3,1,1,1),new cI(1,1,1,1),new cI(3,0,1,1),new cI(1,0,1,1)],this._cubeDirections=[new cQ(1,0,0),new cQ(-1,0,0),new cQ(0,0,1),new cQ(0,0,-1),new cQ(0,1,0),new cQ(0,-1,0)],this._cubeUps=[new cQ(0,1,0),new cQ(0,1,0),new cQ(0,1,0),new cQ(0,1,0),new cQ(0,0,1),new cQ(0,0,-1)]}updateMatrices(a,b=0){let c=this.camera,d=this.matrix,e=a.distance||c.far;e!==c.far&&(c.far=e,c.updateProjectionMatrix()),ka.setFromMatrixPosition(a.matrixWorld),c.position.copy(ka),kb.copy(c.position),kb.add(this._cubeDirections[b]),c.up.copy(this._cubeUps[b]),c.lookAt(kb),c.updateMatrixWorld(),d.makeTranslation(-ka.x,-ka.y,-ka.z),j9.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),this._frustum.setFromProjectionMatrix(j9)}}kc.prototype.isPointLightShadow=!0;class kd extends j1{constructor(a,b,c=0,d=1){super(a,b),this.type="PointLight",this.distance=c,this.decay=d,this.shadow=new kc}get power(){return 4*this.intensity*Math.PI}set power(a){this.intensity=a/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.distance=a.distance,this.decay=a.decay,this.shadow=a.shadow.clone(),this}}kd.prototype.isPointLight=!0;class ke extends j6{constructor(){super(new e1(-5,5,5,-5,.5,500))}}ke.prototype.isDirectionalLightShadow=!0;class kf extends j1{constructor(a,b){super(a,b),this.type="DirectionalLight",this.position.copy(dJ.DefaultUp),this.updateMatrix(),this.target=new dJ,this.shadow=new ke}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}kf.prototype.isDirectionalLight=!0;class kg extends j1{constructor(a,b){super(a,b),this.type="AmbientLight"}}kg.prototype.isAmbientLight=!0;class kh extends j1{constructor(a,b,c=10,d=10){super(a,b),this.type="RectAreaLight",this.width=c,this.height=d}get power(){return this.intensity*this.width*this.height*Math.PI}set power(a){this.intensity=a/(this.width*this.height*Math.PI)}copy(a){return super.copy(a),this.width=a.width,this.height=a.height,this}toJSON(a){let b=super.toJSON(a);return b.object.width=this.width,b.object.height=this.height,b}}kh.prototype.isRectAreaLight=!0;class ki{constructor(){this.coefficients=[];for(let a=0;a<9;a++)this.coefficients.push(new cQ)}set(a){for(let b=0;b<9;b++)this.coefficients[b].copy(a[b]);return this}zero(){for(let a=0;a<9;a++)this.coefficients[a].set(0,0,0);return this}getAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.282095),b.addScaledVector(f[1],.488603*d),b.addScaledVector(f[2],.488603*e),b.addScaledVector(f[3],.488603*c),b.addScaledVector(f[4],1.092548*(c*d)),b.addScaledVector(f[5],1.092548*(d*e)),b.addScaledVector(f[6],.315392*(3*e*e-1)),b.addScaledVector(f[7],1.092548*(c*e)),b.addScaledVector(f[8],.546274*(c*c-d*d)),b}getIrradianceAt(a,b){let c=a.x,d=a.y,e=a.z,f=this.coefficients;return b.copy(f[0]).multiplyScalar(.886227),b.addScaledVector(f[1],1.023328*d),b.addScaledVector(f[2],1.023328*e),b.addScaledVector(f[3],1.023328*c),b.addScaledVector(f[4],.858086*c*d),b.addScaledVector(f[5],.858086*d*e),b.addScaledVector(f[6],.743125*e*e-.247708),b.addScaledVector(f[7],.858086*c*e),b.addScaledVector(f[8],.429043*(c*c-d*d)),b}add(a){for(let b=0;b<9;b++)this.coefficients[b].add(a.coefficients[b]);return this}addScaledSH(a,b){for(let c=0;c<9;c++)this.coefficients[c].addScaledVector(a.coefficients[c],b);return this}scale(a){for(let b=0;b<9;b++)this.coefficients[b].multiplyScalar(a);return this}lerp(a,b){for(let c=0;c<9;c++)this.coefficients[c].lerp(a.coefficients[c],b);return this}equals(a){for(let b=0;b<9;b++)if(!this.coefficients[b].equals(a.coefficients[b]))return!1;return!0}copy(a){return this.set(a.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(a,b=0){let c=this.coefficients;for(let d=0;d<9;d++)c[d].fromArray(a,b+3*d);return this}toArray(a=[],b=0){let c=this.coefficients;for(let d=0;d<9;d++)c[d].toArray(a,b+3*d);return a}static getBasisAt(a,b){let c=a.x,d=a.y,e=a.z;b[0]=.282095,b[1]=.488603*d,b[2]=.488603*e,b[3]=.488603*c,b[4]=1.092548*c*d,b[5]=1.092548*d*e,b[6]=.315392*(3*e*e-1),b[7]=1.092548*c*e,b[8]=.546274*(c*c-d*d)}}ki.prototype.isSphericalHarmonics3=!0;class kj extends j1{constructor(a=new ki,b=1){super(void 0,b),this.sh=a}copy(a){return super.copy(a),this.sh.copy(a.sh),this}fromJSON(a){return this.intensity=a.intensity,this.sh.fromArray(a.sh),this}toJSON(a){let b=super.toJSON(a);return b.object.sh=this.sh.toArray(),b}}kj.prototype.isLightProbe=!0;class kk extends jU{constructor(a){super(a),this.textures={}}load(a,b,c,d){let e=this,f=new jW(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b=this.textures;function c(a){return void 0===b[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a),b[a]}let d=dW.fromType(a.type);if(void 0!==a.uuid&&(d.uuid=a.uuid),void 0!==a.name&&(d.name=a.name),void 0!==a.color&&void 0!==d.color&&d.color.setHex(a.color),void 0!==a.roughness&&(d.roughness=a.roughness),void 0!==a.metalness&&(d.metalness=a.metalness),void 0!==a.sheen&&(d.sheen=a.sheen),void 0!==a.sheenColor&&(d.sheenColor=new cB().setHex(a.sheenColor)),void 0!==a.sheenRoughness&&(d.sheenRoughness=a.sheenRoughness),void 0!==a.emissive&&void 0!==d.emissive&&d.emissive.setHex(a.emissive),void 0!==a.specular&&void 0!==d.specular&&d.specular.setHex(a.specular),void 0!==a.specularIntensity&&(d.specularIntensity=a.specularIntensity),void 0!==a.specularColor&&void 0!==d.specularColor&&d.specularColor.setHex(a.specularColor),void 0!==a.shininess&&(d.shininess=a.shininess),void 0!==a.clearcoat&&(d.clearcoat=a.clearcoat),void 0!==a.clearcoatRoughness&&(d.clearcoatRoughness=a.clearcoatRoughness),void 0!==a.transmission&&(d.transmission=a.transmission),void 0!==a.thickness&&(d.thickness=a.thickness),void 0!==a.attenuationDistance&&(d.attenuationDistance=a.attenuationDistance),void 0!==a.attenuationColor&&void 0!==d.attenuationColor&&d.attenuationColor.setHex(a.attenuationColor),void 0!==a.fog&&(d.fog=a.fog),void 0!==a.flatShading&&(d.flatShading=a.flatShading),void 0!==a.blending&&(d.blending=a.blending),void 0!==a.combine&&(d.combine=a.combine),void 0!==a.side&&(d.side=a.side),void 0!==a.shadowSide&&(d.shadowSide=a.shadowSide),void 0!==a.opacity&&(d.opacity=a.opacity),void 0!==a.transparent&&(d.transparent=a.transparent),void 0!==a.alphaTest&&(d.alphaTest=a.alphaTest),void 0!==a.depthTest&&(d.depthTest=a.depthTest),void 0!==a.depthWrite&&(d.depthWrite=a.depthWrite),void 0!==a.colorWrite&&(d.colorWrite=a.colorWrite),void 0!==a.stencilWrite&&(d.stencilWrite=a.stencilWrite),void 0!==a.stencilWriteMask&&(d.stencilWriteMask=a.stencilWriteMask),void 0!==a.stencilFunc&&(d.stencilFunc=a.stencilFunc),void 0!==a.stencilRef&&(d.stencilRef=a.stencilRef),void 0!==a.stencilFuncMask&&(d.stencilFuncMask=a.stencilFuncMask),void 0!==a.stencilFail&&(d.stencilFail=a.stencilFail),void 0!==a.stencilZFail&&(d.stencilZFail=a.stencilZFail),void 0!==a.stencilZPass&&(d.stencilZPass=a.stencilZPass),void 0!==a.wireframe&&(d.wireframe=a.wireframe),void 0!==a.wireframeLinewidth&&(d.wireframeLinewidth=a.wireframeLinewidth),void 0!==a.wireframeLinecap&&(d.wireframeLinecap=a.wireframeLinecap),void 0!==a.wireframeLinejoin&&(d.wireframeLinejoin=a.wireframeLinejoin),void 0!==a.rotation&&(d.rotation=a.rotation),1!==a.linewidth&&(d.linewidth=a.linewidth),void 0!==a.dashSize&&(d.dashSize=a.dashSize),void 0!==a.gapSize&&(d.gapSize=a.gapSize),void 0!==a.scale&&(d.scale=a.scale),void 0!==a.polygonOffset&&(d.polygonOffset=a.polygonOffset),void 0!==a.polygonOffsetFactor&&(d.polygonOffsetFactor=a.polygonOffsetFactor),void 0!==a.polygonOffsetUnits&&(d.polygonOffsetUnits=a.polygonOffsetUnits),void 0!==a.dithering&&(d.dithering=a.dithering),void 0!==a.alphaToCoverage&&(d.alphaToCoverage=a.alphaToCoverage),void 0!==a.premultipliedAlpha&&(d.premultipliedAlpha=a.premultipliedAlpha),void 0!==a.visible&&(d.visible=a.visible),void 0!==a.toneMapped&&(d.toneMapped=a.toneMapped),void 0!==a.userData&&(d.userData=a.userData),void 0!==a.vertexColors&&("number"==typeof a.vertexColors?d.vertexColors=a.vertexColors>0:d.vertexColors=a.vertexColors),void 0!==a.uniforms)for(let e in a.uniforms){let f=a.uniforms[e];switch(d.uniforms[e]={},f.type){case"t":d.uniforms[e].value=c(f.value);break;case"c":d.uniforms[e].value=new cB().setHex(f.value);break;case"v2":d.uniforms[e].value=new cl().fromArray(f.value);break;case"v3":d.uniforms[e].value=new cQ().fromArray(f.value);break;case"v4":d.uniforms[e].value=new cI().fromArray(f.value);break;case"m3":d.uniforms[e].value=new cm().fromArray(f.value);break;case"m4":d.uniforms[e].value=new dj().fromArray(f.value);break;default:d.uniforms[e].value=f.value}}if(void 0!==a.defines&&(d.defines=a.defines),void 0!==a.vertexShader&&(d.vertexShader=a.vertexShader),void 0!==a.fragmentShader&&(d.fragmentShader=a.fragmentShader),void 0!==a.extensions)for(let g in a.extensions)d.extensions[g]=a.extensions[g];if(void 0!==a.shading&&(d.flatShading=1===a.shading),void 0!==a.size&&(d.size=a.size),void 0!==a.sizeAttenuation&&(d.sizeAttenuation=a.sizeAttenuation),void 0!==a.map&&(d.map=c(a.map)),void 0!==a.matcap&&(d.matcap=c(a.matcap)),void 0!==a.alphaMap&&(d.alphaMap=c(a.alphaMap)),void 0!==a.bumpMap&&(d.bumpMap=c(a.bumpMap)),void 0!==a.bumpScale&&(d.bumpScale=a.bumpScale),void 0!==a.normalMap&&(d.normalMap=c(a.normalMap)),void 0!==a.normalMapType&&(d.normalMapType=a.normalMapType),void 0!==a.normalScale){let h=a.normalScale;!1===Array.isArray(h)&&(h=[h,h]),d.normalScale=new cl().fromArray(h)}return void 0!==a.displacementMap&&(d.displacementMap=c(a.displacementMap)),void 0!==a.displacementScale&&(d.displacementScale=a.displacementScale),void 0!==a.displacementBias&&(d.displacementBias=a.displacementBias),void 0!==a.roughnessMap&&(d.roughnessMap=c(a.roughnessMap)),void 0!==a.metalnessMap&&(d.metalnessMap=c(a.metalnessMap)),void 0!==a.emissiveMap&&(d.emissiveMap=c(a.emissiveMap)),void 0!==a.emissiveIntensity&&(d.emissiveIntensity=a.emissiveIntensity),void 0!==a.specularMap&&(d.specularMap=c(a.specularMap)),void 0!==a.specularIntensityMap&&(d.specularIntensityMap=c(a.specularIntensityMap)),void 0!==a.specularColorMap&&(d.specularColorMap=c(a.specularColorMap)),void 0!==a.envMap&&(d.envMap=c(a.envMap)),void 0!==a.envMapIntensity&&(d.envMapIntensity=a.envMapIntensity),void 0!==a.reflectivity&&(d.reflectivity=a.reflectivity),void 0!==a.refractionRatio&&(d.refractionRatio=a.refractionRatio),void 0!==a.lightMap&&(d.lightMap=c(a.lightMap)),void 0!==a.lightMapIntensity&&(d.lightMapIntensity=a.lightMapIntensity),void 0!==a.aoMap&&(d.aoMap=c(a.aoMap)),void 0!==a.aoMapIntensity&&(d.aoMapIntensity=a.aoMapIntensity),void 0!==a.gradientMap&&(d.gradientMap=c(a.gradientMap)),void 0!==a.clearcoatMap&&(d.clearcoatMap=c(a.clearcoatMap)),void 0!==a.clearcoatRoughnessMap&&(d.clearcoatRoughnessMap=c(a.clearcoatRoughnessMap)),void 0!==a.clearcoatNormalMap&&(d.clearcoatNormalMap=c(a.clearcoatNormalMap)),void 0!==a.clearcoatNormalScale&&(d.clearcoatNormalScale=new cl().fromArray(a.clearcoatNormalScale)),void 0!==a.transmissionMap&&(d.transmissionMap=c(a.transmissionMap)),void 0!==a.thicknessMap&&(d.thicknessMap=c(a.thicknessMap)),void 0!==a.sheenColorMap&&(d.sheenColorMap=c(a.sheenColorMap)),void 0!==a.sheenRoughnessMap&&(d.sheenRoughnessMap=c(a.sheenRoughnessMap)),d}setTextures(a){return this.textures=a,this}}class kl{static decodeText(a){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(e){return b}}static extractUrlBase(a){let b=a.lastIndexOf("/");return-1===b?"./":a.slice(0,b+1)}static resolveURL(a,b){return"string"!=typeof a||""===a?"":(/^https?:\/\//i.test(b)&&/^\//.test(a)&&(b=b.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(a)||/^data:.*,.*$/i.test(a)||/^blob:.*$/i.test(a))?a:b+a}}class km extends eg{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(a){return super.copy(a),this.instanceCount=a.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let a=super.toJSON(this);return a.instanceCount=this.instanceCount,a.isInstancedBufferGeometry=!0,a}}km.prototype.isInstancedBufferGeometry=!0;class kn extends jU{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new jW(e.manager);f.setPath(e.path),f.setRequestHeader(e.requestHeader),f.setWithCredentials(e.withCredentials),f.load(a,function(c){try{b(e.parse(JSON.parse(c)))}catch(f){d?d(f):console.error(f),e.manager.itemError(a)}},c,d)}parse(a){let b={},c={};function d(a,c){if(void 0!==b[c])return b[c];let d=a.interleavedBuffers,f=d[c],g=e(a,f.buffer),h=cp(f.type,g),i=new g6(h,f.stride);return i.uuid=f.uuid,b[c]=i,i}function e(a,b){if(void 0!==c[b])return c[b];let d=a.arrayBuffers,e=d[b],f=new Uint32Array(e).buffer;return c[b]=f,f}let f=a.isInstancedBufferGeometry?new km:new eg,g=a.data.index;if(void 0!==g){let h=cp(g.type,g.array);f.setIndex(new d$(h,1))}let i=a.data.attributes;for(let j in i){let k=i[j],l;if(k.isInterleavedBufferAttribute){let m=d(a.data,k.data);l=new g8(m,k.itemSize,k.offset,k.normalized)}else{let n=cp(k.type,k.array),o=k.isInstancedBufferAttribute?hD:d$;l=new o(n,k.itemSize,k.normalized)}void 0!==k.name&&(l.name=k.name),void 0!==k.usage&&l.setUsage(k.usage),void 0!==k.updateRange&&(l.updateRange.offset=k.updateRange.offset,l.updateRange.count=k.updateRange.count),f.setAttribute(j,l)}let p=a.data.morphAttributes;if(p)for(let q in p){let r=p[q],s=[];for(let t=0,u=r.length;t<u;t++){let v=r[t],w;if(v.isInterleavedBufferAttribute){let x=d(a.data,v.data);w=new g8(x,v.itemSize,v.offset,v.normalized)}else{let y=cp(v.type,v.array);w=new d$(y,v.itemSize,v.normalized)}void 0!==v.name&&(w.name=v.name),s.push(w)}f.morphAttributes[q]=s}let z=a.data.morphTargetsRelative;z&&(f.morphTargetsRelative=!0);let A=a.data.groups||a.data.drawcalls||a.data.offsets;if(void 0!==A)for(let B=0,C=A.length;B!==C;++B){let D=A[B];f.addGroup(D.start,D.count,D.materialIndex)}let E=a.data.boundingSphere;if(void 0!==E){let F=new cQ;void 0!==E.center&&F.fromArray(E.center),f.boundingSphere=new da(F,E.radius)}return a.name&&(f.name=a.name),a.userData&&(f.userData=a.userData),f}}class ko extends jU{constructor(a){super(a)}load(a,b,c,d){let e=this,f=""===this.path?kl.extractUrlBase(a):this.path;this.resourcePath=this.resourcePath||f;let g=new jW(this.manager);g.setPath(this.path),g.setRequestHeader(this.requestHeader),g.setWithCredentials(this.withCredentials),g.load(a,function(c){let f=null;try{f=JSON.parse(c)}catch(g){void 0!==d&&d(g),console.error("THREE:ObjectLoader: Can't parse "+a+".",g.message);return}let h=f.metadata;if(void 0===h||void 0===h.type||"geometry"===h.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+a);return}e.parse(f,b)},c,d)}async loadAsync(a,b){let c=""===this.path?kl.extractUrlBase(a):this.path;this.resourcePath=this.resourcePath||c;let d=new jW(this.manager);d.setPath(this.path),d.setRequestHeader(this.requestHeader),d.setWithCredentials(this.withCredentials);let e=await d.loadAsync(a,b),f=JSON.parse(e),g=f.metadata;if(void 0===g||void 0===g.type||"geometry"===g.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+a);return await this.parseAsync(f)}parse(a,b){let c=this.parseAnimations(a.animations),d=this.parseShapes(a.shapes),e=this.parseGeometries(a.geometries,d),f=this.parseImages(a.images,function(){void 0!==b&&b(i)}),g=this.parseTextures(a.textures,f),h=this.parseMaterials(a.materials,g),i=this.parseObject(a.object,e,h,g,c),j=this.parseSkeletons(a.skeletons,i);if(this.bindSkeletons(i,j),void 0!==b){let k=!1;for(let l in f)if(f[l]instanceof HTMLImageElement){k=!0;break}!1===k&&b(i)}return i}async parseAsync(a){let b=this.parseAnimations(a.animations),c=this.parseShapes(a.shapes),d=this.parseGeometries(a.geometries,c),e=await this.parseImagesAsync(a.images),f=this.parseTextures(a.textures,e),g=this.parseMaterials(a.materials,f),h=this.parseObject(a.object,d,g,f,b),i=this.parseSkeletons(a.skeletons,h);return this.bindSkeletons(h,i),h}parseShapes(a){let b={};if(void 0!==a)for(let c=0,d=a.length;c<d;c++){let e=new iD().fromJSON(a[c]);b[e.uuid]=e}return b}parseSkeletons(a,b){let c={},d={};if(b.traverse(function(a){a.isBone&&(d[a.uuid]=a)}),void 0!==a)for(let e=0,f=a.length;e<f;e++){let g=new hC().fromJSON(a[e],d);c[g.uuid]=g}return c}parseGeometries(a,b){let c={};if(void 0!==a){let d=new kn;for(let e=0,f=a.length;e<f;e++){let g,h=a[e];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":g=d.parse(h);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:h.type in jq?g=jq[h.type].fromJSON(h,b):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}g.uuid=h.uuid,void 0!==h.name&&(g.name=h.name),!0===g.isBufferGeometry&&void 0!==h.userData&&(g.userData=h.userData),c[h.uuid]=g}}return c}parseMaterials(a,b){let c={},d={};if(void 0!==a){let e=new kk;e.setTextures(b);for(let f=0,g=a.length;f<g;f++){let h=a[f];if("MultiMaterial"===h.type){let i=[];for(let j=0;j<h.materials.length;j++){let k=h.materials[j];void 0===c[k.uuid]&&(c[k.uuid]=e.parse(k)),i.push(c[k.uuid])}d[h.uuid]=i}else void 0===c[h.uuid]&&(c[h.uuid]=e.parse(h)),d[h.uuid]=c[h.uuid]}}return d}parseAnimations(a){let b={};if(void 0!==a)for(let c=0;c<a.length;c++){let d=a[c],e=jP.parse(d);b[e.uuid]=e}return b}parseImages(a,b){let c=this,d={},e;function f(a){if("string"==typeof a){var b;let d=a,f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:c.resourcePath+d;return b=f,c.manager.itemStart(b),e.load(b,function(){c.manager.itemEnd(b)},void 0,function(){c.manager.itemError(b),c.manager.itemEnd(b)})}return a.data?{data:cp(a.type,a.data),width:a.width,height:a.height}:null}if(void 0!==a&&a.length>0){let g=new jS(b);(e=new jZ(g)).setCrossOrigin(this.crossOrigin);for(let h=0,i=a.length;h<i;h++){let j=a[h],k=j.url;if(Array.isArray(k)){let l=[];for(let m=0,n=k.length;m<n;m++){let o=k[m],p=f(o);null!==p&&(p instanceof HTMLImageElement?l.push(p):l.push(new hz(p.data,p.width,p.height)))}d[j.uuid]=new cE(l)}else{let q=f(j.url);d[j.uuid]=new cE(q)}}}return d}async parseImagesAsync(a){let b=this,c={},d;async function e(a){if("string"==typeof a){let c=a,e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:b.resourcePath+c;return await d.loadAsync(e)}return a.data?{data:cp(a.type,a.data),width:a.width,height:a.height}:null}if(void 0!==a&&a.length>0){(d=new jZ(this.manager)).setCrossOrigin(this.crossOrigin);for(let f=0,g=a.length;f<g;f++){let h=a[f],i=h.url;if(Array.isArray(i)){let j=[];for(let k=0,l=i.length;k<l;k++){let m=i[k],n=await e(m);null!==n&&(n instanceof HTMLImageElement?j.push(n):j.push(new hz(n.data,n.width,n.height)))}c[h.uuid]=new cE(j)}else{let o=await e(h.url);c[h.uuid]=new cE(o)}}}return c}parseTextures(a,b){function c(a,b){return"number"==typeof a?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),b[a])}let d={};if(void 0!==a)for(let e=0,f=a.length;e<f;e++){let g=a[e];void 0===g.image&&console.warn('THREE.ObjectLoader: No "image" specified for',g.uuid),void 0===b[g.image]&&console.warn("THREE.ObjectLoader: Undefined image",g.image);let h=b[g.image],i=h.data,j;Array.isArray(i)?(j=new eI,6===i.length&&(j.needsUpdate=!0)):(j=i&&i.data?new hz:new cH,i&&(j.needsUpdate=!0)),j.source=h,j.uuid=g.uuid,void 0!==g.name&&(j.name=g.name),void 0!==g.mapping&&(j.mapping=c(g.mapping,kp)),void 0!==g.offset&&j.offset.fromArray(g.offset),void 0!==g.repeat&&j.repeat.fromArray(g.repeat),void 0!==g.center&&j.center.fromArray(g.center),void 0!==g.rotation&&(j.rotation=g.rotation),void 0!==g.wrap&&(j.wrapS=c(g.wrap[0],kq),j.wrapT=c(g.wrap[1],kq)),void 0!==g.format&&(j.format=g.format),void 0!==g.type&&(j.type=g.type),void 0!==g.encoding&&(j.encoding=g.encoding),void 0!==g.minFilter&&(j.minFilter=c(g.minFilter,kr)),void 0!==g.magFilter&&(j.magFilter=c(g.magFilter,kr)),void 0!==g.anisotropy&&(j.anisotropy=g.anisotropy),void 0!==g.flipY&&(j.flipY=g.flipY),void 0!==g.premultiplyAlpha&&(j.premultiplyAlpha=g.premultiplyAlpha),void 0!==g.unpackAlignment&&(j.unpackAlignment=g.unpackAlignment),void 0!==g.userData&&(j.userData=g.userData),d[g.uuid]=j}return d}parseObject(a,b,c,d,e){let f;function g(a){return void 0===b[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a),b[a]}function h(a){if(void 0!==a){if(Array.isArray(a)){let b=[];for(let d=0,e=a.length;d<e;d++){let f=a[d];void 0===c[f]&&console.warn("THREE.ObjectLoader: Undefined material",f),b.push(c[f])}return b}return void 0===c[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),c[a]}}function i(a){return void 0===d[a]&&console.warn("THREE.ObjectLoader: Undefined texture",a),d[a]}let j,k;switch(a.type){case"Scene":f=new g5,void 0!==a.background&&(Number.isInteger(a.background)?f.background=new cB(a.background):f.background=i(a.background)),void 0!==a.environment&&(f.environment=i(a.environment)),void 0!==a.fog&&("Fog"===a.fog.type?f.fog=new g4(a.fog.color,a.fog.near,a.fog.far):"FogExp2"===a.fog.type&&(f.fog=new g3(a.fog.color,a.fog.density)));break;case"PerspectiveCamera":f=new eG(a.fov,a.aspect,a.near,a.far),void 0!==a.focus&&(f.focus=a.focus),void 0!==a.zoom&&(f.zoom=a.zoom),void 0!==a.filmGauge&&(f.filmGauge=a.filmGauge),void 0!==a.filmOffset&&(f.filmOffset=a.filmOffset),void 0!==a.view&&(f.view=Object.assign({},a.view));break;case"OrthographicCamera":f=new e1(a.left,a.right,a.top,a.bottom,a.near,a.far),void 0!==a.zoom&&(f.zoom=a.zoom),void 0!==a.view&&(f.view=Object.assign({},a.view));break;case"AmbientLight":f=new kg(a.color,a.intensity);break;case"DirectionalLight":f=new kf(a.color,a.intensity);break;case"PointLight":f=new kd(a.color,a.intensity,a.distance,a.decay);break;case"RectAreaLight":f=new kh(a.color,a.intensity,a.width,a.height);break;case"SpotLight":f=new j8(a.color,a.intensity,a.distance,a.angle,a.penumbra,a.decay);break;case"HemisphereLight":f=new j2(a.color,a.groundColor,a.intensity);break;case"LightProbe":f=new kj().fromJSON(a);break;case"SkinnedMesh":j=g(a.geometry),k=h(a.material),f=new hx(j,k),void 0!==a.bindMode&&(f.bindMode=a.bindMode),void 0!==a.bindMatrix&&f.bindMatrix.fromArray(a.bindMatrix),void 0!==a.skeleton&&(f.skeleton=a.skeleton);break;case"Mesh":j=g(a.geometry),k=h(a.material),f=new ey(j,k);break;case"InstancedMesh":j=g(a.geometry),k=h(a.material);let l=a.count,m=a.instanceMatrix,n=a.instanceColor;(f=new hI(j,k,l)).instanceMatrix=new hD(new Float32Array(m.array),16),void 0!==n&&(f.instanceColor=new hD(new Float32Array(n.array),n.itemSize));break;case"LOD":f=new hr;break;case"Line":f=new hP(g(a.geometry),h(a.material));break;case"LineLoop":f=new hT(g(a.geometry),h(a.material));break;case"LineSegments":f=new hS(g(a.geometry),h(a.material));break;case"PointCloud":case"Points":f=new hZ(g(a.geometry),h(a.material));break;case"Sprite":f=new hn(h(a.material));break;case"Group":f=new gX;break;case"Bone":f=new hy;break;default:f=new dJ}if(f.uuid=a.uuid,void 0!==a.name&&(f.name=a.name),void 0!==a.matrix?(f.matrix.fromArray(a.matrix),void 0!==a.matrixAutoUpdate&&(f.matrixAutoUpdate=a.matrixAutoUpdate),f.matrixAutoUpdate&&f.matrix.decompose(f.position,f.quaternion,f.scale)):(void 0!==a.position&&f.position.fromArray(a.position),void 0!==a.rotation&&f.rotation.fromArray(a.rotation),void 0!==a.quaternion&&f.quaternion.fromArray(a.quaternion),void 0!==a.scale&&f.scale.fromArray(a.scale)),void 0!==a.castShadow&&(f.castShadow=a.castShadow),void 0!==a.receiveShadow&&(f.receiveShadow=a.receiveShadow),a.shadow&&(void 0!==a.shadow.bias&&(f.shadow.bias=a.shadow.bias),void 0!==a.shadow.normalBias&&(f.shadow.normalBias=a.shadow.normalBias),void 0!==a.shadow.radius&&(f.shadow.radius=a.shadow.radius),void 0!==a.shadow.mapSize&&f.shadow.mapSize.fromArray(a.shadow.mapSize),void 0!==a.shadow.camera&&(f.shadow.camera=this.parseObject(a.shadow.camera))),void 0!==a.visible&&(f.visible=a.visible),void 0!==a.frustumCulled&&(f.frustumCulled=a.frustumCulled),void 0!==a.renderOrder&&(f.renderOrder=a.renderOrder),void 0!==a.userData&&(f.userData=a.userData),void 0!==a.layers&&(f.layers.mask=a.layers),void 0!==a.children){let o=a.children;for(let p=0;p<o.length;p++)f.add(this.parseObject(o[p],b,c,d,e))}if(void 0!==a.animations){let q=a.animations;for(let r=0;r<q.length;r++){let s=q[r];f.animations.push(e[s])}}if("LOD"===a.type){void 0!==a.autoUpdate&&(f.autoUpdate=a.autoUpdate);let t=a.levels;for(let u=0;u<t.length;u++){let v=t[u],w=f.getObjectByProperty("uuid",v.object);void 0!==w&&f.addLevel(w,v.distance)}}return f}bindSkeletons(a,b){0!==Object.keys(b).length&&a.traverse(function(a){if(!0===a.isSkinnedMesh&&void 0!==a.skeleton){let c=b[a.skeleton];void 0===c?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",a.skeleton):a.bind(c,a.bindMatrix)}})}setTexturePath(a){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(a)}}let kp={UVMapping:ae,CubeReflectionMapping:af,CubeRefractionMapping:ag,EquirectangularReflectionMapping:ah,EquirectangularRefractionMapping:ai,CubeUVReflectionMapping:aj},kq={RepeatWrapping:ak,ClampToEdgeWrapping:al,MirroredRepeatWrapping:am},kr={NearestFilter:an,NearestMipmapNearestFilter:ao,NearestMipmapLinearFilter:aq,LinearFilter:as,LinearMipmapNearestFilter:at,LinearMipmapLinearFilter:av};class ks extends jU{constructor(a){super(a),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(a){return this.options=a,this}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=this,f=jR.get(a);if(void 0!==f)return e.manager.itemStart(a),setTimeout(function(){b&&b(f),e.manager.itemEnd(a)},0),f;let g={};g.credentials="anonymous"===this.crossOrigin?"same-origin":"include",g.headers=this.requestHeader,fetch(a,g).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,Object.assign(e.options,{colorSpaceConversion:"none"}))}).then(function(c){jR.add(a,c),b&&b(c),e.manager.itemEnd(a)}).catch(function(b){d&&d(b),e.manager.itemError(a),e.manager.itemEnd(a)}),e.manager.itemStart(a)}}ks.prototype.isImageBitmapLoader=!0;let kt,ku={getContext:function(){return void 0===kt&&(kt=new(window.AudioContext||window.webkitAudioContext)),kt},setContext:function(a){kt=a}};class kv extends jU{constructor(a){super(a)}load(a,b,c,d){let e=this,f=new jW(this.manager);f.setResponseType("arraybuffer"),f.setPath(this.path),f.setRequestHeader(this.requestHeader),f.setWithCredentials(this.withCredentials),f.load(a,function(c){try{let f=c.slice(0),g=ku.getContext();g.decodeAudioData(f,function(a){b(a)})}catch(h){d?d(h):console.error(h),e.manager.itemError(a)}},c,d)}}class kw extends kj{constructor(a,b,c=1){super(void 0,c);let d=new cB().set(a),e=new cB().set(b),f=new cQ(d.r,d.g,d.b),g=new cQ(e.r,e.g,e.b),h=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(f).add(g).multiplyScalar(h),this.sh.coefficients[1].copy(f).sub(g).multiplyScalar(h*Math.sqrt(.75))}}kw.prototype.isHemisphereLightProbe=!0;class kx extends kj{constructor(a,b=1){super(void 0,b);let c=new cB().set(a);this.sh.coefficients[0].set(c.r,c.g,c.b).multiplyScalar(2*Math.sqrt(Math.PI))}}kx.prototype.isAmbientLightProbe=!0;let ky=new dj,kz=new dj,kA=new dj;class kB{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new eG,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new eG,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(a){let b=this._cache,c=b.focus!==a.focus||b.fov!==a.fov||b.aspect!==a.aspect*this.aspect||b.near!==a.near||b.far!==a.far||b.zoom!==a.zoom||b.eyeSep!==this.eyeSep;if(c){b.focus=a.focus,b.fov=a.fov,b.aspect=a.aspect*this.aspect,b.near=a.near,b.far=a.far,b.zoom=a.zoom,b.eyeSep=this.eyeSep,kA.copy(a.projectionMatrix);let d=b.eyeSep/2,e=d*b.near/b.focus,f=b.near*Math.tan(b9*b.fov*.5)/b.zoom,g,h;kz.elements[12]=-d,ky.elements[12]=d,g=-f*b.aspect+e,h=f*b.aspect+e,kA.elements[0]=2*b.near/(h-g),kA.elements[8]=(h+g)/(h-g),this.cameraL.projectionMatrix.copy(kA),g=-f*b.aspect-e,h=f*b.aspect-e,kA.elements[0]=2*b.near/(h-g),kA.elements[8]=(h+g)/(h-g),this.cameraR.projectionMatrix.copy(kA)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(kz),this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(ky)}}class kC{constructor(a=!0){this.autoStart=a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=kD(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let b=kD();a=(b-this.oldTime)/1e3,this.oldTime=b,this.elapsedTime+=a}return a}}function kD(){return("undefined"==typeof performance?Date:performance).now()}let kE=new cQ,kF=new cP,kG=new cQ,kH=new cQ;class kI extends dJ{constructor(){super(),this.type="AudioListener",this.context=ku.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new kC}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(a){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=a,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}updateMatrixWorld(a){super.updateMatrixWorld(a);let b=this.context.listener,c=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(kE,kF,kG),kH.set(0,0,-1).applyQuaternion(kF),b.positionX){let d=this.context.currentTime+this.timeDelta;b.positionX.linearRampToValueAtTime(kE.x,d),b.positionY.linearRampToValueAtTime(kE.y,d),b.positionZ.linearRampToValueAtTime(kE.z,d),b.forwardX.linearRampToValueAtTime(kH.x,d),b.forwardY.linearRampToValueAtTime(kH.y,d),b.forwardZ.linearRampToValueAtTime(kH.z,d),b.upX.linearRampToValueAtTime(c.x,d),b.upY.linearRampToValueAtTime(c.y,d),b.upZ.linearRampToValueAtTime(c.z,d)}else b.setPosition(kE.x,kE.y,kE.z),b.setOrientation(kH.x,kH.y,kH.z,c.x,c.y,c.z)}}class kJ extends dJ{constructor(a){super(),this.type="Audio",this.listener=a,this.context=a.context,this.gain=this.context.createGain(),this.gain.connect(a.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(a){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=a,this.connect(),this}setMediaElementSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(a),this.connect(),this}setMediaStreamSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(a),this.connect(),this}setBuffer(a){return this.buffer=a,this.sourceType="buffer",this.autoplay&&this.play(),this}play(a=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+a;let b=this.context.createBufferSource();return b.buffer=this.buffer,b.loop=this.loop,b.loopStart=this.loopStart,b.loopEnd=this.loopEnd,b.onended=this.onEnded.bind(this),b.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=b,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(a){return a||(a=[]),!0===this._connected?(this.disconnect(),this.filters=a.slice(),this.connect()):this.filters=a.slice(),this}setDetune(a){if(this.detune=a,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(a){return this.setFilters(a?[a]:[])}setPlaybackRate(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(a){return this.loopStart=a,this}setLoopEnd(a){return this.loopEnd=a,this}getVolume(){return this.gain.gain.value}setVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}}let kK=new cQ,kL=new cP,kM=new cQ,kN=new cQ;class kO extends kJ{constructor(a){super(a),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(a){return this.panner.refDistance=a,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(a){return this.panner.rolloffFactor=a,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(a){return this.panner.distanceModel=a,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(a){return this.panner.maxDistance=a,this}setDirectionalCone(a,b,c){return this.panner.coneInnerAngle=a,this.panner.coneOuterAngle=b,this.panner.coneOuterGain=c,this}updateMatrixWorld(a){if(super.updateMatrixWorld(a),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(kK,kL,kM),kN.set(0,0,1).applyQuaternion(kL);let b=this.panner;if(b.positionX){let c=this.context.currentTime+this.listener.timeDelta;b.positionX.linearRampToValueAtTime(kK.x,c),b.positionY.linearRampToValueAtTime(kK.y,c),b.positionZ.linearRampToValueAtTime(kK.z,c),b.orientationX.linearRampToValueAtTime(kN.x,c),b.orientationY.linearRampToValueAtTime(kN.y,c),b.orientationZ.linearRampToValueAtTime(kN.z,c)}else b.setPosition(kK.x,kK.y,kK.z),b.setOrientation(kN.x,kN.y,kN.z)}}class kP{constructor(a,b=2048){this.analyser=a.context.createAnalyser(),this.analyser.fftSize=b,this.data=new Uint8Array(this.analyser.frequencyBinCount),a.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let a=0,b=this.getFrequencyData();for(let c=0;c<b.length;c++)a+=b[c];return a/b.length}}class kQ{constructor(a,b,c){this.binding=a,this.valueSize=c;let d,e,f;switch(b){case"quaternion":d=this._slerp,e=this._slerpAdditive,f=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*c),this._workIndex=5;break;case"string":case"bool":d=this._select,e=this._select,f=this._setAdditiveIdentityOther,this.buffer=Array(5*c);break;default:d=this._lerp,e=this._lerpAdditive,f=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*c)}this._mixBufferRegion=d,this._mixBufferRegionAdditive=e,this._setIdentity=f,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(a,b){let c=this.buffer,d=this.valueSize,e=a*d+d,f=this.cumulativeWeight;if(0===f){for(let g=0;g!==d;++g)c[e+g]=c[g];f=b}else{f+=b;let h=b/f;this._mixBufferRegion(c,e,0,h,d)}this.cumulativeWeight=f}accumulateAdditive(a){let b=this.buffer,c=this.valueSize,d=c*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(b,d,0,a,c),this.cumulativeWeightAdditive+=a}apply(a){let b=this.valueSize,c=this.buffer,d=a*b+b,e=this.cumulativeWeight,f=this.cumulativeWeightAdditive,g=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){let h=b*this._origIndex;this._mixBufferRegion(c,d,h,1-e,b)}f>0&&this._mixBufferRegionAdditive(c,d,this._addIndex*b,1,b);for(let i=b,j=b+b;i!==j;++i)if(c[i]!==c[i+b]){g.setValue(c,d);break}}saveOriginalState(){let a=this.binding,b=this.buffer,c=this.valueSize,d=c*this._origIndex;a.getValue(b,d);for(let e=c,f=d;e!==f;++e)b[e]=b[d+e%c];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let a=3*this.valueSize;this.binding.setValue(this.buffer,a)}_setAdditiveIdentityNumeric(){let a=this._addIndex*this.valueSize,b=a+this.valueSize;for(let c=a;c<b;c++)this.buffer[c]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let a=this._origIndex*this.valueSize,b=this._addIndex*this.valueSize;for(let c=0;c<this.valueSize;c++)this.buffer[b+c]=this.buffer[a+c]}_select(a,b,c,d,e){if(d>=.5)for(let f=0;f!==e;++f)a[b+f]=a[c+f]}_slerp(a,b,c,d){cP.slerpFlat(a,b,a,b,a,c,d)}_slerpAdditive(a,b,c,d,e){let f=this._workIndex*e;cP.multiplyQuaternionsFlat(a,f,a,b,a,c),cP.slerpFlat(a,b,a,b,a,f,d)}_lerp(a,b,c,d,e){let f=1-d;for(let g=0;g!==e;++g){let h=b+g;a[h]=a[h]*f+a[c+g]*d}}_lerpAdditive(a,b,c,d,e){for(let f=0;f!==e;++f){let g=b+f;a[g]=a[g]+a[c+f]*d}}}let kR="\\[\\]\\.:\\/",kS=RegExp("["+kR+"]","g"),kT="[^"+kR+"]",kU="[^"+kR.replace("\\.","")+"]",kV=/((?:WC+[\/:])*)/.source.replace("WC",kT),kW=/(WCOD+)?/.source.replace("WCOD",kU),kX=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",kT),kY=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",kT),kZ=RegExp("^"+kV+kW+kX+kY+"$"),k$=["material","materials","bones"];class k_{constructor(a,b,c){this.path=b,this.parsedPath=c||k_.parseTrackName(b),this.node=k_.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(a,b,c){return a&&a.isAnimationObjectGroup?new k_.Composite(a,b,c):new k_(a,b,c)}static sanitizeNodeName(a){return a.replace(/\s/g,"_").replace(kS,"")}static parseTrackName(a){let b=kZ.exec(a);if(null===b)throw Error("PropertyBinding: Cannot parse trackName: "+a);let c={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},d=c.nodeName&&c.nodeName.lastIndexOf(".");if(void 0!==d&&-1!==d){let e=c.nodeName.substring(d+1);-1!==k$.indexOf(e)&&(c.nodeName=c.nodeName.substring(0,d),c.objectName=e)}if(null===c.propertyName||0===c.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+a);return c}static findNode(a,b){if(void 0===b||""===b||"."===b||-1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let d=function(a){for(let c=0;c<a.length;c++){let e=a[c];if(e.name===b||e.uuid===b)return e;let f=d(e.children);if(f)return f}return null},e=d(a.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(a,b){a[b]=this.targetObject[this.propertyName]}_getValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)a[b++]=c[d]}_getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}_setValue_direct(a,b){this.targetObject[this.propertyName]=a[b]}_setValue_direct_setNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++]}_setValue_array_setNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(a,b){let c=this.resolvedProperty;for(let d=0,e=c.length;d!==e;++d)c[d]=a[b++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]}_setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)}_setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(a,b){this.bind(),this.getValue(a,b)}_setValue_unbound(a,b){this.bind(),this.setValue(a,b)}bind(){let a=this.node,b=this.parsedPath,c=b.objectName,d=b.propertyName,e=b.propertyIndex;if(a||(a=k_.findNode(this.rootNode,b.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(c){let f=b.objectIndex;switch(c){case"materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case"bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(let g=0;g<a.length;g++)if(a[g].name===f){f=g;break}break;default:if(void 0===a[c]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[c]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}let h=a[d];if(void 0===h){let i=b.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+i+"."+d+" but it wasn't found.",a);return}let j=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?j=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(j=this.Versioning.MatrixWorldNeedsUpdate);let k=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===d){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(a.geometry.isBufferGeometry){if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}k=this.BindingType.ArrayElement,this.resolvedProperty=h,this.propertyIndex=e}else void 0!==h.fromArray&&void 0!==h.toArray?(k=this.BindingType.HasFromToArray,this.resolvedProperty=h):Array.isArray(h)?(k=this.BindingType.EntireArray,this.resolvedProperty=h):this.propertyName=d;this.getValue=this.GetterByBindingType[k],this.setValue=this.SetterByBindingTypeAndVersioning[k][j]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}k_.Composite=class{constructor(a,b,c){let d=c||k_.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,d)}getValue(a,b){this.bind();let c=this._targetGroup.nCachedObjects_,d=this._bindings[c];void 0!==d&&d.getValue(a,b)}setValue(a,b){let c=this._bindings;for(let d=this._targetGroup.nCachedObjects_,e=c.length;d!==e;++d)c[d].setValue(a,b)}bind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].bind()}unbind(){let a=this._bindings;for(let b=this._targetGroup.nCachedObjects_,c=a.length;b!==c;++b)a[b].unbind()}},k_.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},k_.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},k_.prototype.GetterByBindingType=[k_.prototype._getValue_direct,k_.prototype._getValue_array,k_.prototype._getValue_arrayElement,k_.prototype._getValue_toArray,],k_.prototype.SetterByBindingTypeAndVersioning=[[k_.prototype._setValue_direct,k_.prototype._setValue_direct_setNeedsUpdate,k_.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[k_.prototype._setValue_array,k_.prototype._setValue_array_setNeedsUpdate,k_.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[k_.prototype._setValue_arrayElement,k_.prototype._setValue_arrayElement_setNeedsUpdate,k_.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[k_.prototype._setValue_fromArray,k_.prototype._setValue_fromArray_setNeedsUpdate,k_.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class k0{constructor(){this.uuid=cb(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let a={};this._indicesByUUID=a;for(let b=0,c=arguments.length;b!==c;++b)a[arguments[b].uuid]=b;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let a=this._objects,b=this._indicesByUUID,c=this._paths,d=this._parsedPaths,e=this._bindings,f=e.length,g,h=a.length,i=this.nCachedObjects_;for(let j=0,k=arguments.length;j!==k;++j){let l=arguments[j],m=l.uuid,n=b[m];if(void 0===n){n=h++,b[m]=n,a.push(l);for(let o=0,p=f;o!==p;++o)e[o].push(new k_(l,c[o],d[o]))}else if(n<i){g=a[n];let q=--i,r=a[q];b[r.uuid]=n,a[n]=r,b[m]=q,a[q]=l;for(let s=0,t=f;s!==t;++s){let u=e[s],v=u[q],w=u[n];u[n]=v,void 0===w&&(w=new k_(l,c[s],d[s])),u[q]=w}}else a[n]!==g&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=i}remove(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_;for(let f=0,g=arguments.length;f!==g;++f){let h=arguments[f],i=h.uuid,j=b[i];if(void 0!==j&&j>=e){let k=e++,l=a[k];b[l.uuid]=j,a[j]=l,b[i]=k,a[k]=h;for(let m=0,n=d;m!==n;++m){let o=c[m],p=o[k],q=o[j];o[j]=p,o[k]=q}}}this.nCachedObjects_=e}uncache(){let a=this._objects,b=this._indicesByUUID,c=this._bindings,d=c.length,e=this.nCachedObjects_,f=a.length;for(let g=0,h=arguments.length;g!==h;++g){let i=arguments[g],j=i.uuid,k=b[j];if(void 0!==k){if(delete b[j],k<e){let l=--e,m=a[l],n=--f,o=a[n];b[m.uuid]=k,a[k]=m,b[o.uuid]=l,a[l]=o,a.pop();for(let p=0,q=d;p!==q;++p){let r=c[p],s=r[l],t=r[n];r[k]=s,r[l]=t,r.pop()}}else{let u=--f,v=a[u];u>0&&(b[v.uuid]=k),a[k]=v,a.pop();for(let w=0,x=d;w!==x;++w){let y=c[w];y[k]=y[u],y.pop()}}}}this.nCachedObjects_=e}subscribe_(a,b){let c=this._bindingsIndicesByPath,d=c[a],e=this._bindings;if(void 0!==d)return e[d];let f=this._paths,g=this._parsedPaths,h=this._objects,i=h.length,j=this.nCachedObjects_,k=Array(i);d=e.length,c[a]=d,f.push(a),g.push(b),e.push(k);for(let l=j,m=h.length;l!==m;++l){let n=h[l];k[l]=new k_(n,a,b)}return k}unsubscribe_(a){let b=this._bindingsIndicesByPath,c=b[a];if(void 0!==c){let d=this._paths,e=this._parsedPaths,f=this._bindings,g=f.length-1,h=f[g],i=a[g];b[i]=c,f[c]=h,f.pop(),e[c]=e[g],e.pop(),d[c]=d[g],d.pop()}}}k0.prototype.isAnimationObjectGroup=!0;class k1{constructor(a,b,c=null,d=b.blendMode){this._mixer=a,this._clip=b,this._localRoot=c,this.blendMode=d;let e=b.tracks,f=e.length,g=Array(f),h={endingStart:bo,endingEnd:bo};for(let i=0;i!==f;++i){let j=e[i].createInterpolant(null);g[i]=j,j.settings=h}this._interpolantSettings=h,this._interpolants=g,this._propertyBindings=Array(f),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=bj,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){return this._startTime=a,this}setLoop(a,b){return this.loop=a,this.repetitions=b,this}setEffectiveWeight(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(a,b,c){if(a.fadeOut(b),this.fadeIn(b),c){let d=this._clip.duration,e=a._clip.duration,f=e/d,g=d/e;a.warp(1,f,b),this.warp(g,1,b)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){let a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}setEffectiveTimeScale(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){return this.timeScale=this._clip.duration/a,this.stopWarping()}syncWith(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(a,b,c){let d=this._mixer,e=d.time,f=this.timeScale,g=this._timeScaleInterpolant;null===g&&(g=d._lendControlInterpolant(),this._timeScaleInterpolant=g);let h=g.parameterPositions,i=g.sampleValues;return h[0]=e,h[1]=e+c,i[0]=a/f,i[1]=b/f,this}stopWarping(){let a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,b,c,d){if(!this.enabled){this._updateWeight(a);return}let e=this._startTime;if(null!==e){let f=(a-e)*c;if(f<0||0===c)return;this._startTime=null,b=c*f}b*=this._updateTimeScale(a);let g=this._updateTime(b),h=this._updateWeight(a);if(h>0){let i=this._interpolants,j=this._propertyBindings;if(this.blendMode===bs)for(let k=0,l=i.length;k!==l;++k)i[k].evaluate(g),j[k].accumulateAdditive(h);else for(let m=0,n=i.length;m!==n;++m)i[m].evaluate(g),j[m].accumulate(d,h)}}_updateWeight(a){let b=0;if(this.enabled){b=this.weight;let c=this._weightInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=b,b}_updateTimeScale(a){let b=0;if(!this.paused){b=this.timeScale;let c=this._timeScaleInterpolant;if(null!==c){let d=c.evaluate(a)[0];b*=d,a>c.parameterPositions[1]&&(this.stopWarping(),0===b?this.paused=!0:this.timeScale=b)}}return this._effectiveTimeScale=b,b}_updateTime(a){let b=this._clip.duration,c=this.loop,d=this.time+a,e=this._loopCount,f=c===bk;if(0===a)return-1===e?d:f&&(1&e)==1?b-d:d;if(c===bi){-1===e&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(d>=b)d=b;else if(d<0)d=0;else{this.time=d;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a<0?-1:1})}}else{if(-1===e&&(a>=0?(e=0,this._setEndings(!0,0===this.repetitions,f)):this._setEndings(0===this.repetitions,!0,f)),d>=b||d<0){let g=Math.floor(d/b);d-=b*g,e+=Math.abs(g);let h=this.repetitions-e;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,d=a>0?b:0,this.time=d,this._mixer.dispatchEvent({type:"finished",action:this,direction:a>0?1:-1});else{if(1===h){let i=a<0;this._setEndings(i,!i,f)}else this._setEndings(!1,!1,f);this._loopCount=e,this.time=d,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:g})}}else this.time=d;if(f&&(1&e)==1)return b-d}return d}_setEndings(a,b,c){let d=this._interpolantSettings;c?(d.endingStart=bp,d.endingEnd=bp):(a?d.endingStart=this.zeroSlopeAtStart?bp:bo:d.endingStart=bq,b?d.endingEnd=this.zeroSlopeAtEnd?bp:bo:d.endingEnd=bq)}_scheduleFading(a,b,c){let d=this._mixer,e=d.time,f=this._weightInterpolant;null===f&&(f=d._lendControlInterpolant(),this._weightInterpolant=f);let g=f.parameterPositions,h=f.sampleValues;return g[0]=e,h[0]=b,g[1]=e+a,h[1]=c,this}}class k2 extends b5{constructor(a){super(),this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(a,b){let c=a._localRoot||this._root,d=a._clip.tracks,e=d.length,f=a._propertyBindings,g=a._interpolants,h=c.uuid,i=this._bindingsByRootAndName,j=i[h];void 0===j&&(j={},i[h]=j);for(let k=0;k!==e;++k){let l=d[k],m=l.name,n=j[m];if(void 0!==n)++n.referenceCount,f[k]=n;else{if(void 0!==(n=f[k])){null===n._cacheIndex&&(++n.referenceCount,this._addInactiveBinding(n,h,m));continue}let o=b&&b._propertyBindings[k].binding.parsedPath;n=new kQ(k_.create(c,m,o),l.ValueTypeName,l.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,h,m),f[k]=n}g[k].resultBuffer=n.buffer}}_activateAction(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){let b=(a._localRoot||this._root).uuid,c=a._clip.uuid,d=this._actionsByClip[c];this._bindAction(a,d&&d.knownActions[0]),this._addInactiveAction(a,c,b)}let e=a._propertyBindings;for(let f=0,g=e.length;f!==g;++f){let h=e[f];0==h.useCount++&&(this._lendBinding(h),h.saveOriginalState())}this._lendAction(a)}}_deactivateAction(a){if(this._isActiveAction(a)){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0==--e.useCount&&(e.restoreOriginalState(),this._takeBackBinding(e))}this._takeBackAction(a)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(a){let b=a._cacheIndex;return null!==b&&b<this._nActiveActions}_addInactiveAction(a,b,c){let d=this._actions,e=this._actionsByClip,f=e[b];if(void 0===f)f={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[b]=f;else{let g=f.knownActions;a._byClipCacheIndex=g.length,g.push(a)}a._cacheIndex=d.length,d.push(a),f.actionByRoot[c]=a}_removeInactiveAction(a){let b=this._actions,c=b[b.length-1],d=a._cacheIndex;c._cacheIndex=d,b[d]=c,b.pop(),a._cacheIndex=null;let e=a._clip.uuid,f=this._actionsByClip,g=f[e],h=g.knownActions,i=h[h.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j,h[j]=i,h.pop(),a._byClipCacheIndex=null;let k=g.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l],0===h.length&&delete f[e],this._removeInactiveBindingsForAction(a)}_removeInactiveBindingsForAction(a){let b=a._propertyBindings;for(let c=0,d=b.length;c!==d;++c){let e=b[c];0==--e.referenceCount&&this._removeInactiveBinding(e)}}_lendAction(a){let b=this._actions,c=a._cacheIndex,d=this._nActiveActions++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackAction(a){let b=this._actions,c=a._cacheIndex,d=--this._nActiveActions,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_addInactiveBinding(a,b,c){let d=this._bindingsByRootAndName,e=this._bindings,f=d[b];void 0===f&&(f={},d[b]=f),f[c]=a,a._cacheIndex=e.length,e.push(a)}_removeInactiveBinding(a){let b=this._bindings,c=a.binding,d=c.rootNode.uuid,e=c.path,f=this._bindingsByRootAndName,g=f[d],h=b[b.length-1],i=a._cacheIndex;h._cacheIndex=i,b[i]=h,b.pop(),delete g[e],0===Object.keys(g).length&&delete f[d]}_lendBinding(a){let b=this._bindings,c=a._cacheIndex,d=this._nActiveBindings++,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_takeBackBinding(a){let b=this._bindings,c=a._cacheIndex,d=--this._nActiveBindings,e=b[d];a._cacheIndex=d,b[d]=a,e._cacheIndex=c,b[c]=e}_lendControlInterpolant(){let a=this._controlInterpolants,b=this._nActiveControlInterpolants++,c=a[b];return void 0===c&&((c=new jF(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=b,a[b]=c),c}_takeBackControlInterpolant(a){let b=this._controlInterpolants,c=a.__cacheIndex,d=--this._nActiveControlInterpolants,e=b[d];a.__cacheIndex=d,b[d]=a,e.__cacheIndex=c,b[c]=e}clipAction(a,b,c){let d=b||this._root,e=d.uuid,f="string"==typeof a?jP.findByName(d,a):a,g=null!==f?f.uuid:a,h=this._actionsByClip[g],i=null;if(void 0===c&&(c=null!==f?f.blendMode:br),void 0!==h){let j=h.actionByRoot[e];if(void 0!==j&&j.blendMode===c)return j;i=h.knownActions[0],null===f&&(f=i._clip)}if(null===f)return null;let k=new k1(this,f,b,c);return this._bindAction(k,i),this._addInactiveAction(k,g,e),k}existingAction(a,b){let c=b||this._root,d=c.uuid,e="string"==typeof a?jP.findByName(c,a):a,f=e?e.uuid:a,g=this._actionsByClip[f];return void 0!==g&&g.actionByRoot[d]||null}stopAllAction(){let a=this._actions,b=this._nActiveActions;for(let c=b-1;c>=0;--c)a[c].stop();return this}update(a){a*=this.timeScale;let b=this._actions,c=this._nActiveActions,d=this.time+=a,e=Math.sign(a),f=this._accuIndex^=1;for(let g=0;g!==c;++g){let h=b[g];h._update(d,a,e,f)}let i=this._bindings,j=this._nActiveBindings;for(let k=0;k!==j;++k)i[k].apply(f);return this}setTime(a){this.time=0;for(let b=0;b<this._actions.length;b++)this._actions[b].time=0;return this.update(a)}getRoot(){return this._root}uncacheClip(a){let b=this._actions,c=a.uuid,d=this._actionsByClip,e=d[c];if(void 0!==e){let f=e.knownActions;for(let g=0,h=f.length;g!==h;++g){let i=f[g];this._deactivateAction(i);let j=i._cacheIndex,k=b[b.length-1];i._cacheIndex=null,i._byClipCacheIndex=null,k._cacheIndex=j,b[j]=k,b.pop(),this._removeInactiveBindingsForAction(i)}delete d[c]}}uncacheRoot(a){let b=a.uuid,c=this._actionsByClip;for(let d in c){let e=c[d].actionByRoot,f=e[b];void 0!==f&&(this._deactivateAction(f),this._removeInactiveAction(f))}let g=this._bindingsByRootAndName,h=g[b];if(void 0!==h)for(let i in h){let j=h[i];j.restoreOriginalState(),this._removeInactiveBinding(j)}}uncacheAction(a,b){let c=this.existingAction(a,b);null!==c&&(this._deactivateAction(c),this._removeInactiveAction(c))}}k2.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class k3{constructor(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}clone(){return new k3(void 0===this.value.clone?this.value:this.value.clone())}}class k4 extends g6{constructor(a,b,c=1){super(a,b),this.meshPerAttribute=c}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}clone(a){let b=super.clone(a);return b.meshPerAttribute=this.meshPerAttribute,b}toJSON(a){let b=super.toJSON(a);return b.isInstancedInterleavedBuffer=!0,b.meshPerAttribute=this.meshPerAttribute,b}}k4.prototype.isInstancedInterleavedBuffer=!0;class k5{constructor(a,b,c,d,e){this.buffer=a,this.type=b,this.itemSize=c,this.elementSize=d,this.count=e,this.version=0}set needsUpdate(a){!0===a&&this.version++}setBuffer(a){return this.buffer=a,this}setType(a,b){return this.type=a,this.elementSize=b,this}setItemSize(a){return this.itemSize=a,this}setCount(a){return this.count=a,this}}k5.prototype.isGLBufferAttribute=!0;class k6{constructor(a,b,c=0,d=1/0){this.ray=new di(a,b),this.near=c,this.far=d,this.camera=null,this.layers=new dv,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(a,b){this.ray.set(a,b)}setFromCamera(a,b){b.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(b.matrixWorld),this.ray.direction.set(a.x,a.y,.5).unproject(b).sub(this.ray.origin).normalize(),this.camera=b):b.isOrthographicCamera?(this.ray.origin.set(a.x,a.y,(b.near+b.far)/(b.near-b.far)).unproject(b),this.ray.direction.set(0,0,-1).transformDirection(b.matrixWorld),this.camera=b):console.error("THREE.Raycaster: Unsupported camera type: "+b.type)}intersectObject(a,b=!0,c=[]){return k8(a,this,c,b),c.sort(k7),c}intersectObjects(a,b=!0,c=[]){for(let d=0,e=a.length;d<e;d++)k8(a[d],this,c,b);return c.sort(k7),c}}function k7(a,b){return a.distance-b.distance}function k8(a,b,c,d){if(a.layers.test(b.layers)&&a.raycast(b,c),!0===d){let e=a.children;for(let f=0,g=e.length;f<g;f++)k8(e[f],b,c,!0)}}class k9{constructor(a=1,b=0,c=0){return this.radius=a,this.phi=b,this.theta=c,this}set(a,b,c){return this.radius=a,this.phi=b,this.theta=c,this}copy(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+b*b+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(cc(b/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class la{constructor(a=1,b=0,c=0){return this.radius=a,this.theta=b,this.y=c,this}set(a,b,c){return this.radius=a,this.theta=b,this.y=c,this}copy(a){return this.radius=a.radius,this.theta=a.theta,this.y=a.y,this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+c*c),this.theta=Math.atan2(a,c),this.y=b,this}clone(){return new this.constructor().copy(this)}}let lb=new cl;class lc{constructor(a=new cl(Infinity,Infinity),b=new cl(-1/0,-1/0)){this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromPoints(a){this.makeEmpty();for(let b=0,c=a.length;b<c;b++)this.expandByPoint(a[b]);return this}setFromCenterAndSize(a,b){let c=lb.copy(b).multiplyScalar(.5);return this.min.copy(a).sub(c),this.max.copy(a).add(c),this}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(a){return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=lb.copy(a).clamp(this.min,this.max);return b.sub(a).length()}intersect(a){return this.min.max(a.min),this.max.min(a.max),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}lc.prototype.isBox2=!0;let ld=new cQ,le=new cQ;class lf{constructor(a=new cQ,b=new cQ){this.start=a,this.end=b}set(a,b){return this.start.copy(a),this.end.copy(b),this}copy(a){return this.start.copy(a.start),this.end.copy(a.end),this}getCenter(a){return a.addVectors(this.start,this.end).multiplyScalar(.5)}delta(a){return a.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(a,b){return this.delta(b).multiplyScalar(a).add(this.start)}closestPointToPointParameter(a,b){ld.subVectors(a,this.start),le.subVectors(this.end,this.start);let c=le.dot(le),d=le.dot(ld),e=d/c;return b&&(e=cc(e,0,1)),e}closestPointToPoint(a,b,c){let d=this.closestPointToPointParameter(a,b);return this.delta(c).multiplyScalar(d).add(this.start)}applyMatrix4(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this}equals(a){return a.start.equals(this.start)&&a.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}let lg=new cQ;class lh extends dJ{constructor(a,b){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=b;let c=new eg,d=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,f=1;e<32;e++,f++){let g=e/32*Math.PI*2,h=f/32*Math.PI*2;d.push(Math.cos(g),Math.sin(g),1,Math.cos(h),Math.sin(h),1)}c.setAttribute("position",new d7(d,3));let i=new hJ({fog:!1,toneMapped:!1});this.cone=new hS(c,i),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let a=this.light.distance?this.light.distance:1e3,b=a*Math.tan(this.light.angle);this.cone.scale.set(b,b,a),lg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(lg),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let li=new cQ,lj=new dj,lk=new dj;class ll extends hS{constructor(a){let b=lm(a),c=new eg,d=[],e=[],f=new cB(0,0,1),g=new cB(0,1,0);for(let h=0;h<b.length;h++){let i=b[h];i.parent&&i.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(g.r,g.g,g.b))}c.setAttribute("position",new d7(d,3)),c.setAttribute("color",new d7(e,3));let j=new hJ({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(c,j),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=a,this.bones=b,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(a){let b=this.bones,c=this.geometry,d=c.getAttribute("position");lk.copy(this.root.matrixWorld).invert();for(let e=0,f=0;e<b.length;e++){let g=b[e];g.parent&&g.parent.isBone&&(lj.multiplyMatrices(lk,g.matrixWorld),li.setFromMatrixPosition(lj),d.setXYZ(f,li.x,li.y,li.z),lj.multiplyMatrices(lk,g.parent.matrixWorld),li.setFromMatrixPosition(lj),d.setXYZ(f+1,li.x,li.y,li.z),f+=2)}c.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(a)}}function lm(a){let b=[];!0===a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,lm(a.children[c]));return b}class ln extends ey{constructor(a,b,c){let d=new jj(b,4,2),e=new dX({wireframe:!0,fog:!1,toneMapped:!1});super(d,e),this.light=a,this.light.updateMatrixWorld(),this.color=c,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let lo=new cQ,lp=new cB,lq=new cB;class lr extends dJ{constructor(a,b,c){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c;let d=new jf(b);d.rotateY(.5*Math.PI),this.material=new dX({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let e=d.getAttribute("position"),f=new Float32Array(3*e.count);d.setAttribute("color",new d$(f,3)),this.add(new ey(d,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let a=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let b=a.geometry.getAttribute("color");lp.copy(this.light.color),lq.copy(this.light.groundColor);for(let c=0,d=b.count;c<d;c++){let e=c<d/2?lp:lq;b.setXYZ(c,e.r,e.g,e.b)}b.needsUpdate=!0}a.lookAt(lo.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ls extends hS{constructor(a=10,b=10,c=4473924,d=8947848){c=new cB(c),d=new cB(d);let e=b/2,f=a/b,g=a/2,h=[],i=[];for(let j=0,k=0,l=-g;j<=b;j++,l+=f){h.push(-g,0,l,g,0,l),h.push(l,0,-g,l,0,g);let m=j===e?c:d;m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3,m.toArray(i,k),k+=3}let n=new eg;n.setAttribute("position",new d7(h,3)),n.setAttribute("color",new d7(i,3));let o=new hJ({vertexColors:!0,toneMapped:!1});super(n,o),this.type="GridHelper"}}class lt extends hS{constructor(a=10,b=16,c=8,d=64,e=4473924,f=8947848){e=new cB(e),f=new cB(f);let g=[],h=[];for(let i=0;i<=b;i++){let j=i/b*(2*Math.PI),k=Math.sin(j)*a,l=Math.cos(j)*a;g.push(0,0,0),g.push(k,0,l);let m=1&i?e:f;h.push(m.r,m.g,m.b),h.push(m.r,m.g,m.b)}for(let n=0;n<=c;n++){let o=1&n?e:f,p=a-a/c*n;for(let q=0;q<d;q++){let r=q/d*(2*Math.PI),s=Math.sin(r)*p,t=Math.cos(r)*p;g.push(s,0,t),h.push(o.r,o.g,o.b),r=(q+1)/d*(2*Math.PI),s=Math.sin(r)*p,t=Math.cos(r)*p,g.push(s,0,t),h.push(o.r,o.g,o.b)}}let u=new eg;u.setAttribute("position",new d7(g,3)),u.setAttribute("color",new d7(h,3));let v=new hJ({vertexColors:!0,toneMapped:!1});super(u,v),this.type="PolarGridHelper"}}let lu=new cQ,lv=new cQ,lw=new cQ;class lx extends dJ{constructor(a,b,c){super(),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.color=c,void 0===b&&(b=1);let d=new eg;d.setAttribute("position",new d7([-b,b,0,b,b,0,b,-b,0,-b,-b,0,-b,b,0],3));let e=new hJ({fog:!1,toneMapped:!1});this.lightPlane=new hP(d,e),this.add(this.lightPlane),(d=new eg).setAttribute("position",new d7([0,0,0,0,0,1],3)),this.targetLine=new hP(d,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){lu.setFromMatrixPosition(this.light.matrixWorld),lv.setFromMatrixPosition(this.light.target.matrixWorld),lw.subVectors(lv,lu),this.lightPlane.lookAt(lv),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(lv),this.targetLine.scale.z=lw.length()}}let ly=new cQ,lz=new eF;class lA extends hS{constructor(a){let b=new eg,c=new hJ({color:16777215,vertexColors:!0,toneMapped:!1}),d=[],e=[],f={},g=new cB(16755200),h=new cB(16711680),i=new cB(43775),j=new cB(16777215),k=new cB(3355443);function l(a,b,c){m(a,c),m(b,c)}function m(a,b){d.push(0,0,0),e.push(b.r,b.g,b.b),void 0===f[a]&&(f[a]=[]),f[a].push(d.length/3-1)}l("n1","n2",g),l("n2","n4",g),l("n4","n3",g),l("n3","n1",g),l("f1","f2",g),l("f2","f4",g),l("f4","f3",g),l("f3","f1",g),l("n1","f1",g),l("n2","f2",g),l("n3","f3",g),l("n4","f4",g),l("p","n1",h),l("p","n2",h),l("p","n3",h),l("p","n4",h),l("u1","u2",i),l("u2","u3",i),l("u3","u1",i),l("c","t",j),l("p","c",k),l("cn1","cn2",k),l("cn3","cn4",k),l("cf1","cf2",k),l("cf3","cf4",k),b.setAttribute("position",new d7(d,3)),b.setAttribute("color",new d7(e,3)),super(b,c),this.type="CameraHelper",this.camera=a,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update()}update(){let a=this.geometry,b=this.pointMap;lz.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lB("c",b,a,lz,0,0,-1),lB("t",b,a,lz,0,0,1),lB("n1",b,a,lz,-1,-1,-1),lB("n2",b,a,lz,1,-1,-1),lB("n3",b,a,lz,-1,1,-1),lB("n4",b,a,lz,1,1,-1),lB("f1",b,a,lz,-1,-1,1),lB("f2",b,a,lz,1,-1,1),lB("f3",b,a,lz,-1,1,1),lB("f4",b,a,lz,1,1,1),lB("u1",b,a,lz,.7,1.1,-1),lB("u2",b,a,lz,-.7,1.1,-1),lB("u3",b,a,lz,0,2,-1),lB("cf1",b,a,lz,-1,0,1),lB("cf2",b,a,lz,1,0,1),lB("cf3",b,a,lz,0,-1,1),lB("cf4",b,a,lz,0,1,1),lB("cn1",b,a,lz,-1,0,-1),lB("cn2",b,a,lz,1,0,-1),lB("cn3",b,a,lz,0,-1,-1),lB("cn4",b,a,lz,0,1,-1),a.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function lB(a,b,c,d,e,f,g){ly.set(e,f,g).unproject(d);let h=b[a];if(void 0!==h){let i=c.getAttribute("position");for(let j=0,k=h.length;j<k;j++)i.setXYZ(h[j],ly.x,ly.y,ly.z)}}let lC=new cT;class lD extends hS{constructor(a,b=16776960){let c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new Float32Array(24),e=new eg;e.setIndex(new d$(c,1)),e.setAttribute("position",new d$(d,3)),super(e,new hJ({color:b,toneMapped:!1})),this.object=a,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(a){if(void 0!==a&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&lC.setFromObject(this.object),lC.isEmpty())return;let b=lC.min,c=lC.max,d=this.geometry.attributes.position,e=d.array;e[0]=c.x,e[1]=c.y,e[2]=c.z,e[3]=b.x,e[4]=c.y,e[5]=c.z,e[6]=b.x,e[7]=b.y,e[8]=c.z,e[9]=c.x,e[10]=b.y,e[11]=c.z,e[12]=c.x,e[13]=c.y,e[14]=b.z,e[15]=b.x,e[16]=c.y,e[17]=b.z,e[18]=b.x,e[19]=b.y,e[20]=b.z,e[21]=c.x,e[22]=b.y,e[23]=b.z,d.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(a){return this.object=a,this.update(),this}copy(a){return hS.prototype.copy.call(this,a),this.object=a.object,this}}class lE extends hS{constructor(a,b=16776960){let c=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),d=new eg;d.setIndex(new d$(c,1)),d.setAttribute("position",new d7([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(d,new hJ({color:b,toneMapped:!1})),this.box=a,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(a){let b=this.box;b.isEmpty()||(b.getCenter(this.position),b.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(a))}}class lF extends hP{constructor(a,b=1,c=16776960){let d=c,e=new eg;e.setAttribute("position",new d7([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),e.computeBoundingSphere(),super(e,new hJ({color:d,toneMapped:!1})),this.type="PlaneHelper",this.plane=a,this.size=b;let f=new eg;f.setAttribute("position",new d7([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),f.computeBoundingSphere(),this.add(new ey(f,new dX({color:d,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(a){let b=-this.plane.constant;1e-8>Math.abs(b)&&(b=1e-8),this.scale.set(.5*this.size,.5*this.size,b),this.children[0].material.side=b<0?p:o,this.lookAt(this.plane.normal),super.updateMatrixWorld(a)}}let lG=new cQ,lH,lI;class lJ extends dJ{constructor(a=new cQ(0,0,1),b=new cQ(0,0,0),c=1,d=16776960,e=.2*c,f=.2*e){super(),this.type="ArrowHelper",void 0===lH&&((lH=new eg).setAttribute("position",new d7([0,0,0,0,1,0],3)),(lI=new iu(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(b),this.line=new hP(lH,new hJ({color:d,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ey(lI,new dX({color:d,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c,e,f)}setDirection(a){if(a.y>.99999)this.quaternion.set(0,0,0,1);else if(a.y<-.99999)this.quaternion.set(1,0,0,0);else{lG.set(a.z,0,-a.x).normalize();let b=Math.acos(a.y);this.quaternion.setFromAxisAngle(lG,b)}}setLength(a,b=.2*a,c=.2*b){this.line.scale.set(1,Math.max(1e-4,a-b),1),this.line.updateMatrix(),this.cone.scale.set(c,b,c),this.cone.position.y=a,this.cone.updateMatrix()}setColor(a){this.line.material.color.set(a),this.cone.material.color.set(a)}copy(a){return super.copy(a,!1),this.line.copy(a.line),this.cone.copy(a.cone),this}}class lK extends hS{constructor(a=1){let b=new eg;b.setAttribute("position",new d7([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a],3)),b.setAttribute("color",new d7([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let c=new hJ({vertexColors:!0,toneMapped:!1});super(b,c),this.type="AxesHelper"}setColors(a,b,c){let d=new cB,e=this.geometry.attributes.color.array;return d.set(a),d.toArray(e,0),d.toArray(e,3),d.set(b),d.toArray(e,6),d.toArray(e,9),d.set(c),d.toArray(e,12),d.toArray(e,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class lL{constructor(){this.type="ShapePath",this.color=new cB,this.subPaths=[],this.currentPath=null}moveTo(a,b){return this.currentPath=new iq,this.subPaths.push(this.currentPath),this.currentPath.moveTo(a,b),this}lineTo(a,b){return this.currentPath.lineTo(a,b),this}quadraticCurveTo(a,b,c,d){return this.currentPath.quadraticCurveTo(a,b,c,d),this}bezierCurveTo(a,b,c,d,e,f){return this.currentPath.bezierCurveTo(a,b,c,d,e,f),this}splineThru(a){return this.currentPath.splineThru(a),this}toShapes(a,b){function c(a){let b=[];for(let c=0,d=a.length;c<d;c++){let e=a[c],f=new iD;f.curves=e.curves,b.push(f)}return b}function d(a,b){let c=b.length,d=!1;for(let e=c-1,f=0;f<c;e=f++){let g=b[e],h=b[f],i=h.x-g.x,j=h.y-g.y;if(Math.abs(j)>Number.EPSILON){if(j<0&&(g=b[f],i=-i,h=b[e],j=-j),a.y<g.y||a.y>h.y)continue;if(a.y===g.y){if(a.x===g.x)return!0}else{let k=j*(a.x-g.x)-i*(a.y-g.y);if(0===k)return!0;if(k<0)continue;d=!d}}else{if(a.y!==g.y)continue;if(h.x<=a.x&&a.x<=g.x||g.x<=a.x&&a.x<=h.x)return!0}}return d}let e=i8.isClockWise,f=this.subPaths;if(0===f.length)return[];if(!0===b)return c(f);let g,h,i,j=[];if(1===f.length)return h=f[0],(i=new iD).curves=h.curves,j.push(i),j;let k=!e(f[0].getPoints());k=a?!k:k;let l=[],m=[],n=[],o=0,p;m[o]=void 0,n[o]=[];for(let q=0,r=f.length;q<r;q++)g=e(p=(h=f[q]).getPoints()),(g=a?!g:g)?(!k&&m[o]&&o++,m[o]={s:new iD,p:p},m[o].s.curves=h.curves,k&&o++,n[o]=[]):n[o].push({h:h,p:p[0]});if(!m[0])return c(f);if(m.length>1){let s=!1,t=0;for(let u=0,v=m.length;u<v;u++)l[u]=[];for(let w=0,x=m.length;w<x;w++){let y=n[w];for(let z=0;z<y.length;z++){let A=y[z],B=!0;for(let C=0;C<m.length;C++)d(A.p,m[C].p)&&(w!==C&&t++,B?(B=!1,l[C].push(A)):s=!0);B&&l[w].push(A)}}t>0&&!1===s&&(n=l)}let D;for(let E=0,F=m.length;E<F;E++){i=m[E].s,j.push(i),D=n[E];for(let G=0,H=D.length;G<H;G++)i.holes.push(D[G].h)}return j}}class lM{static toHalfFloat(a){Math.abs(a)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),a=cc(a,-65504,65504),lO[0]=a;let b=lP[0],c=b>>23&511;return lQ[c]+((8388607&b)>>lR[c])}static fromHalfFloat(a){let b=a>>10;return lP[0]=lU[lW[b]+(1023&a)]+lV[b],lO[0]}}let lN=new ArrayBuffer(4),lO=new Float32Array(lN),lP=new Uint32Array(lN),lQ=new Uint32Array(512),lR=new Uint32Array(512);for(let lS=0;lS<256;++lS){let lT=lS-127;lT<-27?(lQ[lS]=0,lQ[256|lS]=32768,lR[lS]=24,lR[256|lS]=24):lT<-14?(lQ[lS]=1024>>-lT-14,lQ[256|lS]=1024>>-lT-14|32768,lR[lS]=-lT-1,lR[256|lS]=-lT-1):lT<=15?(lQ[lS]=lT+15<<10,lQ[256|lS]=lT+15<<10|32768,lR[lS]=13,lR[256|lS]=13):lT<128?(lQ[lS]=31744,lQ[256|lS]=64512,lR[lS]=24,lR[256|lS]=24):(lQ[lS]=31744,lQ[256|lS]=64512,lR[lS]=13,lR[256|lS]=13)}let lU=new Uint32Array(2048),lV=new Uint32Array(64),lW=new Uint32Array(64);for(let lX=1;lX<1024;++lX){let lY=lX<<13,lZ=0;for(;(8388608&lY)==0;)lY<<=1,lZ-=8388608;lY&=-8388609,lZ+=947912704,lU[lX]=lY|lZ}for(let l$=1024;l$<2048;++l$)lU[l$]=939524096+(l$-1024<<13);for(let l_=1;l_<31;++l_)lV[l_]=l_<<23;lV[31]=1199570944,lV[32]=2147483648;for(let l0=33;l0<63;++l0)lV[l0]=2147483648+(l0-32<<23);lV[63]=3347054592;for(let l1=1;l1<64;++l1)32!==l1&&(lW[l1]=1024);let l2=0,l3=1,l4=0,l5=1,l6=2;function l7(a){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),a}function l8(a=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),a.isMultiMaterial=!0,a.materials=a,a.clone=function(){return a.slice()},a}class l9 extends hZ{constructor(a,b){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(a,b)}}class ma extends hn{constructor(a){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(a)}}class mb extends hZ{constructor(a,b){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(a,b)}}class mc extends hU{constructor(a){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(a)}}class md extends hU{constructor(a){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(a)}}class me extends hU{constructor(a){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(a)}}class mf extends cQ{constructor(a,b,c){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(a,b,c)}}class mg extends d${constructor(a,b){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(a,b),this.setUsage(bW)}}class mh extends d_{constructor(a,b){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(a,b)}}class mi extends d0{constructor(a,b){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(a,b)}}class mj extends d1{constructor(a,b){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(a,b)}}class mk extends d2{constructor(a,b){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(a,b)}}class ml extends d3{constructor(a,b){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(a,b)}}class mm extends d4{constructor(a,b){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(a,b)}}class mn extends d5{constructor(a,b){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(a,b)}}class mo extends d7{constructor(a,b){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(a,b)}}class mp extends d8{constructor(a,b){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(a,b)}}h3.create=function(a,b){return console.log("THREE.Curve.create() has been deprecated"),a.prototype=Object.create(h3.prototype),a.prototype.constructor=a,a.prototype.getPoint=b,a},iq.prototype.fromPoints=function(a){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(a)};class mq extends lK{constructor(a){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(a)}}class mr extends lD{constructor(a,b){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(a,b)}}class ms extends hS{constructor(a,b){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new iC(a.geometry),new hJ({color:void 0!==b?b:16777215}))}}ls.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},ll.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class mt extends hS{constructor(a,b){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new jo(a.geometry),new hJ({color:void 0!==b?b:16777215}))}}jU.prototype.extractUrlBase=function(a){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),kl.extractUrlBase(a)},jU.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class mu extends jW{constructor(a){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(a)}}class mv extends j_{constructor(a){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(a)}}lc.prototype.center=function(a){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(a)},lc.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},lc.prototype.isIntersectionBox=function(a){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},lc.prototype.size=function(a){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(a)},cT.prototype.center=function(a){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(a)},cT.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},cT.prototype.isIntersectionBox=function(a){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},cT.prototype.isIntersectionSphere=function(a){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},cT.prototype.size=function(a){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(a)},du.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},da.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},eQ.prototype.setFromMatrix=function(a){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(a)},lf.prototype.center=function(a){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(a)},cm.prototype.flattenToArrayOffset=function(a,b){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},cm.prototype.multiplyVector3=function(a){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},cm.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},cm.prototype.applyToBufferAttribute=function(a){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},cm.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},cm.prototype.getInverse=function(a){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(a).invert()},dj.prototype.extractPosition=function(a){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},dj.prototype.flattenToArrayOffset=function(a,b){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(a,b)},dj.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new cQ().setFromMatrixColumn(this,3)},dj.prototype.setRotationFromQuaternion=function(a){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},dj.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},dj.prototype.multiplyVector3=function(a){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dj.prototype.multiplyVector4=function(a){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dj.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},dj.prototype.rotateAxis=function(a){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},dj.prototype.crossVector=function(a){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dj.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},dj.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},dj.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},dj.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},dj.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},dj.prototype.applyToBufferAttribute=function(a){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},dj.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},dj.prototype.makeFrustum=function(a,b,c,d,e,f){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(a,b,d,c,e,f)},dj.prototype.getInverse=function(a){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(a).invert()},eN.prototype.isIntersectionLine=function(a){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(a)},cP.prototype.multiplyVector3=function(a){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},cP.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},di.prototype.isIntersectionBox=function(a){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(a)},di.prototype.isIntersectionPlane=function(a){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(a)},di.prototype.isIntersectionSphere=function(a){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(a)},dU.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},dU.prototype.barycoordFromPoint=function(a,b){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(a,b)},dU.prototype.midpoint=function(a){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(a)},dU.prototypenormal=function(a){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(a)},dU.prototype.plane=function(a){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(a)},dU.barycoordFromPoint=function(a,b,c,d,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),dU.getBarycoord(a,b,c,d,e)},dU.normal=function(a,b,c,d){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),dU.getNormal(a,b,c,d)},iD.prototype.extractAllPoints=function(a){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(a)},iD.prototype.extrude=function(a){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new jb(this,a)},iD.prototype.makeGeometry=function(a){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new jh(this,a)},cl.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},cl.prototype.distanceToManhattan=function(a){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},cl.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},cQ.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},cQ.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},cQ.prototype.getPositionFromMatrix=function(a){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},cQ.prototype.getScaleFromMatrix=function(a){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},cQ.prototype.getColumnFromMatrix=function(a,b){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(b,a)},cQ.prototype.applyProjection=function(a){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(a)},cQ.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},cQ.prototype.distanceToManhattan=function(a){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(a)},cQ.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},cI.prototype.fromAttribute=function(a,b,c){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(a,b,c)},cI.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},dJ.prototype.getChildByName=function(a){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a)},dJ.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},dJ.prototype.translate=function(a,b){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(b,a)},dJ.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},dJ.prototype.applyMatrix=function(a){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)},Object.defineProperties(dJ.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(a){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=a}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),ey.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(ey.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),bt},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),hx.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},eG.prototype.setLens=function(a,b){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==b&&(this.filmGauge=b),this.setFocalLength(a)},Object.defineProperties(j1.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(a){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=a}},shadowCameraLeft:{set:function(a){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=a}},shadowCameraRight:{set:function(a){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=a}},shadowCameraTop:{set:function(a){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=a}},shadowCameraBottom:{set:function(a){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=a}},shadowCameraNear:{set:function(a){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=a}},shadowCameraFar:{set:function(a){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=a}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(a){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=a}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(a){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=a}},shadowMapHeight:{set:function(a){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=a}}}),Object.defineProperties(d$.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===bW},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(bW)}}}),d$.prototype.setDynamic=function(a){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?bW:bV),this},d$.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},d$.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},eg.prototype.addIndex=function(a){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(a)},eg.prototype.addAttribute=function(a,b){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),b&&b.isBufferAttribute||b&&b.isInterleavedBufferAttribute)?"index"===a?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(b),this):this.setAttribute(a,b):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(a,new d$(arguments[1],arguments[2])))},eg.prototype.addDrawCall=function(a,b,c){void 0!==c&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(a,b)},eg.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},eg.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},eg.prototype.removeAttribute=function(a){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(a)},eg.prototype.applyMatrix=function(a){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(a)},Object.defineProperties(eg.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),g6.prototype.setDynamic=function(a){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===a?bW:bV),this},g6.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},jb.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},jb.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},jb.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},g5.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},k3.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(dW.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new cB}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=a===r}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(a){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=a}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(eE.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(a){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=a}}}),g1.prototype.clearTarget=function(a,b,c,d){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(a),this.clear(b,c,d)},g1.prototype.animate=function(a){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(a)},g1.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},g1.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},g1.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},g1.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},g1.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},g1.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},g1.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},g1.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},g1.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},g1.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},g1.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},g1.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},g1.prototype.enableScissorTest=function(a){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(a)},g1.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},g1.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},g1.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},g1.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},g1.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},g1.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},g1.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},g1.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},g1.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},g1.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(g1.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=a}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(a){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=a}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(a){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===a?bx:bw}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(gS.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class mw extends eJ{constructor(a,b,c){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(a,c)}}function mx(){console.error("THREE.CanvasRenderer has been removed")}function my(){console.error("THREE.JSONLoader has been removed.")}Object.defineProperties(cJ.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=a}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(a){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=a}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=a}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(a){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=a}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(a){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=a}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(a){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=a}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(a){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=a}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(a){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=a}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(a){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=a}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(a){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=a}}}),kJ.prototype.load=function(a){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let b=this,c=new kv;return c.load(a,function(a){b.setBuffer(a)}),this},kP.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},eH.prototype.updateCubeMap=function(a,b){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(a,b)},eH.prototype.clear=function(a,b,c,d){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(a,b,c,d)},cD.crossOrigin=void 0,cD.loadTexture=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let e=new j0;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},cD.loadTextureCube=function(a,b,c,d){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let e=new j$;e.setCrossOrigin(this.crossOrigin);let f=e.load(a,c,void 0,d);return b&&(f.mapping=b),f},cD.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},cD.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};let mz={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function mA(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}class mB extends eg{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class mC extends eg{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function mD(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function mE(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function mF(){console.error("THREE.ImmediateRenderObject has been removed.")}class mG extends cJ{constructor(a,b,c){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(a,b,c),this.samples=4}}class mH extends cK{constructor(a,b,c,d){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(a,b,c,d)}}class mI extends cM{constructor(a,b,c,d){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(a,b,c,d)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:d}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=d)}}])